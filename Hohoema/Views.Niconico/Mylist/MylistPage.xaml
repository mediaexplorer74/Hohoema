<Page
    x:Name="PageRoot"
    x:Class="Hohoema.Views.Pages.Niconico.Mylist.MylistPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:uwpControls="using:Microsoft.Toolkit.Uwp.UI.Controls"
  xmlns:i="using:Microsoft.Xaml.Interactivity"
  xmlns:core="using:Microsoft.Xaml.Interactions.Core"
  xmlns:controls="using:Hohoema.Views.Controls"
  xmlns:flyouts="using:Hohoema.Views.Flyouts"
  xmlns:videolistPage="using:Hohoema.Views.Controls.VideoList"
  xmlns:windowsStateTriggers="using:WindowsStateTriggers"
  xmlns:myConv="using:Hohoema.Views.Converters"
  xmlns:models="using:Hohoema.Models.Application"
  xmlns:i18nExt="using:I18NPortable.Xaml.Extensions" 
  DataContext="{x:Null}"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d"
    >
  
  <Grid>
    <videolistPage:VideoItemsListView ItemsSource="{x:Bind _vm.MylistItems, Mode=OneWay}" 
                                      ItemCommand="{x:Bind _vm.VideoPlayWithQueueCommand}" 
                                      ItemTemplate="{StaticResource VideoListItemControlDefaultTemplate}"
                                      RefreshCommand="{x:Bind _vm.RefreshCommand}" 
                                      PlaylistPassToFlyout="{x:Bind _vm.Mylist.Value, Mode=OneWay}" 
                                      x:Name="VideoItemsListView"
                                      >
      <videolistPage:VideoItemsListView.ItemContextFlyoutTemplate>
        <DataTemplate>
          <flyouts:VideoItemFlyout />
        </DataTemplate>
      </videolistPage:VideoItemsListView.ItemContextFlyoutTemplate>
      <videolistPage:VideoItemsListView.Header>
        <Grid x:Name="HeaderLayout" BorderThickness="0 0 0 1" BorderBrush="{StaticResource HohoemaLightBorderBrush}">
          <CommandBar x:Name="VideoListCommandBar" DefaultLabelPosition="Right" VerticalContentAlignment="Center">

            <CommandBar.Content>
              <controls:AppTitleBar Title="{x:Bind _vm.Title, Mode=OneWay}" />
            </CommandBar.Content>
            <CommandBar.PrimaryCommands>

              <AppBarToggleButton x:Name="ToggleMylistFavoriteButton" IsChecked="{x:Bind _vm.FollowContext.IsFollowing, Mode=TwoWay}" IsEnabled="{x:Bind _vm.FollowContext.NowChanging, Mode=OneWay, Converter={StaticResource BoolNegation}}" Visibility="Collapsed" Icon="Favorite" Label="{i18nExt:Localize Key=Follow}" />

              <AppBarElementContainer IsEnabled="False" IsTabStop="False">
                <StackPanel Orientation="Horizontal">

                  <StackPanel Orientation="Horizontal" Margin="0 0 0 0" Visibility="{x:Bind _vm.UserName, Mode=OneWay, Converter={StaticResource NotNullToVisibility}}">
                    <TextBlock FontSize="14">
                        <Run Text="{i18nExt:Localize Key=ContentOwner}" /> : <Run Text="{x:Bind _vm.UserName, Mode=OneWay}" /></TextBlock>
                    <Border x:Name="DefaultMylistRegistrationCount" Visibility="Collapsed" Margin="8 0 0 0">
                      <TextBlock>
                        (<Run Text="{i18nExt:Localize Key=MylistRegisteredCount}" />:<Run Text="{x:Bind _vm.DeflistRegistrationCount, Mode=OneWay}" /> <Run Text="{i18nExt:Localize Key=MylistRegisteredCountLimit}" />:<Run Text="{Binding DeflistRegistrationCapacity}" />)</TextBlock>
                    </Border>
                    <Border x:Name="MylistRegistrationCount" Visibility="Collapsed" Margin="8 0 0 0">
                      <TextBlock>
                        (<Run Text="{i18nExt:Localize Key=MylistRegisteredCount}" />:<Run Text="{x:Bind _vm.MaxItemsCount, Mode=OneWay}" /> <Run Text="{i18nExt:Localize Key=MylistRegisteredCountSum}" />:<Run Text="{x:Bind _vm.MylistRegistrationCount, Mode=OneWay}" /> 上限:<Run Text="{x:Bind _vm.MylistRegistrationCapacity, Mode=OneWay}" />)</TextBlock>
                    </Border>
                  </StackPanel>
                </StackPanel>
              </AppBarElementContainer>
              <AppBarElementContainer  VerticalAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False">
                <ComboBox ItemsSource="{x:Bind _vm.SortItems}"
                          SelectedItem="{x:Bind _vm.SelectedSortOptionItem.Value, Mode=TwoWay}"
                          VerticalAlignment="Stretch"
                          Margin="0 6"
                                >
                  <ComboBox.ItemTemplate>
                    <DataTemplate>
                      <TextBlock Text="{Binding Label}" />

                    </DataTemplate>
                  </ComboBox.ItemTemplate>
                </ComboBox>

              </AppBarElementContainer>
              <!-- 非選択中 -->
              <AppBarButton x:Name="PlayAllButton" Icon="Play" Label="{i18nExt:Localize Key=PlayAll}" Command="{x:Bind _vm.PlaylistPlayAllCommand}" CommandParameter="{x:Bind _vm.CurrentPlaylistToken.Value, Mode=OneWay}" />
              <AppBarButton x:Name="ScrollToTopButton" Icon="Up" Label="{i18nExt:Localize Key=ReturnToPageTop}">
                <i:Interaction.Behaviors>
                  <core:EventTriggerBehavior EventName="Click">
                    <core:CallMethodAction TargetObject="{x:Bind VideoItemsListView}" MethodName="ResetScrollPosition" />
                  </core:EventTriggerBehavior>
                </i:Interaction.Behaviors>
              </AppBarButton>

              <AppBarButton x:Name="SelectionToggleButton" Icon="List" Label="{i18nExt:Localize Key=Select}" Command="{x:Bind _vm.SelectionModeToggleCommand}" />

              <AppBarButton x:Name="RefreshButton"
                              Label="{i18nExt:Localize Key=Refresh}" 
                              Icon="Refresh"
                              Command="{x:Bind _vm.RefreshCommand}"
                              VerticalAlignment="Center"
                          >
              </AppBarButton>
              
            </CommandBar.PrimaryCommands>
            <CommandBar.SecondaryCommands>
              <AppBarButton x:Name="FeedRegstrationButton" Icon="Add" Visibility="Visible" Label="{i18nExt:Localize Key=SubscriptionAdd}"
                                Command="{x:Bind _vm.AddSubscriptionCommand}"
                                CommandParameter="{x:Bind _vm.Mylist.Value, Mode=OneWay}"
                                >
              </AppBarButton>
              <AppBarButton x:Name="OpenUserPageButton" Command="{x:Bind _vm.OpenMylistOwnerCommand}" Background="Transparent" Visibility="Collapsed" Icon="People" Label="{i18nExt:Localize Key=MylistOwner}"></AppBarButton>
              <AppBarButton x:Name="EditMylistButton" Command="{x:Bind _vm.EditMylistGroupCommand}" CommandParameter="{x:Bind _vm.Mylist.Value, Mode=OneWay}" Background="Transparent" Visibility="Collapsed" Icon="Edit" Label="{i18nExt:Localize Key=MylistEditInfo}"></AppBarButton>
              <AppBarSeparator x:Name="MylistDeleteButtonSeparator" Visibility="Collapsed" />
              <AppBarButton x:Name="DeleteMylistButton" Command="{x:Bind _vm.DeleteMylistCommand}" CommandParameter="{x:Bind _vm.Mylist.Value, Mode=OneWay}" Background="Transparent" Visibility="Collapsed" Icon="Delete" Label="{i18nExt:Localize Key=MylistDelete}"></AppBarButton>
            </CommandBar.SecondaryCommands>
          </CommandBar>
        </Grid>
      </videolistPage:VideoItemsListView.Header>
    </videolistPage:VideoItemsListView>
    
    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{x:Bind _vm.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.TV}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_TV}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentPageMargin_TV}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{x:Bind _vm.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.Desktop}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Desktop}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentPageMargin_Desktop}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{x:Bind _vm.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.Tablet}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentPageMargin_Tablet}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{x:Bind _vm.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.Mobile}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentPageMargin_Mobile}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
     
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind _vm.IsLoginUserDeflist, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="FeedRegstrationButton.Visibility" Value="Collapsed" />
            <Setter Target="DefaultMylistRegistrationCount.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind _vm.IsUserOwnerdMylist, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="OpenUserPageButton.Visibility" Value="Visible" />
            <Setter Target="ToggleMylistFavoriteButton.Visibility" Value="Visible" />
            <Setter Target="EditMylistButton.Visibility" Value="Visible" />
            <Setter Target="DeleteMylistButton.Visibility" Value="Visible" />
            <Setter Target="MylistDeleteButtonSeparator.Visibility" Value="Visible" />
            <Setter Target="MylistRegistrationCount.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="True" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ToggleMylistFavoriteButton.Visibility" Value="Visible" />
            <Setter Target="OpenUserPageButton.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>
