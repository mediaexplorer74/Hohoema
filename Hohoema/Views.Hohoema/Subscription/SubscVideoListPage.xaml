<Page
  x:Class="Hohoema.Views.Pages.Hohoema.Subscription.SubscVideoListPage"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:local="using:Hohoema.Views.Pages.Hohoema.Subscription"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:subscModels="using:Hohoema.Models.Subscriptions"
  xmlns:videoList="using:Hohoema.Views.Controls.VideoList"
  xmlns:controls="using:Hohoema.Views.Controls" 
  xmlns:i="using:Microsoft.Xaml.Interactivity"
  xmlns:core="using:Microsoft.Xaml.Interactions.Core"
  xmlns:i18nExt="using:I18NPortable.Xaml.Extensions"
  xmlns:windowsTriggers="using:WindowsStateTriggers" 
  xmlns:models="using:Hohoema.Models.Application" 
  xmlns:ts="using:Hohoema.Views.TemplateSelector" 
  xmlns:subscPageVM="using:Hohoema.ViewModels.Pages.Hohoema.Subscription" 
  xmlns:vm="using:Hohoema.ViewModels.VideoListPage"
  mc:Ignorable="d"
  
 >
  <Page.Resources>
    <local:SubscVideoListItemTemplateSelector x:Key="SubscVideoListItemDataTemplateSelector"          
                                              >
      <local:SubscVideoListItemTemplateSelector.SubscListItem>
        <DataTemplate x:DataType="subscPageVM:SubscVideoListItemViewModel">
          <Grid>
            <videoList:VideoListItemControl 
                Title="{x:Bind Label}"                 
                ImageSource="{x:Bind ThumbnailUrl}"
                Length="{x:Bind Length, Converter={StaticResource TimeToMovieLengthConverter}}"  
                IsQueueItem="{x:Bind IsQueueItem, Mode=OneWay}"
                IsWatched="{x:Bind IsWatched, Mode=OneWay}"
                IsDeleted="{x:Bind IsDeleted}"
                IsHidden="{x:Bind VideoHiddenInfo, Mode=OneWay, Converter={StaticResource NotNullToBoolean}}"
                CacheStatus="{x:Bind CacheStatus, Mode=OneWay}"
                PostedAt="{x:Bind PostedAt, Converter={StaticResource DateTimeToString}}"
                PrivateReason="{x:Bind PrivateReason, Converter={StaticResource LocalizeConverter}}"
                ViewCount="{x:Bind ViewCount, Converter={StaticResource ToUserFriendlyNumber}}"
                CommentCount="{x:Bind CommentCount, Converter={StaticResource ToUserFriendlyNumber}}"
                MylistCount="{x:Bind MylistCount, Converter={StaticResource ToUserFriendlyNumber}}"
              />
            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Right">
              <TextBlock Opacity="0.7" Style="{StaticResource CaptionTextBlockStyle}" >
                <Run Text="{x:Bind SourceLabel}" /> (<Run Text="{x:Bind SourceType, Converter={StaticResource LocalizeConverter}}" />)
              </TextBlock>
            </StackPanel>
          </Grid>
        </DataTemplate>
      </local:SubscVideoListItemTemplateSelector.SubscListItem>
      <local:SubscVideoListItemTemplateSelector.Separator>
        <DataTemplate x:DataType="subscPageVM:SubscVideoSeparatorListItemViewModel">
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"
                      Spacing="16"
                      >
            <Button Command="{x:Bind PlayFromHereCommand}">

              <StackPanel Orientation="Horizontal">
                <SymbolIcon Symbol="Play"></SymbolIcon>
                <TextBlock Text="{i18nExt:Localize Key=SubscGroup_PlayFromHere}" />
              </StackPanel>
            </Button>

            <Button Content="{i18nExt:Localize Key=SubscVideos_AllMarkAsChecked}"
                    Command="{x:Bind AllMarkAsCheckedCommand}"
                    >
              
            </Button>
          </StackPanel>
        </DataTemplate>
      </local:SubscVideoListItemTemplateSelector.Separator>
    </local:SubscVideoListItemTemplateSelector>
  </Page.Resources>
  

  <Grid>
    <videoList:VideoItemsListView
      ItemsSource="{x:Bind _vm.ItemsView, Mode=OneWay}"
      ItemCommand="{x:Bind _vm.VideoPlayWithQueueCommand}"
      ItemTemplateSelector="{StaticResource SubscVideoListItemDataTemplateSelector}"
      ItemContextFlyoutTemplate="{StaticResource VideoListItemFlyoutTemplate}"
      RefreshCommand="{x:Bind _vm.ResetListCommand}"
      x:Name="VideoItemsListView"
      >
      <videoList:VideoItemsListView.Header>
        <Grid x:Name="HeaderLayout" Padding="8 0" BorderThickness="0 0 0 1" BorderBrush="{StaticResource HohoemaLightBorderBrush}">
          <CommandBar DefaultLabelPosition="Right" VerticalContentAlignment="Center">
            <CommandBar.Content>
              <controls:AppTitleBar Title="{x:Bind _vm.Title, Mode=OneWay}" />
            </CommandBar.Content>

            <CommandBar.PrimaryCommands>

              <AppBarToggleButton Label="{i18nExt:Localize Key=SubscVideosDisplayChecked}" IsChecked="{x:Bind _vm.IsDisplayChecked, Mode=TwoWay}" 
                                  Margin="4 0"
                                  />

              <AppBarElementContainer VerticalContentAlignment="Stretch">
                <StackPanel Orientation="Horizontal" Margin="4 0">
                  <Button Content="{i18nExt:Localize Key=SubscVideos_MarkAsChecked}" 
                          CornerRadius="4 0 0 4"
                          Padding="8 8"
                          BorderThickness="0 0 1 0"                          
                          Command="{x:Bind _vm.MarkAsCheckedWithDaysCommand}"
                          >
                    <Button.CommandParameter>
                      <x:Int32>0</x:Int32>
                    </Button.CommandParameter>
                  </Button>
                  <DropDownButton Padding="3 11 8 11"
                                  CornerRadius="0 4 4 0"                                  
                                  BorderThickness="1 0 0 0"
                                  >
                    <DropDownButton.Flyout>
                      <MenuFlyout Placement="Bottom">
                        <MenuFlyoutItem Text="{Binding Source=SubscVideos_MarkAsCheckedWithDays, Converter={StaticResource LocalizeConverter}, ConverterParameter=1}" Command="{x:Bind _vm.MarkAsCheckedWithDaysCommand}">
                          <MenuFlyoutItem.CommandParameter>
                            <x:Int32>1</x:Int32>
                          </MenuFlyoutItem.CommandParameter>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Text="{Binding Source=SubscVideos_MarkAsCheckedWithDays, Converter={StaticResource LocalizeConverter}, ConverterParameter=3}" Command="{x:Bind _vm.MarkAsCheckedWithDaysCommand}">
                          <MenuFlyoutItem.CommandParameter>
                            <x:Int32>3</x:Int32>
                          </MenuFlyoutItem.CommandParameter>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Text="{Binding Source=SubscVideos_MarkAsCheckedWithDays, Converter={StaticResource LocalizeConverter}, ConverterParameter=7}" Command="{x:Bind _vm.MarkAsCheckedWithDaysCommand}">
                          <MenuFlyoutItem.CommandParameter>
                            <x:Int32>7</x:Int32>
                          </MenuFlyoutItem.CommandParameter>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Text="{Binding Source=SubscVideos_MarkAsCheckedWithDays, Converter={StaticResource LocalizeConverter}, ConverterParameter=14}" Command="{x:Bind _vm.MarkAsCheckedWithDaysCommand}">
                          <MenuFlyoutItem.CommandParameter>
                            <x:Int32>14</x:Int32>
                          </MenuFlyoutItem.CommandParameter>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Text="{Binding Source=SubscVideos_MarkAsCheckedWithDays, Converter={StaticResource LocalizeConverter}, ConverterParameter=30}" Command="{x:Bind _vm.MarkAsCheckedWithDaysCommand}">
                          <MenuFlyoutItem.CommandParameter>
                            <x:Int32>30</x:Int32>
                          </MenuFlyoutItem.CommandParameter>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Text="{Binding Source=SubscVideos_MarkAsCheckedWithDays, Converter={StaticResource LocalizeConverter}, ConverterParameter=90}" Command="{x:Bind _vm.MarkAsCheckedWithDaysCommand}">
                          <MenuFlyoutItem.CommandParameter>
                            <x:Int32>90</x:Int32>
                          </MenuFlyoutItem.CommandParameter>
                        </MenuFlyoutItem>
                      </MenuFlyout>
                    </DropDownButton.Flyout>
                  </DropDownButton>
                </StackPanel>
              </AppBarElementContainer>
             
              <AppBarElementContainer VerticalAlignment="Stretch" VerticalContentAlignment="Stretch"
                                      Margin="4 0"
                                      >
                <ComboBox ItemsSource="{x:Bind _vm.SubscriptionGroups}"
                          SelectedItem="{x:Bind _vm.SelectedSubscGroup, Mode=TwoWay}"
                          IsEnabled="{x:Bind _vm.NowLoading, Converter={StaticResource BoolNegation}}"
                          VerticalAlignment="Stretch"
                          Margin="0 6"
                          >
                  <ComboBox.ItemTemplate>
                    <DataTemplate x:DataType="subscModels:SubscriptionGroup">
                      <TextBlock Text="{Binding Name, FallbackValue={i18nExt:Localize Key=All}}" />
                    </DataTemplate>
                  </ComboBox.ItemTemplate>
                </ComboBox>
              </AppBarElementContainer>

              <!--<AppBarButton x:Name="PlayAllButton"
                                Icon="Play"
                                Label="{i18nExt:Localize Key=PlayAll}"
                                Command="{x:Bind _vm.PlaylistPlayAllCommand}"
                                CommandParameter="{Binding CurrentPlaylistToken.Value}"></AppBarButton>
              -->

              <AppBarButton x:Name="ScrollToTopButton" Icon="Up" Label="{i18nExt:Localize Key=ReturnToPageTop}"
                            Margin="4 0"
                            >
                <i:Interaction.Behaviors>
                  <core:EventTriggerBehavior EventName="Click">
                    <core:CallMethodAction TargetObject="{x:Bind VideoItemsListView}" MethodName="ResetScrollPosition" />
                  </core:EventTriggerBehavior>
                </i:Interaction.Behaviors>
              </AppBarButton>

              <AppBarButton x:Name="SelectionToggleButton" Icon="List" Label="{i18nExt:Localize Key=Select}" Command="{Binding SelectionModeToggleCommand}" />

            </CommandBar.PrimaryCommands>
            <CommandBar.SecondaryCommands>
              <AppBarButton x:Name="OpenSubscManagementPageButton" Icon="Setting" Label="{i18nExt:Localize Key=HohoemaPageType.SubscriptionManagement}" Command="{Binding OpenSubscManagementPageCommand}" />

              <AppBarButton x:Name="RefreshButton"
                              Label="{i18nExt:Localize Key=Refresh}" 
                              Icon="Refresh"
                              Command="{x:Bind _vm.ResetListCommand}"
                              VerticalAlignment="Center"
                          >
              </AppBarButton>

            </CommandBar.SecondaryCommands>
          </CommandBar>
        </Grid>
      </videoList:VideoItemsListView.Header>
    </videoList:VideoItemsListView>

    <Grid x:Name="EmptyItemsLayout" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center">
      <TextBlock Text="{x:Bind _vm.AllCheckedLocalizedTextForSelectedGroup, Mode=OneWay}"
                     Style="{StaticResource SubtitleTextBlockStyle}"
                     Opacity="0.8"
                     />
    </Grid>

    <VisualStateManager.VisualStateGroups>
      <!-- レイアウトモード -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="{x:Bind models:ApplicationLayout.TV}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_TV}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentPageMargin_TV}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="{x:Bind models:ApplicationLayout.Desktop}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Desktop}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentPageMargin_Desktop}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="{x:Bind models:ApplicationLayout.Tablet}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentPageMargin_Tablet}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="{x:Bind models:ApplicationLayout.Mobile}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentPageMargin_Mobile}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding NowLoading}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ScrollToTopButton.IsEnabled" Value="False" />
            <!--
            <Setter Target="RefreshButton.IsEnabled" Value="False" />
            -->
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{Binding ItemsView.Count}" EqualTo="0" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="EmptyItemsLayout.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding NowLoading}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ScrollToTopButton.IsEnabled" Value="False" />
            <!--
            <Setter Target="RefreshButton.IsEnabled" Value="False" />
            -->
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>
