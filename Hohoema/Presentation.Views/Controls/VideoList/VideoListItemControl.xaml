<UserControl
    x:Class="Hohoema.Presentation.Views.Controls.VideoList.VideoListItemControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:uwpControls="using:Microsoft.Toolkit.Uwp.UI.Controls"
  xmlns:templateSelector="using:Hohoema.Presentation.Views.TemplateSelector"
  xmlns:windowsStateTrigger="using:WindowsStateTriggers" 
  xmlns:i="using:Microsoft.Xaml.Interactivity"
  xmlns:core="using:Microsoft.Xaml.Interactions.Core"
  xmlns:conv="using:WinRTXamlToolkit.Converters"
  xmlns:i18nExt="using:I18NPortable.Xaml.Extensions"
  xmlns:nicoLToolkitVideo="using:NiconicoLiveToolkit.Video" 
  xmlns:local="using:Hohoema.Presentation.Views.Controls.VideoList" xmlns:winUI="using:Microsoft.UI.Xaml.Controls"
  mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">

  <Grid x:Name="UserControlRoot">

    <winUI:SwipeControl >
      <winUI:SwipeControl.LeftItems>
        <winUI:SwipeItems Mode="Execute">
          <winUI:SwipeItem x:Name="QueueToggleSwipeItem" 
                           BehaviorOnInvoked="Close" Text="{i18nExt:Localize Key=QueueAddItem}"
                           Invoked="SwipeItem_Invoked"
                         >
            <winUI:SwipeItem.IconSource>
              <winUI:SymbolIconSource x:Name="QueueToggleSwipeItemSymbolIconSource" Symbol="Add" />
            </winUI:SwipeItem.IconSource>
          </winUI:SwipeItem>
        </winUI:SwipeItems>
      </winUI:SwipeControl.LeftItems>
      <Grid>
        <Grid x:Name="QueueIndexLayout" Opacity="0.0" HorizontalAlignment="Right">
          <Border Width="4" Background="{ThemeResource SystemAccentColor}" Opacity="0.5" />
        </Grid>
        <StackPanel x:Name="CacheStatusLayout" HorizontalAlignment="Right" VerticalAlignment="Bottom">


          <TextBlock Opacity="0.6" FontSize="12">
         <Run Text="{Binding CacheRequest.CacheState, Converter={StaticResource LocalizeConverter}}" /> <Run Text="{Binding CacheRequest.PriorityQuality, Converter={StaticResource LocalizeConverter}}" />
          </TextBlock>

          <StackPanel Orientation="Horizontal" Spacing="8" x:Name="CacheProgressLayout" Visibility="Collapsed">
            <TextBlock x:Name="CacheProgressPercentage" Opacity="0.75" FontSize="12">
          <Run Text="{Binding DownloadProgress, Converter={StaticResource ToUserFriendlySoubleVolume}}" />%
            </TextBlock>
            <ProgressBar x:Name="CacheProgressBar" 
                     Maximum="1.0"
                   Minimum="0.0"
                   Value="{Binding DownloadProgress}"
                   Width="120"
                     IsIndeterminate="False"
                   />
          </StackPanel>
        </StackPanel>

        <uwpControls:DockPanel Margin="4 0 0 0"
                           x:Name="ContentLayout"
                           >
          <Grid Margin="0 0 12 0"
                  uwpControls:DockPanel.Dock="Left"
            Width="132"
            Height="72"
                  >
            <uwpControls:ImageEx Source="{Binding ThumbnailUrl, Mode=OneWay}" 
            Visibility="{Binding ThumbnailUrl, Converter={StaticResource NotNullToVisibility}}"
            Stretch="Uniform"
            VerticalAlignment="Center"
            VerticalContentAlignment="Center" 
                         IsCacheEnabled="{x:Bind IsThumbnailUseCache}"
            IsTabStop="False"
                         Height="100"
                   >
            </uwpControls:ImageEx>




            <Border HorizontalAlignment="Right" 
                        VerticalAlignment="Bottom"
                        CornerRadius="4 0 0 0"
                        >
              <Border.Background>
                <SolidColorBrush Color="{ThemeResource SystemAltMediumColor}"/>
              </Border.Background>

              <TextBlock Text="{Binding Length, Converter={StaticResource TimeToMovieLengthConverter}, Mode=OneWay}" 
                               Padding="4 0 3 3" 
                               TextWrapping="Wrap" VerticalAlignment="Center" 
                               FontSize="13"
                               
                               />
            </Border>
          </Grid>

          <StackPanel uwpControls:DockPanel.Dock="Top" Orientation="Horizontal" Spacing="8">
            <StackPanel.Resources>
              <Style TargetType="TextBlock">
                <Setter Property="FontSize" Value="13"  />
                <Setter Property="TextLineBounds" Value="Tight" />
                <Setter Property="Opacity" Value="0.7" />
              </Style>
            </StackPanel.Resources>
            <TextBlock>
          <Run Text="{Binding PostedAt, Converter={StaticResource DateTimeToString}, Mode=OneWay}" />
          <Run Text="{x:Bind local:VideoListItemControl.LocalizedText_PostAt_Short}" />
            </TextBlock>

            <uwpControls:SwitchPresenter Value="{Binding Permission, Converter={StaticResource EnumToNumber}}">
              <uwpControls:Case IsDefault="True">
                <Border />
              </uwpControls:Case>
              <uwpControls:Case>
                <uwpControls:Case.Value>
                  <nicoLToolkitVideo:VideoPermission>RequirePay</nicoLToolkitVideo:VideoPermission>
                </uwpControls:Case.Value>

                <TextBlock Text="{i18nExt:Localize Key=Video_RequirePay}" />
              </uwpControls:Case>
              <uwpControls:Case>
                <uwpControls:Case.Value>
                  <nicoLToolkitVideo:VideoPermission>RequirePremiumMember</nicoLToolkitVideo:VideoPermission>
                </uwpControls:Case.Value>

                <TextBlock Text="{i18nExt:Localize Key=Video_RequirePremiumMember}" />
              </uwpControls:Case>
              <uwpControls:Case>
                <uwpControls:Case.Value>
                  <nicoLToolkitVideo:VideoPermission>FreeForChannelMember</nicoLToolkitVideo:VideoPermission>
                </uwpControls:Case.Value>

                <TextBlock Text="{i18nExt:Localize Key=Video_FreeForChannelMember}" />
              </uwpControls:Case>
              <!--
            <uwpControls:Case>
              <uwpControls:Case.Value>
                <nicoLToolkitVideo:VideoPermission>VideoPermission_3</nicoLToolkitVideo:VideoPermission>
              </uwpControls:Case.Value>

              <Border>
                <TextBlock Text="" />
              </Border>
            </uwpControls:Case>
            -->
              <uwpControls:Case>
                <uwpControls:Case.Value>
                  <nicoLToolkitVideo:VideoPermission>MemberUnlimitedAccess</nicoLToolkitVideo:VideoPermission>
                </uwpControls:Case.Value>

                <TextBlock Text="{i18nExt:Localize Key=Video_ChannelMemberUnlimitedAccess}" />
              </uwpControls:Case>
            </uwpControls:SwitchPresenter>
            <TextBlock x:Name="PrivteReasonTextBlock" Visibility="Collapsed" Opacity="0.7" FontSize="13" Foreground="{ThemeResource SystemAccentColor}" TextLineBounds="Tight">
          <Run Text="{Binding PrivateReason, Converter={StaticResource LocalizeConverter}}" />
            </TextBlock>
          </StackPanel>


          <StackPanel uwpControls:DockPanel.Dock="Bottom" Orientation="Horizontal" Spacing="8">
            <TextBlock Opacity="0.7" FontSize="13" TextLineBounds="Tight">
          <Run Text="{x:Bind local:VideoListItemControl.LocalizedText_ViewCount_Short}" />
          <Run Text="{Binding ViewCount, Mode=OneWay, Converter={StaticResource ToUserFriendlyNumber}}" />
            </TextBlock>
            <TextBlock Opacity="0.7" FontSize="13" TextLineBounds="Tight">
          <Run Text="{x:Bind local:VideoListItemControl.LocalizedText_CommentCount_Short}" />
          <Run Text="{Binding CommentCount, Mode=OneWay, Converter={StaticResource ToUserFriendlyNumber}}" />
            </TextBlock>
            <TextBlock Opacity="0.7" FontSize="13" TextLineBounds="Tight">
          <Run Text="{x:Bind local:VideoListItemControl.LocalizedText_MylistCount_Short}" />
          <Run Text="{Binding MylistCount, Mode=OneWay, Converter={StaticResource ToUserFriendlyNumber}}" />
            </TextBlock>
          </StackPanel>

          <TextBlock Text="{Binding Label, Mode=OneWay}" 
                       FontSize="16"
                       TextWrapping="Wrap"
                       VerticalAlignment="Center"
                       x:Name="LabelTextBlock"
                       />


        </uwpControls:DockPanel>

        <Grid x:Name="HiddenVideoOwnerLayout" Opacity="0.0" IsHitTestVisible="False">
          <StackPanel x:Name="HiddenVideoOwnerRevealedLayout" Visibility="Collapsed" HorizontalAlignment="Right" Orientation="Horizontal" Spacing="8">
            <!--
        <Button Content="{i18nExt:Localize Key=RemoveHiddenVideoOwner}"
                x:Name="UnregistrationHiddenVideoOwnerButton"
                Click="UnregistrationHiddenVideoOwnerButton_Click"
                Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                BorderBrush="{ThemeResource ButtonBorderThemeBrush}"
                BorderThickness="1" 
                />
        -->

            <Button Content="{i18nExt:Localize Key=ExitOnceReveal}"
                x:Name="ExitRevealButton"
                Click="ExitRevealButton_Click"
                Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                BorderBrush="{ThemeResource ButtonBorderThemeBrush}"
                BorderThickness="1"
                />
          </StackPanel>
          <Grid x:Name="HiddenVideoOwnerUnrevealedLayout"
            Opacity="0.7">
            <TextBlock 
                   VerticalAlignment="Center"
                   HorizontalAlignment="Center"
                   Margin="0 0 128 0">
          <Run Text="{i18nExt:Localize Key=HiddenVideo}" />
            </TextBlock>
            <Button Content="{i18nExt:Localize Key=OnceReveal}" 
                x:Name="HiddenVideoOnceRevealButton" Click="HiddenVideoOnceRevealButton_Click"
                HorizontalAlignment="Right"
                Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                BorderBrush="{ThemeResource ButtonBorderThemeBrush}"
                BorderThickness="1" 
                />
          </Grid>
        </Grid>

      </Grid>
    </winUI:SwipeControl>
    
    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding IsDeleted}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="PrivteReasonTextBlock.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTrigger:EqualsStateTrigger Value="{Binding CacheRequest}" EqualTo="{x:Null}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="CacheStatusLayout.Visibility" Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding IsWatched}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="LabelTextBlock.Opacity" Value="0.6" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding IsQueueItem}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="QueueIndexLayout.Opacity" Value="1.0" />
            <Setter Target="QueueToggleSwipeItemSymbolIconSource.Symbol" Value="Remove" />
            <Setter Target="QueueToggleSwipeItem.Text" Value="{i18nExt:Localize Key=QueueRemoveItem}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding IsProgressUnknown}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="CacheProgressLayout.Visibility" Value="Visible" />
            <Setter Target="CacheProgressBar.IsIndeterminate" Value="True" />
            <Setter Target="CacheProgressPercentage.Visibility" Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding HasCacheProgress}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="CacheProgressLayout.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind IsRevealHiddenVideo, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HiddenVideoOwnerLayout.Opacity"
                    Value="1.0" />
            <Setter Target="HiddenVideoOwnerLayout.IsHitTestVisible"
                    Value="True" />
            <Setter Target="HiddenVideoOwnerUnrevealedLayout.Visibility"
                    Value="Collapsed" />
            <Setter Target="HiddenVideoOwnerRevealedLayout.Visibility"
                    Value="Visible" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTrigger:NotEqualStateTrigger Value="{Binding VideoHiddenInfo, Mode=OneWay}" NotEqualTo="{x:Null}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HiddenVideoOwnerLayout.Opacity"
                    Value="1.0" />
            <Setter Target="HiddenVideoOwnerLayout.IsHitTestVisible"
                    Value="True" />
            
            <Setter Target="ContentLayout.Opacity"
                    Value="0.0" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</UserControl>
