<UserControl x:Class="Hohoema.Presentation.Views.PrimaryWindowCoreLayout"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="using:Hohoema.Presentation.Views"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:i="using:Microsoft.Xaml.Interactivity"
             xmlns:core="using:Microsoft.Xaml.Interactions.Core"
             xmlns:windowsTriggers="using:WindowsStateTriggers"
             xmlns:uiTrigger="using:AdaptiveTriggerLibrary.Triggers.UserInterfaceTriggers"
             xmlns:mybehavior="using:Hohoema.Presentation.Views.Behaviors"
             xmlns:uwpToolkitControls="using:Microsoft.Toolkit.Uwp.UI.Controls"
             xmlns:uwpui="using:Microsoft.Toolkit.Uwp.UI.Extensions"
             xmlns:iconPack="using:MahApps.Metro.IconPacks"
             xmlns:myextensions="using:Hohoema.Presentation.Views.Extensions"
             xmlns:listItemControls="using:Hohoema.Presentation.Views.Controls"
             xmlns:templateSelector="using:Hohoema.Presentation.Views.TemplateSelector"
             xmlns:mytrigger="using:Hohoema.Presentation.Views.StateTrigger"
             xmlns:servicesPlayer="using:Hohoema.Presentation.Services.Player" 
             xmlns:winui="using:Windows.UI.Xaml.Controls" 
             xmlns:models="using:Hohoema.Models.Domain.Application"  
             xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
             xmlns:viewModels="using:Hohoema.Presentation.ViewModels.PrimaryWindowCoreLayout" xmlns:pageNavigation="using:Hohoema.Models.Domain.PageNavigation" xmlns:converter="using:Hohoema.Presentation.Views.Converters"
             x:Name="UserControlRoot"
             mc:Ignorable="d"
             d:DesignHeight="300"
             d:DesignWidth="400"
            
             >
  <UserControl.Resources>
    <x:String x:Key="SideMenuPaneLength">280</x:String>
    <x:String x:Key="SideMenuPaneLength_TVMode">340</x:String>
    <x:String x:Key="DesktopFloatPlayerHeight">160</x:String>
    <x:String x:Key="MobileFloatPlayerHeight">240</x:String>
    <x:Double x:Key="MenuContentToggleAnimationDuration">175</x:Double>
    <Style TargetType="iconPack:PackIconMaterial">
      <Setter Property="RenderTransform">
        <Setter.Value>
          <ScaleTransform ScaleX="1.25" ScaleY="1.25" CenterX="12" CenterY="12" />
        </Setter.Value>
      </Setter>
    </Style>

    <converter:PageTypeToIconConverter x:Key="PageTypeToIconConverter" />


    <MenuFlyout x:Key="PinsMenuSubItemFlyout">
      <MenuFlyoutItem Text="{Binding Source=PinCurrentPage, Converter={StaticResource LocalizeConverter}}" 
                      Command="{x:Bind AddPinCurrentPageCommand}"
                      />
    </MenuFlyout>

    <MenuFlyout x:Key="WatchAfterMenuItemFlyout">
      <MenuFlyoutItem Text="{Binding Source=PlayAll, Converter={StaticResource LocalizeConverter}}" 
                      Command="{Binding PlayWatchAfterPlaylistCommand}"
                      >
        
      </MenuFlyoutItem>
    </MenuFlyout>
    
    
    
    <templateSelector:TypeBasedTemplateSelector x:Key="MenuItemTemplateSelector" >
      <DataTemplate templateSelector:DataTemplate.TargetType="{Binding Source=Hohoema.Presentation.ViewModels.PrimaryWindowCoreLayout.SeparatorMenuItemViewModel, Converter={StaticResource StringToType}}" >
        <muxc:NavigationViewItemSeparator />
      </DataTemplate>

      <DataTemplate templateSelector:DataTemplate.TargetType="{Binding Source=Hohoema.Presentation.ViewModels.PinMenuItemViewModel, Converter={StaticResource StringToType}}">
        <muxc:NavigationViewItem>
          <muxc:NavigationViewItem.ContextFlyout>
            <MenuFlyout>
              <MenuFlyoutItem Text="{Binding Source=PinChangeArias, Converter={StaticResource LocalizeConverter}}" Command="{Binding OverridePinCommand}" CommandParameter="{Binding}" />
              <MenuFlyoutSubItem Text="{Binding Source=Pin_Move, Converter={StaticResource LocalizeConverter}}">
                <MenuFlyoutItem Text="{Binding Source=Pin_MoveToHead, Converter={StaticResource LocalizeConverter}}" Command="{Binding MovePinToMostTopCommand}" CommandParameter="{Binding}" />
                <MenuFlyoutItem Text="{Binding Source=Pin_MovePreview, Converter={StaticResource LocalizeConverter}}" Command="{Binding MovePinToTopCommand}" CommandParameter="{Binding}" />
                <MenuFlyoutItem Text="{Binding Source=Pin_MoveNext, Converter={StaticResource LocalizeConverter}}" Command="{Binding MovePinToBottomCommand}" CommandParameter="{Binding}" />
                <MenuFlyoutItem Text="{Binding Source=Pin_MoveToTail, Converter={StaticResource LocalizeConverter}}" Command="{Binding MovePinToMostBottomCommand}" CommandParameter="{Binding}" />
              </MenuFlyoutSubItem>
              <MenuFlyoutSeparator />
              <MenuFlyoutItem Text="{Binding Source=PinRemove, Converter={StaticResource LocalizeConverter}}" Command="{Binding DeletePinCommand}" CommandParameter="{Binding}" />
            </MenuFlyout>
          </muxc:NavigationViewItem.ContextFlyout>
          <StackPanel>
            <Grid>
              <TextBlock Text="{Binding Pin.Label, Mode=OneTime}" Visibility="{Binding Pin.OverrideLabel, Converter={StaticResource EmptyStringToBoolean}}" />
              <TextBlock Text="{Binding Pin.OverrideLabel}" Visibility="{Binding Pin.OverrideLabel, Converter={StaticResource NotEmptyStringToBoolean}}" />
            </Grid>

            <TextBlock Text="{Binding Description}" FontSize="12" Opacity="0.7" />
          </StackPanel>
        </muxc:NavigationViewItem>
      </DataTemplate>
      
      <DataTemplate templateSelector:DataTemplate.TargetType="{Binding Source=Hohoema.Presentation.ViewModels.PrimaryWindowCoreLayout.MenuItemViewModel, Converter={StaticResource StringToType}}" >
        <muxc:NavigationViewItem Icon="{Binding PageType, Converter={StaticResource PageTypeToIconConverter}}">
          <TextBlock Text="{Binding Label}" />
        </muxc:NavigationViewItem>
      </DataTemplate>

      <DataTemplate templateSelector:DataTemplate.TargetType="{Binding Source=Hohoema.Presentation.ViewModels.PrimaryWindowCoreLayout.WatchAfterMenuItemViewModel, Converter={StaticResource StringToType}}" >
        <muxc:NavigationViewItem ContextFlyout="{StaticResource WatchAfterMenuItemFlyout}">
          <muxc:NavigationViewItem.Icon>
            <SymbolIcon Symbol="Play" />
          </muxc:NavigationViewItem.Icon>

          <uwpToolkitControls:DockPanel>

            <Border uwpToolkitControls:DockPanel.Dock="Right" Background="{ThemeResource SystemBaseMediumLowColor}" CornerRadius="60" Width="32" Height="32">
              <TextBlock Text="{Binding WatchAfterPlaylistCount.Value}" VerticalAlignment="Center" HorizontalAlignment="Center" />
            </Border>
              
            <TextBlock VerticalAlignment="Center">
              <Run Text="{Binding Source=HohoemaPageType.WatchAfter, Converter={StaticResource LocalizeConverter}}" />
            </TextBlock>
            

          </uwpToolkitControls:DockPanel>
        </muxc:NavigationViewItem>
      </DataTemplate>

      <DataTemplate templateSelector:DataTemplate.TargetType="{Binding Source=Hohoema.Presentation.ViewModels.MylistSubMenuMenu, Converter={StaticResource StringToType}}" >
        <muxc:NavigationViewItem MenuItemsSource="{Binding Items}" 
                                 Icon="List"
                                 >
          <muxc:NavigationViewItem.Content>
            <TextBlock Text="{Binding Label}" />
          </muxc:NavigationViewItem.Content>

          <muxc:NavigationViewItem.ContextFlyout>
            <MenuFlyout>
              <MenuFlyoutItem Text="{Binding Source=HohoemaPageType.UserMylist, Converter={StaticResource LocalizeConverter}}"
                              Command="{Binding MylistPageOpenCommand}"
                              CommandParameter="{Binding Source=UserMylist}"
                              />
            </MenuFlyout>
          </muxc:NavigationViewItem.ContextFlyout>

        </muxc:NavigationViewItem>
      </DataTemplate>

      <DataTemplate templateSelector:DataTemplate.TargetType="{Binding Source=Hohoema.Presentation.ViewModels.LocalMylistSubMenuItemViewModel, Converter={StaticResource StringToType}}" >
        <muxc:NavigationViewItem MenuItemsSource="{Binding Items}" 
                                 Icon="List"
                                 >
          <TextBlock Text="{Binding Label}" />
        </muxc:NavigationViewItem>
      </DataTemplate>

      <DataTemplate templateSelector:DataTemplate.TargetType="{Binding Source=Hohoema.Presentation.ViewModels.PinsMenuSubItemViewModel, Converter={StaticResource StringToType}}" >
        <muxc:NavigationViewItem MenuItemsSource="{Binding Items}" 
                                 Icon="Pin"
                                 ContextFlyout="{StaticResource PinsMenuSubItemFlyout}"
                                 IsExpanded="True"
                                 Tag="Pins"
                                 >
          <TextBlock Text="{Binding Label}" />
        </muxc:NavigationViewItem>
      </DataTemplate>

      <DataTemplate templateSelector:DataTemplate.TargetType="{Binding Source=Hohoema.Presentation.ViewModels.MenuSubItemViewModelBase, Converter={StaticResource StringToType}}" >
        <muxc:NavigationViewItem MenuItemsSource="{Binding Items}" 
                                 >
          <TextBlock Text="{Binding Label}" />
        </muxc:NavigationViewItem>
      </DataTemplate>
    </templateSelector:TypeBasedTemplateSelector>
    
    <DataTemplate x:Key="PinMenuItemTemplate">
      <StackPanel Orientation="Horizontal" Opacity="0.85" Margin="0 0 0 0">
        <ContentControl Content="{Binding PageType,Mode=OneTime}" ContentTemplateSelector="{StaticResource PageTypeIconTemplateSelector}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Opacity="0.7" Width="24" Height="24" />
        <Border Height="4" Width="16" />
        <!--  OverrideLabelが未設定の場合の表示 -->
        <StackPanel Orientation="Horizontal" Visibility="{Binding OverrideLabel, Converter={StaticResource NullToVisibility}}">
          <TextBlock Text="{Binding Label,Mode=OneTime}" VerticalAlignment="Center" FontSize="15" />
          <Border Height="4" Width="8" />
          <TextBlock Style="{StaticResource CaptionTextBlockStyle}" VerticalAlignment="Center">
                            (<Run Text="{Binding PageType, Converter={StaticResource LocalizeConverter},Mode=OneTime}" />)</TextBlock>
        </StackPanel>
        <!-- OverrideLabelが設定済みの場合 -->
        <StackPanel Orientation="Horizontal" Visibility="{Binding OverrideLabel, Converter={StaticResource NotNullToVisibility}}">
          <TextBlock Text="{Binding OverrideLabel}" VerticalAlignment="Center" FontSize="15" />
        </StackPanel>
      </StackPanel>
    </DataTemplate>
    
    <DataTemplate x:Name="VideoSubMenuContentTemplate">
      <StackPanel>
        <ListView ItemsSource="{Binding MenuItems}"
                  ItemTemplateSelector="{StaticResource MenuItemTemplateSelector}"
                  IsItemClickEnabled="True"
                  SelectionMode="None"
                  IsTabStop="False"
                  Background="Transparent"
                  ScrollViewer.VerticalScrollMode="Disabled">
          <i:Interaction.Behaviors>
            <core:EventTriggerBehavior EventName="ItemClick">
              <core:InvokeCommandAction Command="{Binding PageManager.OpenPageCommand}"
                                        InputConverter="{StaticResource ItemClickEventArgsConverter}" />
            </core:EventTriggerBehavior>
          </i:Interaction.Behaviors>
          <ListView.ItemContainerStyle>
            <Style TargetType="ListViewItem">
              <Setter Property="HorizontalContentAlignment" Value="Stretch" />
              <Setter Property="Padding" Value="16 0 0 0" />
            </Style>
          </ListView.ItemContainerStyle>
        </ListView>
        <Border BorderBrush="{StaticResource ApplicationSecondaryForegroundThemeBrush}" Opacity="0.3" BorderThickness="0 1 0 0" VerticalAlignment="Center" Margin="16 8" />
        <Button Command="{Binding PageManager.OpenPageCommand}" CommandParameter="UserMylist" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Background="Transparent" Padding="16 0">
          <TextBlock Text="{Binding Source=Mylist, Converter={StaticResource LocalizeConverter}}" uwpToolkitControls:DockPanel.Dock="Left" VerticalAlignment="Center" Style="{StaticResource SubtitleTextBlockStyle}" />
        </Button>
        <ListView ItemsSource="{Binding Mylists}"
                  ItemTemplateSelector="{StaticResource MenuItemTemplateSelector}"
                  IsItemClickEnabled="True"
                  SelectionMode="None"
                  IsTabStop="False"
                  Background="Transparent"
                  ScrollViewer.VerticalScrollMode="Disabled">
          <i:Interaction.Behaviors>
            <core:EventTriggerBehavior EventName="ItemClick">
              <core:InvokeCommandAction Command="{Binding PageManager.OpenPageCommand}"
                                        InputConverter="{StaticResource ItemClickEventArgsConverter}" />
            </core:EventTriggerBehavior>
          </i:Interaction.Behaviors>
        </ListView>
        <Border BorderBrush="{StaticResource ApplicationSecondaryForegroundThemeBrush}" Opacity="0.3" BorderThickness="0 1 0 0" VerticalAlignment="Center" Margin="16 8" Visibility="{Binding LocalMylists, Converter={StaticResource CollectionVisibilityConverter}}" />
        <ListView ItemsSource="{Binding LocalMylists}"
                  ItemTemplateSelector="{StaticResource MenuItemTemplateSelector}"
                  IsItemClickEnabled="True"
                  SelectionMode="None"
                  IsTabStop="False"
                  Background="Transparent"
                  ScrollViewer.VerticalScrollMode="Disabled">
          <i:Interaction.Behaviors>
            <core:EventTriggerBehavior EventName="ItemClick">
              <core:InvokeCommandAction Command="{Binding PageManager.OpenPageCommand}"
                                        InputConverter="{StaticResource ItemClickEventArgsConverter}" />
            </core:EventTriggerBehavior>
          </i:Interaction.Behaviors>
        </ListView>
      </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="LiveStreamInfoTemplate">
      <uwpToolkitControls:DockPanel>
        <TextBlock Text="{Binding StartAt}" Style="{StaticResource CaptionTextBlockStyle}" Opacity="0.7" TextWrapping="Wrap" uwpToolkitControls:DockPanel.Dock="Top" />
        <uwpToolkitControls:ImageEx Source="{Binding Thumbnail}" Style="{StaticResource RoundStyle}" uwpToolkitControls:DockPanel.Dock="Left" Margin="0 0 8 0" CornerRadius="60" />
        <TextBlock Text="{Binding CommunityName}" VerticalAlignment="Center" uwpToolkitControls:DockPanel.Dock="Top" />
        <TextBlock Text="{Binding Label}" Style="{StaticResource CaptionTextBlockStyle}" Opacity="0.7" TextWrapping="Wrap" />
      </uwpToolkitControls:DockPanel>
    </DataTemplate>
    
    <Style x:Key="BaseStyle" TargetType="uwpToolkitControls:ImageExBase">
      <Setter Property="IsCacheEnabled" Value="True" />
      <Setter Property="Stretch" Value="UniformToFill" />
      <Setter Property="PlaceholderStretch" Value="UniformToFill" />
      <Setter Property="HorizontalAlignment" Value="Center" />
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="Foreground" Value="White" />
    </Style>
    <!--Create a Style based on BaseStyle-->
    <Style x:Key="RoundStyle" TargetType="uwpToolkitControls:ImageEx" BasedOn="{StaticResource BaseStyle}">
      <Setter Property="Width" Value="48" />
      <Setter Property="Height" Value="48" />
      <Setter Property="CornerRadius" Value="999" />
    </Style>

    <Thickness x:Key="NavigationViewHeaderMargin">0</Thickness>

  </UserControl.Resources>
  <Grid x:Name="RootLayout" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
        >
    <!-- Player -->
    <uwpToolkitControls:DockPanel>
      <Border uwpToolkitControls:DockPanel.Dock="Top"
              x:Name="MobilePlayerTopMargin"
              Height="{Binding ElementName=PlayerFrame, Path=ActualHeight, Mode=OneWay}"
              Visibility="Collapsed" />
      <muxc:NavigationView x:Name="CoreNavigationView"
                      MenuItemsSource="{Binding MenuItems_Offline}"
                      MenuItemTemplateSelector="{StaticResource MenuItemTemplateSelector}"
                          PaneDisplayMode="{Binding AppearanceSettings.MenuPaneDisplayMode, Mode=OneWay}"
                           ItemInvoked="CoreNavigationView_ItemInvoked"
                          Background="{ThemeResource MenuBackgroundBrush}"
                           BackRequested="CoreNavigationView_BackRequested"
                           IsSettingsVisible="False"
                           IsTitleBarAutoPaddingEnabled="True"
                           SelectionFollowsFocus="Disabled"
                           AlwaysShowHeader="False"
                           XYFocusLeftNavigationStrategy="Projection"
                           XYFocusRightNavigationStrategy="Projection"
                      >
        <muxc:NavigationView.PaneHeader>
          <Grid >
            <TextBlock Text="{Binding NiconicoSession.ServiceStatus, Converter={StaticResource LocalizeConverter}}"
                       x:Name="ServiceStateText" 
                       Margin="8 0"
                       Visibility="Collapsed"
                       />
          </Grid>
          <!--
          <StackPanel Visibility="Collapsed">
            <uwpToolkitControls:DockPanel Margin="0">
              <Button Command="{x:Bind AddPinCurrentPageCommand}"
                            Background="Transparent"
                            Height="24"
                            uwpToolkitControls:DockPanel.Dock="Right"
                            Margin="0 0 8 0">
                <SymbolIcon Symbol="Add" ToolTipService.ToolTip="{Binding Source=PinCurrentPage, Converter={StaticResource LocalizeConverter}}"
                                  Opacity="0.55" />
              </Button>
              <TextBlock Text="{Binding Source=Pin, Converter={StaticResource LocalizeConverter}}"
                               VerticalAlignment="Center"
                               FontSize="14"
                               Margin="16 0 0 0"
                               Opacity="0.55" />
            </uwpToolkitControls:DockPanel>
            <ListView ItemsSource="{Binding Pins}"
                            ItemTemplate="{StaticResource PinMenuItemTemplate}"
                            IsItemClickEnabled="True"
                            SelectionMode="None"
                            TabIndex="1"
                            CanReorderItems="True"
                            AllowDrop="True"
                            xmlns:myExtensions="using:Hohoema.Presentation.Views.Extensions"
                            myExtensions:ListViewBase.ItemContextFlyoutCustomObjectToTag="{Binding}">
              <i:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="ItemClick">
                  <core:InvokeCommandAction Command="{Binding PageManager.OpenPageCommand}"
                                                  InputConverter="{StaticResource ItemClickEventArgsConverter}" />
                </core:EventTriggerBehavior>
              </i:Interaction.Behaviors>
              <myExtensions:ListViewBase.ItemContextFlyoutTemplate>
                <DataTemplate>
                  <MenuFlyout>
                    <MenuFlyoutItem Text="{Binding Source=PinChangeArias, Converter={StaticResource LocalizeConverter}}"
                                          Command="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag.ChangePinOverrideLabelCommand}"
                                          CommandParameter="{Binding}" />
                    <MenuFlyoutSeparator />
                    <MenuFlyoutItem Text="{Binding Source=PinRemove, Converter={StaticResource LocalizeConverter}}"
                                          Command="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag.RemovePinCommand}"
                                          CommandParameter="{Binding}" />
                  </MenuFlyout>
                </DataTemplate>
              </myExtensions:ListViewBase.ItemContextFlyoutTemplate>
            </ListView>
            <StackPanel Visibility="{Binding Pins, Converter={StaticResource EmptyCollectionVisibilityConverter}}"
                              Margin="0 8">
              <TextBlock Opacity="0.7"
                               FontSize="12"
                               Margin="24 0 0 0">
                      <Run Text="{Binding Source=PinHowToAddition, Converter={StaticResource LocalizeConverter}}" />
              </TextBlock>
            </StackPanel>
          </StackPanel>
          -->
        </muxc:NavigationView.PaneHeader>

        <muxc:NavigationView.PaneFooter>
          
          <uwpToolkitControls:DockPanel uwpToolkitControls:DockPanel.Dock="Top"
                                          HorizontalAlignment="Stretch">
            <Grid>
              <Button x:Name="OpenAccountButton"
                        Padding="8 0 0 0"
                        Background="Transparent"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Left"
                        VerticalContentAlignment="Center"
                        TabIndex="100"
                      Height="48"
                      >
                <Button.Flyout>
                  <MenuFlyout>

                    <MenuFlyoutItem x:Name="MenuFlyoutItem_OpenSettings"
                                      Text="{Binding Source=HohoemaPageType.Settings, Converter={StaticResource LocalizeConverter}}"
                                      Command="{Binding PageManager.OpenPageCommand}"
                                    CommandParameter="{x:Bind pageNavigation:HohoemaPageType.Settings}"
                                    />

                    <MenuFlyoutItem x:Name="MenuFlyoutItem_OpenDebugPage"
                                      Visibility="Collapsed" Text="Open Debug Page"
                                      Command="{Binding OpenDebugPageCommand}" />


                    <MenuFlyoutItem x:Name="MenuFlyoutItem_OpenAccountInfo"
                                      Visibility="Collapsed" Text="{Binding Source=LogInUserInfo, Converter={StaticResource LocalizeConverter}}"
                                      Command="{Binding OpenAccountInfoCommand}" />

                    <MenuFlyoutSeparator />
                    
                    <MenuFlyoutItem x:Name="MenuFlyoutItem_Logout"
                                      Visibility="Collapsed" Text="{Binding Source=LogOut, Converter={StaticResource LocalizeConverter}}"
                                      Command="{Binding LogoutFromNiconicoCommand}" />
                    
                    <MenuFlyoutItem x:Name="MenuFlyoutItem_Login"
                                      Visibility="Collapsed" Text="{Binding Source=LogIn, Converter={StaticResource LocalizeConverter}}"
                                      Command="{Binding NiconicoLoginService.LoginCommand}" />

                    
                  </MenuFlyout>
                </Button.Flyout>
                <Grid>

                  <listItemControls:BooleanViewSwitcher IsSwitchView="{Binding NiconicoSession.IsLoggedIn}" >
                    <listItemControls:BooleanViewSwitcher.DefaultViewTemplate>
                      <DataTemplate>
                        <StackPanel Orientation="Horizontal" Spacing="8">
                          <SymbolIcon Symbol="Setting" Margin="3 0 0 0" Height="18" Width="24" />
                          <TextBlock Text="{Binding Source=AccountAndSettings, Converter={StaticResource LocalizeConverter}}"
                                     Margin="2 0 0 0"
                             />
                        </StackPanel>
                      </DataTemplate>
                    </listItemControls:BooleanViewSwitcher.DefaultViewTemplate>
                    <listItemControls:BooleanViewSwitcher.SwitchedViewTemplate>
                      <DataTemplate>
                        <uwpToolkitControls:DockPanel Margin="0 0"
                                                  x:Name="AccountInfoLayout"
                                                      >
                          <uwpToolkitControls:ImageEx Source="{Binding NiconicoSession.UserIconUrl,Mode=OneWay}"
                             uwpToolkitControls:DockPanel.Dock="Left"
                             Height="24"
                             Width="24"
                             Margin="0 0 0 0"
                                 CornerRadius="60"
                                 />
                          <StackPanel Margin="11 0 0 0">
                            <TextBlock Text="{Binding NiconicoSession.UserName, Mode=OneWay}" VerticalAlignment="Center" />
                          </StackPanel>
                        </uwpToolkitControls:DockPanel>
                      </DataTemplate>
                    </listItemControls:BooleanViewSwitcher.SwitchedViewTemplate>
                  </listItemControls:BooleanViewSwitcher>
                </Grid>
              </Button>
            </Grid>
          </uwpToolkitControls:DockPanel>
        </muxc:NavigationView.PaneFooter>

        <muxc:NavigationView.AutoSuggestBox>
          <AutoSuggestBox x:Name="SearchTextBox" Text="{x:Bind SearchInputText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                          PlaceholderText="{Binding Source=Search, Converter={StaticResource LocalizeConverter}}" 
                          TabIndex="103" Margin="0" 
                          UseSystemFocusVisuals="True"
                          IsFocusEngagementEnabled="True" 
                              ItemsSource="{Binding SearchAutoSuggestItems}"
                              QuerySubmitted="SearchTextBox_QuerySubmitted"
                              TextChanged="SearchTextBox_TextChanged"
                              UpdateTextOnSelect="False"
                              GotFocus="SearchTextBox_GotFocus"
                          AutoMaximizeSuggestionArea="True"
                          MinWidth="120"
                              >
            <i:Interaction.Behaviors>
              <core:EventTriggerBehavior EventName="GotFocus">
                <core:CallMethodAction MethodName="SelectAll" />
              </core:EventTriggerBehavior>
              <mybehavior:KeyboardTrigger Key="Enter" x:Name="SearchSubmitWithEnterKeyTrigger" IsEnabled="False">
                <core:InvokeCommandAction Command="{Binding SearchCommand}" CommandParameter="{x:Bind SearchInputText, Mode=OneWay}" />
              </mybehavior:KeyboardTrigger>
            </i:Interaction.Behaviors>

            <AutoSuggestBox.ItemTemplate>
              <DataTemplate>
                <TextBlock Text="{Binding Id, Converter={StaticResource LocalizeConverter}}" />
              </DataTemplate>
            </AutoSuggestBox.ItemTemplate>
          </AutoSuggestBox>
        </muxc:NavigationView.AutoSuggestBox>
        
        <muxc:NavigationView.Content>
          <Frame x:Name="ContentFrame" VerticalContentAlignment="Stretch" DataContext="{x:Null}" Margin="0 0 0 0"
                       Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                       >
            <myextensions:ContextFlyoutExtension.FlyoutTemplateSelector>
              <templateSelector:HohoemaFlyoutTemplateSelector>
                <templateSelector:HohoemaFlyoutTemplateSelector.LiveFlyoutTemplate>
                  <DataTemplate>
                    <listItemControls:LiveListItemFlyout />
                  </DataTemplate>
                </templateSelector:HohoemaFlyoutTemplateSelector.LiveFlyoutTemplate>
                <templateSelector:HohoemaFlyoutTemplateSelector.SearchHistoryFlyoutTemplate>
                  <DataTemplate>
                    <local:SearchHistoryListItemFlyout />
                  </DataTemplate>
                </templateSelector:HohoemaFlyoutTemplateSelector.SearchHistoryFlyoutTemplate>
              </templateSelector:HohoemaFlyoutTemplateSelector>
            </myextensions:ContextFlyoutExtension.FlyoutTemplateSelector>
          </Frame>
        </muxc:NavigationView.Content>
      </muxc:NavigationView>
    </uwpToolkitControls:DockPanel>
    <Grid x:Name="PlayerLayout"
          Visibility="Collapsed">
      <Frame x:Name="PlayerFrame"
             DataContext="{x:Null}"
             CacheSize="1"
             HorizontalContentAlignment="Stretch"
             VerticalContentAlignment="Stretch"
             XYFocusKeyboardNavigation="Disabled"
             >
        <Frame.ContentTransitions>
          <TransitionCollection>
            <NavigationThemeTransition>
              <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                <DrillInNavigationTransitionInfo />
              </NavigationThemeTransition.DefaultNavigationTransitionInfo>
            </NavigationThemeTransition>
          </TransitionCollection>
        </Frame.ContentTransitions>
      </Frame>
      <Grid x:Name="FillPlayerLayout"
            Visibility="Collapsed"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"></Grid>
      <Grid x:Name="FloatPlayerLayout"
            Visibility="Collapsed">
        <!--
        <Button Background="Transparent"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                HorizontalContentAlignment="Stretch"
                VerticalContentAlignment="Stretch">
          
          <i:Interaction.Behaviors>
            <core:EventTriggerBehavior EventName="Click">
              <core:CallMethodAction TargetObject="{Binding PrimaryViewPlayerManager}"
                                     MethodName="ShowWithFill" />
            </core:EventTriggerBehavior>
          </i:Interaction.Behaviors>
          <Button.ContextFlyout>
            <MenuFlyout>
              <MenuFlyoutItem Text="閉じる"
                              Command="{Binding PrimaryViewPlayerManager.CloseCommand}" />
            </MenuFlyout>
          </Button.ContextFlyout>
          <Border />
        </Button>
        -->
      </Grid>
    </Grid>
    <Grid Height="32" VerticalAlignment="Top">
      <Border x:Name="DraggableContent" IsTapEnabled="True" Background="Transparent">
        <TextBlock x:Name="TitleBarTextBlock" Text="Hohoema" Margin="12 0 0 0" VerticalAlignment="Center" Opacity="0.9" FontSize="13" HorizontalAlignment="Left" ></TextBlock>
      </Border>

      <StackPanel x:Name="DebugUIPanel" Orientation="Horizontal" Visibility="Collapsed" HorizontalAlignment="Right" Margin="0 0 140 0" Spacing="8" Opacity="0.8">
        
      </StackPanel>
      
    </Grid>
    <VisualStateManager.VisualStateGroups >
      <!-- デバッグ -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind IsDebug}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="DebugUIPanel.Visibility" Value="Visible" />
            <Setter Target="MenuFlyoutItem_OpenDebugPage.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>



      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind CoreNavigationView.PaneDisplayMode, Mode=OneWay}" EqualTo="{x:Bind muxc:NavigationViewPaneDisplayMode.Top}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="AccountInfoLayout.Width" Value="32" />
            <Setter Target="AccountInfoLayout.Padding" Value="4 0 0 0" />
          </VisualState.Setters>
        </VisualState>

        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind CoreNavigationView.PaneDisplayMode, Mode=OneWay}" EqualTo="{x:Bind muxc:NavigationViewPaneDisplayMode.LeftMinimal}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="CoreNavigationView.PaneTitle" Value="{x:Bind PageTitle, Mode=OneWay}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      <!-- Win10タブレットの場合 -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:UserInteractionModeTrigger InteractionMode="Touch" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="CoreNavigationView.Margin" Value="0 0 0 0" />
            <Setter Target="TitleBarTextBlock.Opacity" Value="0" />
            <Setter Target="DraggableContent.Height" Value="0" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger EqualTo="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" Value="{x:Bind models:ApplicationLayout.TV}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="CoreNavigationView.IsBackButtonVisible" Value="Collapsed" />
            <Setter Target="CoreNavigationView.Margin" Value="27 48 0 48" />
            <Setter Target="CoreNavigationView.Background" Value="{ThemeResource ApplicationPageBackgroundThemeBrush}" />
            <Setter Target="DraggableContent.Height" Value="0" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
            
      <!-- プレイヤーとページレイアウトの表示状態 -->
      <VisualStateGroup x:Name="VSG_PlayerAndMenu" xmlns:vsmEx="using:Hohoema.Presentation.Views.Extensions.VIsualStateManager" vsmEx:VisualStateManagerExtensions.DebugCurrentState="True">
        <!-- プレイヤーを画面全体表示 -->
        <VisualState x:Name="VS_PlayerFill">
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.PrimaryViewPlayerManager.DisplayMode, Mode=OneWay}" EqualTo="{x:Bind servicesPlayer:PrimaryPlayerDisplayMode.Fill}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="PlayerLayout.Visibility" Value="Visible" />
            <Setter Target="CoreNavigationView.Visibility" Value="Collapsed" />
            <Setter Target="TitleBarTextBlock.Visibility" Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
        <!-- プレイヤーを小窓表示（TV） -->
        <VisualState x:Name="VS_PlayerWIW_TV">
          <VisualState.StateTriggers>
            <mytrigger:CompositeStateTrigger Operator="And">
              <windowsTriggers:EqualsStateTrigger EqualTo="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" Value="{x:Bind models:ApplicationLayout.TV}" />
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.PrimaryViewPlayerManager.DisplayMode, Mode=OneWay}" EqualTo="{x:Bind servicesPlayer:PrimaryPlayerDisplayMode.WindowInWindow}" />
            </mytrigger:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="PlayerLayout.Visibility" Value="Visible" />
            <Setter Target="FloatPlayerLayout.Visibility" Value="Visible" />
            <Setter Target="PlayerLayout.Width" Value="426" />
            <Setter Target="PlayerLayout.Height" Value="240" />
            <Setter Target="PlayerLayout.Margin" Value="0 0 8 0" />
            <Setter Target="PlayerLayout.VerticalAlignment" Value="Bottom" />
            <Setter Target="PlayerLayout.HorizontalAlignment" Value="Right" />
          </VisualState.Setters>
        </VisualState>

        <!-- プレイヤーを小窓表示（Desktop） -->
        <VisualState x:Name="VS_PlayerWIW_Desktop">
          <VisualState.StateTriggers>
            <mytrigger:CompositeStateTrigger Operator="And">
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.Desktop}" />
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.PrimaryViewPlayerManager.DisplayMode, Mode=OneWay}" EqualTo="{x:Bind servicesPlayer:PrimaryPlayerDisplayMode.WindowInWindow}" />
            </mytrigger:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="PlayerLayout.Visibility" Value="Visible" />
            <Setter Target="FloatPlayerLayout.Visibility" Value="Visible" />
            <Setter Target="PlayerLayout.Width" Value="426" />
            <Setter Target="PlayerLayout.Height" Value="240" />
            <Setter Target="PlayerLayout.Margin" Value="0 0 8 0" />
            <Setter Target="PlayerLayout.VerticalAlignment" Value="Bottom" />
            <Setter Target="PlayerLayout.HorizontalAlignment" Value="Right" />
          </VisualState.Setters>
        </VisualState>
        <!-- プレイヤーを小窓表示（Tablet） -->
        <VisualState x:Name="VS_PlayerWIW_Tablet">
          <VisualState.StateTriggers>
            <mytrigger:CompositeStateTrigger Operator="And">
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.Tablet}" />
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.PrimaryViewPlayerManager.DisplayMode, Mode=OneWay}" EqualTo="{x:Bind servicesPlayer:PrimaryPlayerDisplayMode.WindowInWindow}" />
            </mytrigger:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="TitleBarTextBlock.Visibility" Value="Collapsed" />
            <Setter Target="PlayerLayout.Visibility" Value="Visible" />
            <Setter Target="PlayerLayout.Height" Value="280" />
            <Setter Target="FloatPlayerLayout.Visibility" Value="Visible" />
            <Setter Target="MobilePlayerTopMargin.Visibility" Value="Visible" />
            <Setter Target="MobilePlayerTopMargin.Height" Value="280" />
            <Setter Target="PlayerLayout.VerticalAlignment" Value="Top" />
          </VisualState.Setters>
        </VisualState>
        <!-- プレイヤーを小窓表示（Mobile） -->
        <VisualState x:Name="VS_PlayerWIW_Mobile">
          <VisualState.StateTriggers>
            <mytrigger:CompositeStateTrigger Operator="And">
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.Mobile}" />
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.PrimaryViewPlayerManager.DisplayMode, Mode=OneWay}" EqualTo="{x:Bind servicesPlayer:PrimaryPlayerDisplayMode.WindowInWindow}" />
            </mytrigger:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="TitleBarTextBlock.Visibility" Value="Collapsed" />
            <Setter Target="PlayerLayout.Visibility" Value="Visible" />
            <Setter Target="PlayerLayout.Height" Value="180" />
            <Setter Target="FloatPlayerLayout.Visibility" Value="Visible" />
            <Setter Target="MobilePlayerTopMargin.Visibility" Value="Visible" />
            <Setter Target="MobilePlayerTopMargin.Height" Value="180" />
            <Setter Target="PlayerLayout.VerticalAlignment" Value="Top" />
          </VisualState.Setters>
        </VisualState>
        <!-- TV -->
        <VisualState x:Name="VS_TV">
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.TV}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
          </VisualState.Setters>
        </VisualState>
        <!-- Desktop -->
        <VisualState x:Name="VS_Desktop">
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.Desktop}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
          </VisualState.Setters>
        </VisualState>
        <!-- Tablet -->
        <VisualState x:Name="VS_Tablet">
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.Tablet}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
          </VisualState.Setters>
        </VisualState>
        <!-- Mobile -->
        <VisualState x:Name="VS_Mobile">
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.Mobile}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <!-- メニューの表示状態 -->
      <VisualStateGroup x:Name="VSG_Pane" 
                        xmlns:vsmEx="using:Hohoema.Presentation.Views.Extensions.VIsualStateManager"
                        vsmEx:VisualStateManagerExtensions.DebugCurrentState="True"
                        >
        <!-- TV On Focus -->
        <VisualState x:Name="VS_TVAndOnFocus">
          <VisualState.StateTriggers>
            <mytrigger:CompositeStateTrigger Operator="And">
              <StateTrigger IsActive="{x:Bind _isFocusMenu.Value, Mode=OneWay}" />
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.TV}" />
            </mytrigger:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
          </VisualState.Setters>
          <VisualState.Storyboard>
            <Storyboard>
              <!--
              <DoubleAnimation Storyboard.TargetName="PaneLayout" Storyboard.TargetProperty="Opacity" From="0.5" To="1.0" Duration="0:0:0.125" />
              -->
            </Storyboard>
          </VisualState.Storyboard>
        </VisualState>
        <!-- TV -->
        <VisualState x:Name="VS_TopMenu_TV">
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.TV}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
          </VisualState.Setters>
          <VisualState.Storyboard>
            <Storyboard>
              <!--
              <DoubleAnimation Storyboard.TargetName="PaneLayout" Storyboard.TargetProperty="Opacity" From="1.0" To="0.5" Duration="0:0:0.125" />
              -->
            </Storyboard>
          </VisualState.Storyboard>
        </VisualState>
        <!-- Desktop -->
        <VisualState x:Name="VS_TopMenu_Mouse">
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.Desktop}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="CoreNavigationView.OpenPaneLength" Value="{StaticResource SideMenuPaneLength}" />
          </VisualState.Setters>
        </VisualState>
        <!-- Table -->
        <VisualState x:Name="VS_TopMenu_Tablet">
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.Tablet}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="CoreNavigationView.OpenPaneLength" Value="{StaticResource SideMenuPaneLength}" />
          </VisualState.Setters>
        </VisualState>
        <!-- Mobile -->
        <VisualState x:Name="VS_TopMenu_Mobile">
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.Mobile}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="CoreNavigationView.OpenPaneLength" Value="{StaticResource SideMenuPaneLength}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <!-- レイアウトモード -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.TV}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:DeviceFamilyStateTrigger DeviceFamily="Desktop" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
          </VisualState.Setters>
        </VisualState>
        <!-- フルスクリーン時はステータスバーが非表示になる -->
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:CompositeStateTrigger Operator="And">
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.Mobile}" />
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.WindowService.IsFullScreen.Value, Mode=OneWay}" />
            </windowsTriggers:CompositeStateTrigger>
          </VisualState.StateTriggers>
        </VisualState>
        <!-- モバイルかつ横持ち状態 -->
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:CompositeStateTrigger Operator="And">
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.Mobile}" />
              <windowsTriggers:OrientationStateTrigger Orientation="Landscape" />
            </windowsTriggers:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <!--
            <Setter Target="PaneLayout.Margin" Value="40 0 0 0" />
            -->
          </VisualState.Setters>
        </VisualState>
        <!-- モバイルかつ縦持ち状態 -->
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:CompositeStateTrigger Operator="And">
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.Mobile}" />
              <windowsTriggers:OrientationStateTrigger Orientation="Portrait" />
            </windowsTriggers:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <!--
            <Setter Target="PaneLayout.Margin" Value="0 24 0 0" />
            -->
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <!-- アプリのサービス状態 -->
      <VisualStateGroup>
        <VisualState x:Name="OfflineState">
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{Binding NiconicoSession.ServiceStatus}" EqualTo="{x:Bind models:HohoemaAppServiceLevel.Offline}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="MenuFlyoutItem_Login.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
        <VisualState x:Name="ServiceUnavailableState">
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{Binding NiconicoSession.ServiceStatus}" EqualTo="{x:Bind models:HohoemaAppServiceLevel.ServiceUnavailable}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="MenuFlyoutItem_Login.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
        <VisualState x:Name="WithoutLoggedInState">
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{Binding NiconicoSession.ServiceStatus}" EqualTo="{x:Bind models:HohoemaAppServiceLevel.WithoutLoggedIn}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ServiceStateText.Visibility" Value="Collapsed" />
            <Setter Target="MenuFlyoutItem_Login.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
        <VisualState x:Name="LoggedInState">
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{Binding NiconicoSession.ServiceStatus}" EqualTo="{x:Bind models:HohoemaAppServiceLevel.LoggedIn}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ServiceStateText.Visibility" Value="Collapsed" />
            <Setter Target="MenuFlyoutItem_OpenAccountInfo.Visibility" Value="Visible" />
            <Setter Target="MenuFlyoutItem_Logout.Visibility" Value="Visible" />
            <Setter Target="CoreNavigationView.MenuItemsSource" Value="{Binding MenuItems_LoggedIn}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <!-- 検索ボックス -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <mytrigger:FocusTrigger Target="{Binding ElementName=SearchTextBox}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="SearchSubmitWithEnterKeyTrigger.IsEnabled" Value="True" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
    </VisualStateManager.VisualStateGroups>
  </Grid>
</UserControl>
