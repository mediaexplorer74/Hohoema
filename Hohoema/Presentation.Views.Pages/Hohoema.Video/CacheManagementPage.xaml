<Page
    x:Name="PageRoot"
    x:Class="Hohoema.Presentation.Views.Pages.Hohoema.Video.CacheManagementPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Hohoema.Presentation.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls"
    xmlns:mvvm="using:Prism.Mvvm"
    xmlns:mybehavior="using:Hohoema.Presentation.Views.Behaviors"
    xmlns:ext="using:WinRTXamlToolkit.Controls.Extensions"
    xmlns:controls="using:Hohoema.Presentation.Views.Controls"
    xmlns:videoListControls="using:Hohoema.Presentation.Views.Controls.VideoList"
    xmlns:iconPack="using:MahApps.Metro.IconPacks"
    xmlns:uwpcontrols="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:uwpExtensions="using:Microsoft.Toolkit.Uwp.UI"
    xmlns:actions="using:Hohoema.Presentation.Views.Actions"
    xmlns:myExtensions="using:Hohoema.Presentation.Views.Extensions"
  xmlns:videolistPage="using:Hohoema.Presentation.Views.Controls.VideoList" 
  xmlns:windowsStateTrigger="using:WindowsStateTriggers" 
  DataContext="{x:Null}"
  xmlns:i18nExt="using:I18NPortable.Xaml.Extensions" xmlns:videoList="using:Hohoema.Presentation.Views.Controls.VideoList.VideoListItem"
  mc:Ignorable="d"
    >

  <Page.Resources>
    <CollectionViewSource x:Key="CacheItemsViewSource"
                          Source="{Binding Groups}"
                          IsSourceGrouped="True"
                          ItemsPath="Items"
                          >

    </CollectionViewSource>
  </Page.Resources>
  
  <Grid>

    <videolistPage:VideoItemsListView ItemsSource="{Binding Source={StaticResource CacheItemsViewSource}}"
                                      ItemCommand="{Binding HohoemaPlaylist.PlayCommand}"
                                      ItemContextFlyoutTemplate="{StaticResource VideoListItemFlyoutTemplate}"
                                      RefreshCommand="{Binding RefreshCommand}"
                                      x:Name="VideoItemsListView"
                                      Padding="0 48 0 0"
                                      >
      <videolistPage:VideoItemsListView.Header>

        <Grid x:Name="HeaderLayout" Background="{StaticResource MenuBackgroundBrush}">
          <CommandBar >
            <CommandBar.Content>
              <controls:AppTitleBar Title="{Binding Title}" />
            </CommandBar.Content>

            <CommandBar.PrimaryCommands>
              <AppBarButton x:Name="SelectionToggleButton" Icon="List" Label="{i18nExt:Localize Key=Select}" Command="{Binding SelectionModeToggleCommand}" />

              <AppBarButton x:Name="ScrollToTopButton" Icon="Up" Label="{i18nExt:Localize Key=ReturnToPageTop}">
                <i:Interaction.Behaviors>
                  <core:EventTriggerBehavior EventName="Click">
                    <core:CallMethodAction TargetObject="{x:Bind VideoItemsListView}" MethodName="ResetScrollPosition" />
                  </core:EventTriggerBehavior>
                </i:Interaction.Behaviors>
              </AppBarButton>
            </CommandBar.PrimaryCommands>
            <CommandBar.SecondaryCommands>
              <AppBarButton Label="{Binding CacheSaveFolderPath.Value}" IsEnabled="False" />
              <AppBarButton Label="{i18nExt:Localize Key=OpenCacheFolder}" Command="{Binding OpenCurrentCacheFolderCommand}" />
              <AppBarSeparator />
              <AppBarButton Label="{i18nExt:Localize Key=ChangeCacheFolder}" Command="{Binding ChangeCacheVideoFolderCommand}" />
            </CommandBar.SecondaryCommands>
          </CommandBar>
        </Grid>
      </videolistPage:VideoItemsListView.Header>

      <videolistPage:VideoItemsListView.ItemTemplate>
        <DataTemplate>
          <Grid>
            <videoList:VideoListItem   
              ImageUrl="{Binding ThumbnailUrl}"
              ImageSubText="{Binding Length, Converter={StaticResource TimeToMovieLengthConverter}}"
              IsQueueItem="{Binding IsQueueItem}"
              CacheStatus="{Binding CacheStatus}"
              MiddleClickOrSwipeRightCommand="{Binding ToggleWatchAfterCommand}">

              <Grid>
                <StackPanel VerticalAlignment="Center">
                  <TextBlock Text="{Binding Label}" FontSize="16"
                       TextWrapping="Wrap"
                       VerticalAlignment="Center" />

                  <StackPanel Orientation="Horizontal" Visibility="{Binding HasCacheProgress}" Spacing="8">
                    <TextBlock Width="48" HorizontalTextAlignment="Right">
                    <Run Text="{Binding DownloadProgress, Converter={StaticResource ToUserFriendlySoubleVolume}}" />%
                    </TextBlock>
                    <ProgressBar Width="180" Minimum="0.0" Maximum="1.0" Value="{Binding DownloadProgress}" IsIndeterminate="{Binding IsProgressUnknown}"  />
                  </StackPanel>
                </StackPanel>
                <TextBlock Text="{Binding CacheRequestedQuality, Converter={StaticResource LocalizeConverter}}"
                           VerticalAlignment="Bottom" HorizontalAlignment="Right"
                           Opacity="0.7"
                           />
              </Grid>
            </videoList:VideoListItem>
          </Grid>
        </DataTemplate>
      </videolistPage:VideoItemsListView.ItemTemplate>


      <videolistPage:VideoItemsListView.GroupStyle>
        <GroupStyle HidesIfEmpty="True">
          <GroupStyle.HeaderTemplate>
            <DataTemplate>
              <TextBlock Text="{Binding CacheStatus, Converter={StaticResource LocalizeConverter}}" />
            </DataTemplate>
          </GroupStyle.HeaderTemplate>
          
        </GroupStyle>
      </videolistPage:VideoItemsListView.GroupStyle>
      
      
    </videolistPage:VideoItemsListView>

    <Grid x:Name="EmptyItemsLayout" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center">
      <TextBlock Text="{i18nExt:Localize Key=CacheVideoNoItems}"
                     Style="{StaticResource SubtitleTextBlockStyle}"
                     Opacity="0.8"
                     />
    </Grid>


    <VisualStateManager.VisualStateGroups>
      <!-- レイアウトモード -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTrigger:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="TV" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_TV}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentPageMargin_TV}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTrigger:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Desktop" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Desktop}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentPageMargin_Desktop}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTrigger:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Tablet" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentPageMargin_Tablet}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTrigger:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Mobile" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentPageMargin_Mobile}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>


    </VisualStateManager.VisualStateGroups>

  </Grid>


</Page>
