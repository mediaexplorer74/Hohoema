<Page
  x:Class="Hohoema.Presentation.Views.Pages.Niconico.User.UserVideoPage"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:i="using:Microsoft.Xaml.Interactivity"
  xmlns:core="using:Microsoft.Xaml.Interactions.Core"
  xmlns:controls="using:Hohoema.Presentation.Views.Controls"
  xmlns:videolistPage="using:Hohoema.Presentation.Views.Controls.VideoList"
  xmlns:models="using:Hohoema.Models.Domain.Application"
  xmlns:windowsTriggers="using:WindowsStateTriggers"
  xmlns:i18nExt="using:I18NPortable.Xaml.Extensions"
  DataContext="{x:Null}"
  NavigationCacheMode="Enabled"
  mc:Ignorable="d"
  >
  <Grid>
    <videolistPage:VideoItemsListView 
      x:Name="VideoItemsListView" 
      ItemsSource="{x:Bind _vm.ItemsView, Mode=OneWay}" 
      ItemCommand="{x:Bind _vm.VideoPlayWithQueueCommand}" 
      ItemTemplate="{StaticResource VideoListItemControlDefaultTemplate}"
      ItemContextFlyoutTemplate="{StaticResource VideoListItemFlyoutTemplate}" 
      RefreshCommand="{x:Bind _vm.RefreshCommand}"
      PlaylistPassToFlyout="{x:Bind _vm.UserVideoPlaylist, Mode=OneWay}"
      >
      <videolistPage:VideoItemsListView.Header>
        <Grid x:Name="HeaderLayout" BorderThickness="0 0 0 1" BorderBrush="{StaticResource HohoemaLightBorderBrush}">
          <CommandBar x:Name="VideoListCommandBar" DefaultLabelPosition="Right" VerticalContentAlignment="Center">
            <CommandBar.Content>
              <controls:AppTitleBar Title="{x:Bind _vm.Title, Mode=OneWay}" />
            </CommandBar.Content>

            <CommandBar.PrimaryCommands>
              <AppBarElementContainer VerticalAlignment="Stretch" VerticalContentAlignment="Stretch" >
                <ComboBox ItemsSource="{x:Bind _vm.SortOptions}"
                          SelectedItem="{x:Bind _vm.SelectedSortOption, Mode=TwoWay}"
                          IsEnabled="{x:Bind _vm.NowLoading.Value, Mode=OneWay, Converter={StaticResource BoolNegation}}"
                          VerticalAlignment="Stretch"
                          Margin="0 6"
                          >
                  <ComboBox.ItemTemplate>
                    <DataTemplate>
                      <TextBlock Text="{Binding Label}" />
                    </DataTemplate>
                  </ComboBox.ItemTemplate>
                </ComboBox>
              </AppBarElementContainer>

              <AppBarButton x:Name="PlayAllButton"
                                Icon="Play"
                                Label="{i18nExt:Localize Key=PlayAll}"
                                Command="{x:Bind _vm.PlaylistPlayAllCommand}"
                                CommandParameter="{x:Bind _vm.CurrentPlaylistToken.Value, Mode=OneWay}"></AppBarButton>


              <AppBarButton x:Name="ScrollToTopButton" Icon="Up" Label="{i18nExt:Localize Key=ReturnToPageTop}">
                <i:Interaction.Behaviors>
                  <core:EventTriggerBehavior EventName="Click">
                    <core:CallMethodAction TargetObject="{x:Bind VideoItemsListView}" MethodName="ResetScrollPosition" />
                  </core:EventTriggerBehavior>
                </i:Interaction.Behaviors>
              </AppBarButton>
              <AppBarButton x:Name="SelectionToggleButton" Icon="List" Label="{i18nExt:Localize Key=Select}" Command="{x:Bind _vm.SelectionModeToggleCommand}" />
            </CommandBar.PrimaryCommands>

            <CommandBar.SecondaryCommands>
              <AppBarButton Label="{i18nExt:Localize Key=VideoOwner}" Command="{x:Bind _vm.OpenVideoOwnerUserPageCommand}"
                                />

              <AppBarButton x:Name="FeedRegstrationButton" Label="{i18nExt:Localize Key=SubscriptionAddUserVideos}" Icon="Add" Visibility="Visible"
                                Command="{x:Bind _vm.AddSubscriptionCommand}"
                                CommandParameter="{x:Bind _vm.UserInfo.Value, Mode=OneWay}"
                                >
              </AppBarButton>

              <AppBarButton x:Name="RefreshButton" Label="{i18nExt:Localize Key=Refresh}" Icon="Refresh" Command="{x:Bind _vm.RefreshCommand}" VerticalAlignment="Center"></AppBarButton>
            </CommandBar.SecondaryCommands>
          </CommandBar>
        </Grid>
      </videolistPage:VideoItemsListView.Header>
    </videolistPage:VideoItemsListView>
    <Grid x:Name="VideosPrivateNoticeLayout" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center">
      <TextBlock Style="{StaticResource SubtitleTextBlockStyle}" Opacity="0.8" TextWrapping="Wrap" Text="{i18nExt:Localize Key=UserVideosIsPrivate}"></TextBlock>
    </Grid>
    <Grid x:Name="EmptyItemsLayout" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center">
      <TextBlock Text="{i18nExt:Localize Key=UserVideosNoItems}" Style="{StaticResource SubtitleTextBlockStyle}" Opacity="0.8" />
    </Grid>
    
    
    <VisualStateManager.VisualStateGroups>
      <!-- レイアウトモード -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _vm.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.TV}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_TV}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentListViewBodyMargin_TV}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _vm.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.Desktop}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Desktop}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentListViewBodyMargin_Desktop}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _vm.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.Tablet}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Tablet}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentListViewBodyMargin_Tablet}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _vm.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.Mobile}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="VideoItemsListView.ItemsPanelPadding" Value="{StaticResource ContentListViewBodyMargin_Mobile}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind _vm.HasItem.Value, Mode=OneWay, Converter={StaticResource BoolNegation}}"/>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="EmptyItemsLayout.Opacity" Value="1.0" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind _vm.IsOwnerVideoPrivate, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="VideosPrivateNoticeLayout.Opacity" Value="1.0" />
            <Setter Target="FeedRegstrationButton.IsEnabled" Value="False" />
          </VisualState.Setters>
        </VisualState>
        
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>
