<Page
  x:Class="Hohoema.Presentation.Views.Pages.Niconico.RankingCategoryListPage"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:toolkit="using:WinRTXamlToolkit.Controls"
  xmlns:i="using:Microsoft.Xaml.Interactivity"
  xmlns:core="using:Microsoft.Xaml.Interactions.Core"
  xmlns:mybehavior="using:Hohoema.Presentation.Views.Behaviors"
  xmlns:myExtensions="using:Hohoema.Presentation.Views.Extensions"
  xmlns:controls="using:Hohoema.Presentation.Views.Controls"
  xmlns:flyouts="using:Hohoema.Presentation.Views.Flyouts"
  xmlns:windowsStateTriggers="using:WindowsStateTriggers"
  xmlns:i18nExt="using:I18NPortable.Xaml.Extensions" 
  NavigationCacheMode="Required"
  mc:Ignorable="d"
  >

  <Page.Resources>
    <flyouts:RankingGenreItemGroupFlyout x:Key="RankingGenreItemGroupFlyout" />

    <DataTemplate x:Key="RankingGenreItemFlyoutTemplate">
      <flyouts:RankingGenreItemFlyout />
    </DataTemplate>
  </Page.Resources>
  <Grid x:Name="ContentLayoutRoot">
    <toolkit:DockPanel x:Name="ContentLayout"
                       Margin="0 0 0 0">
      <Border toolkit:DockPanel.Dock="Top"
              x:Name="HeaderPanel"
              Background="{StaticResource MenuBackgroundBrush}"
              >
        <StackPanel>
          <CommandBar Background="Transparent"
                      Margin="0 0 0 0">
            <CommandBar.Content>
              <controls:AppTitleBar Title="{Binding Title}" />
            </CommandBar.Content>
            <CommandBar.PrimaryCommands>
              <AppBarButton Label="{i18nExt:Localize Key=Settings}"
                            Icon="Setting">
                <AppBarButton.Flyout>
                  <MenuFlyout>
                    <MenuFlyoutItem Text="{i18nExt:Localize Key=SelectDisplayRankingGenre}" Command="{Binding ShowDisplayGenreSelectDialogCommand}" />
                    <MenuFlyoutItem Text="{i18nExt:Localize Key=SelectReDisplayHiddenRankingTags}" Command="{Binding ShowDisplayGenreTagSelectDialogCommand}" />
                  </MenuFlyout>
                </AppBarButton.Flyout>
              </AppBarButton>
            </CommandBar.PrimaryCommands>
          </CommandBar>
        </StackPanel>
      </Border>
      <GridView x:Name="GenreItems"
                ScrollViewer.HorizontalScrollBarVisibility="Auto"
                ScrollViewer.HorizontalScrollMode="Auto"
                ScrollViewer.VerticalScrollBarVisibility="Hidden"
                ScrollViewer.VerticalScrollMode="Disabled"
                ItemsSource="{Binding RankingGenreItems.View}"
                myExtensions:ListViewBase.ItemContextFlyoutTemplate="{StaticResource RankingGenreItemFlyoutTemplate}"
                SelectionMode="None"
                SingleSelectionFollowsFocus="False">
        <myExtensions:ListViewBase.GroupHeaderContextFlyoutTemplate>
          <DataTemplate>
            <flyouts:RankingGenreItemGroupFlyout />
          </DataTemplate>
        </myExtensions:ListViewBase.GroupHeaderContextFlyoutTemplate>
        <GridView.ItemsPanel>
          <ItemsPanelTemplate>
            <ItemsWrapGrid Orientation="Vertical" />
          </ItemsPanelTemplate>
        </GridView.ItemsPanel>
        <i:Interaction.Behaviors>
          <mybehavior:ListViewItemTappedCommandBehavior Command="{Binding OpenRankingPageCommand}" />
        </i:Interaction.Behaviors>
        <GridView.GroupStyle>
          <GroupStyle>
            <GroupStyle.HeaderTemplate>
              <DataTemplate>
                <Border>
                  <HyperlinkButton FontSize="18"
                                   Foreground="{ThemeResource ApplicationHeaderForegroundThemeBrush}"
                                   Command="{Binding ElementName=ContentLayout, Path=DataContext.OpenRankingPageCommand}"
                                   CommandParameter="{Binding}"
                                   Width="128"
                                   IsEnabled="{Binding Genre, Converter={StaticResource NotNullToBoolean}}">
                    <TextBlock Text="{Binding Label}" />
                  </HyperlinkButton>
                </Border>
              </DataTemplate>
            </GroupStyle.HeaderTemplate>
            <GroupStyle.HeaderContainerStyle>
              <Style TargetType="GridViewHeaderItem">
                <Setter Property="Padding"
                        Value="0" />
                <Setter Property="IsTabStop"
                        Value="False" />
              </Style>
            </GroupStyle.HeaderContainerStyle>
          </GroupStyle>
        </GridView.GroupStyle>
        <GridView.ItemTemplate>
          <DataTemplate>
            <TextBlock Text="{Binding Label}"
                       TextWrapping="Wrap" />
          </DataTemplate>
        </GridView.ItemTemplate>
        <GridView.ItemContainerStyle>
          <Style TargetType="GridViewItem">
            <Setter Property="Padding"
                    Value="0" />
            <Setter Property="Margin"
                    Value="0 0 8 8" />
            <Setter Property="MinWidth"
                    Value="140" />
            <Setter Property="BorderBrush"
                    Value="{ThemeResource SystemBaseLowColor}" />
            <Setter Property="BorderThickness"
                    Value="1" />
          </Style>
        </GridView.ItemContainerStyle>
      </GridView>
    </toolkit:DockPanel>
    <VisualStateManager.VisualStateGroups>
      <!-- レイアウトモード -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="TV" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderPanel.Padding" Value="{StaticResource ContentListViewHeaderMargin_TV}" />
            <Setter Target="GenreItems.Padding" Value="{StaticResource ContentListViewBodyMargin_TV}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Desktop" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderPanel.Padding" Value="{StaticResource ContentListViewHeaderMargin_Desktop}" />
            <Setter Target="GenreItems.Padding" Value="{StaticResource ContentListViewBodyMargin_Desktop}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Tablet" />
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Mobile" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderPanel.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="GenreItems.Padding" Value="{StaticResource ContentListViewBodyMargin_Mobile}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>
