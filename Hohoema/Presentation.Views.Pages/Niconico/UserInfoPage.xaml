<Page
  x:Class="Hohoema.Presentation.Views.Pages.Niconico.UserInfoPage"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:i="using:Microsoft.Xaml.Interactivity"
  xmlns:core="using:Microsoft.Xaml.Interactions.Core"
  xmlns:toolkit="using:WinRTXamlToolkit.Controls"
  xmlns:listitem="using:Hohoema.Presentation.Views.HohoemaListItem"
  xmlns:mycontrols="using:Hohoema.Presentation.Views.Controls"
  xmlns:windowsStateTriggers="using:WindowsStateTriggers"
  xmlns:i18nExt="using:I18NPortable.Xaml.Extensions"
  xmlns:controls="using:Hohoema.Presentation.Views.Controls"
  DataContext="{x:Null}"
  NavigationCacheMode="Enabled"
  mc:Ignorable="d"
    >
  <Grid>
    <toolkit:DockPanel>
      <Border x:Name="HeaderLayout" toolkit:DockPanel.Dock="Top" Background="{StaticResource MenuBackgroundBrush}" >
        <CommandBar x:Name="HeaderCommandBar" >
          <CommandBar.Content>
            <controls:AppTitleBar Title="{Binding Title}" />
          </CommandBar.Content>

          <AppBarToggleButton x:Name="UserFollowButton" Background="Transparent" IsChecked="{Binding FollowToggleButtonService.IsFollowTarget.Value, Mode=TwoWay}" Command="{Binding FollowToggleButtonService.ToggleFollowCommand}" Visibility="Collapsed" Icon="Favorite" Label="フォロー" />
          <AppBarButton x:Name="FeedRegstrationButton" Label="購読に追加" Icon="Add" Visibility="{Binding IsVideoPrivate, Converter={StaticResource BooleanToVisibilityInverted}}"
                        Command="{Binding AddSubscriptionCommand}"
                        CommandParameter="{Binding}"
                        >
            
          </AppBarButton>
          <AppBarButton Label="{i18nExt:Localize Key=HohoemaPageType.Series}" Command="{Binding OpenUserSeriesPageCommand}" />

          <CommandBar.SecondaryCommands>
            <AppBarButton Label="{i18nExt:Localize Key=OpenWithBrowser}" Command="{Binding ExternalAccessService.OpenLinkCommand}" CommandParameter="{Binding}" VerticalAlignment="Center" UseSystemFocusVisuals="True" />
          </CommandBar.SecondaryCommands>
        </CommandBar>
      </Border>
      <ScrollViewer>
        <StackPanel x:Name="ContentLayout">
          <toolkit:DockPanel x:Name="AccountSummaryLayout">
            <Image Width="80" Height="80" Source="{Binding UserIconUri, Mode=OneWay}" Margin="0 0 16 0" toolkit:DockPanel.Dock="Left" />
            <TextBlock Text="{Binding UserName}" VerticalAlignment="Center" Style="{StaticResource SubheaderTextBlockStyle}" toolkit:DockPanel.Dock="Top" TextWrapping="Wrap" />
            <Border Background="Transparent" IsHitTestVisible="True" VerticalAlignment="Bottom" Margin="0 0 0 0">
              <StackPanel Orientation="Horizontal" Margin="0 8">
                <TextBlock Margin="0 0 8 0">
                                <Run Text="{i18nExt:Localize Key=UserFollower}" />:
                                <Run Text="{Binding FollowerCount}" /></TextBlock>
                <TextBlock Margin="0 0 8 0">
                                <Run Text="{i18nExt:Localize Key=UserStamp}" />:
                                <Run Text="{Binding StampCount}" /></TextBlock>
              </StackPanel>
            </Border>
          </toolkit:DockPanel>
          <Grid>
            <StackPanel Margin="0 0">
              <Border Height="16" Visibility="{Binding IsVideoPrivate, Converter={StaticResource BooleanToVisibilityInverted}}" />
              <toolkit:DockPanel x:Name="UserVideoTitleLayout">
                <HyperlinkButton Command="{Binding PageManager.OpenVideoListPageCommand}" CommandParameter="{Binding}" IsEnabled="{Binding HasOwnerVideo}" Foreground="{ThemeResource ApplicationForegroundThemeBrush}" Margin="0 8">
                  <TextBlock Style="{StaticResource SubtitleTextBlockStyle}" Text="{i18nExt:Localize Key=UserOwnedVideos}" />
                </HyperlinkButton>
              </toolkit:DockPanel>
              
              <Border Visibility="{Binding VideoInfoItems, Converter={StaticResource EmptyCollectionVisibilityConverter}}" Margin="8 16" x:Name="EmptyVideosDescLayout" Opacity="0.7">
                <TextBlock>
                                        <Run Text="{i18nExt:Localize Key=NoItems_UserOwnedVideos}" /></TextBlock>
              </Border>
              <Border Visibility="{Binding IsVideoPrivate, Converter={StaticResource BooleanToVisibility}}" x:Name="VideoPrivateDescLayout">
                <TextBlock Text="{i18nExt:Localize Key=IsVideoPrivate_UserOwnedVideos}" Opacity="0.7" />
              </Border>
              <Border Height="16" />
              <!-- Mylist -->
              <HyperlinkButton Command="{Binding OpenUserMylistPageCommand}" Foreground="{ThemeResource ApplicationForegroundThemeBrush}" Margin="0 8" x:Name="UserMylistTitleLayout">
                <TextBlock Style="{StaticResource SubtitleTextBlockStyle}" Text="{i18nExt:Localize Key=Mylist}" />
              </HyperlinkButton>
              <Border>
                <ScrollViewer VerticalScrollMode="Disabled" VerticalScrollBarVisibility="Disabled" HorizontalScrollMode="Auto" HorizontalScrollBarVisibility="Hidden">
                  <StackPanel Orientation="Horizontal">
                    <ListView ItemsSource="{Binding MylistGroups}"
                              x:Name="UserMylistLayout"
                              IsTabStop="False"
                              SelectionMode="None"
                              IsItemClickEnabled="True">
                      <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="ItemClick">
                          <core:InvokeCommandAction Command="{Binding PageManager.OpenPageCommand}"
                                                    InputConverter="{StaticResource ItemClickEventArgsConverter}" />
                        </core:EventTriggerBehavior>
                      </i:Interaction.Behaviors>
                      <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                          <Setter Property="VerticalAlignment" Value="Center" />
                          <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                          <Setter Property="VerticalContentAlignment" Value="Stretch" />
                          <Setter Property="Padding" Value="0" />
                          <Setter Property="Margin" Value="0" />
                        </Style>
                      </ListView.ItemContainerStyle>
                      <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                          <ItemsWrapGrid Orientation="Horizontal" Margin="0 0 48 0" />
                        </ItemsPanelTemplate>
                      </ListView.ItemsPanel>
                      <ListView.ItemTemplate>
                        <DataTemplate>
                          <listitem:HohoemaListItemMiniCard />
                        </DataTemplate>
                      </ListView.ItemTemplate>
                    </ListView>
                  </StackPanel>
                </ScrollViewer>
              </Border>
              <Border Visibility="{Binding MylistGroups, Converter={StaticResource EmptyCollectionVisibilityConverter}}" Margin="8 16" x:Name="EmptyMylistDescLayout" Opacity="0.7">
                <TextBlock>
                                        <Run Text="{i18nExt:Localize Key=NoItems_Mylist}" /></TextBlock>
              </Border>
            </StackPanel>
          </Grid>
        </StackPanel>
      </ScrollViewer>
    </toolkit:DockPanel>
    <VisualStateManager.VisualStateGroups>
      <!-- ログインしている場合に有効になるサービスを表示する -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding IsLoginUser}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding NiconicoSession.IsLoggedIn}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="UserFollowButton.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <!-- レイアウトモード -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="TV" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_TV}" />
            <Setter Target="ContentLayout.Margin" Value="{StaticResource ContentListViewBodyMargin_TV}" />
            <Setter Target="NGLayout.Margin" Value="48 0 48 0" />
            <Setter Target="AccountSummaryLayout.Margin" Value="16 0 48 0" />
            <Setter Target="UserVideoTitleLayout.Margin" Value="16 0 48 0" />
            <Setter Target="UserVideosLayout.Padding" Value="16 0 48 0" />
            <Setter Target="UserMylistTitleLayout.Margin" Value="16 0 48 0" />
            <Setter Target="UserMylistLayout.Padding" Value="16 0 48 0" />
            <Setter Target="EmptyVideosDescLayout.Margin" Value="16 16" />
            <Setter Target="VideoPrivateDescLayout.Margin" Value="16 16" />
            <Setter Target="EmptyMylistDescLayout.Margin" Value="16 16" />
            <Setter Target="HeaderCommandBar.Margin" Value="16 48 0 0" />
            <Setter Target="HeaderCommandBar.HorizontalAlignment" Value="Left" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Desktop" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Desktop}" />
            <Setter Target="ContentLayout.Margin" Value="{StaticResource ContentListViewBodyMargin_Desktop}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Tablet" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Tablet}" />
            <Setter Target="ContentLayout.Margin" Value="{StaticResource ContentListViewBodyMargin_Tablet}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Mobile" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="ContentLayout.Margin" Value="{StaticResource ContentListViewBodyMargin_Mobile}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      <!-- トップバー表示時のタイトル位置ずらし -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:DeviceFamilyStateTrigger DeviceFamily="Xbox" />
            <StateTrigger IsActive="{Binding AppearanceSettings.IsTVMode_Debug}" />
            <StateTrigger IsActive="{Binding AppearanceSettings.IsTVMode_Debug}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="{StaticResource WidthBreakPoint_WideToMiddle}" />
          </VisualState.StateTriggers>
          <VisualState.Setters></VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="0" />
          </VisualState.StateTriggers>
          <VisualState.Setters></VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding IsNGVideoOwner.Value}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="NGLayout.BorderBrush">
              <Setter.Value>
                <SolidColorBrush Color="Red" />
              </Setter.Value>
            </Setter>
            <Setter Target="NGUI.Visibility" Value="Visible" />
            <Setter Target="NotNGUI.Visibility" Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>
