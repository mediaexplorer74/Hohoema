<Page
  x:Class="Hohoema.Presentation.Views.Pages.Niconico.NicoRepo.NicoRepoPage"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:local="using:Hohoema.Presentation.Views.Pages.Niconico.NicoRepo"
  xmlns:i="using:Microsoft.Xaml.Interactivity"
  xmlns:core="using:Microsoft.Xaml.Interactions.Core"
  xmlns:models="using:Hohoema.Models.Domain.Application"
  xmlns:mybehavior="using:Hohoema.Presentation.Views.Behaviors"
  xmlns:controls="using:Hohoema.Presentation.Views.Controls"
  xmlns:uwpExtensions="using:Microsoft.Toolkit.Uwp.UI"
  xmlns:uwpcontrols="using:Microsoft.Toolkit.Uwp.UI.Controls"
  xmlns:templateSelector="using:Hohoema.Presentation.Views.TemplateSelector"
  xmlns:listitem="using:Hohoema.Presentation.Views.HohoemaListItem"
  xmlns:flyouts="using:Hohoema.Presentation.Views.Flyouts"
  xmlns:viewModels="using:Hohoema.Presentation.ViewModels"
  xmlns:videoListPage="using:Hohoema.Presentation.Views.Controls.VideoList"
  xmlns:windowsStateTriggers="using:WindowsStateTriggers"
  xmlns:i18nExt="using:I18NPortable.Xaml.Extensions" 
  xmlns:behaviors="using:Microsoft.Toolkit.Uwp.UI.Behaviors" 
  xmlns:vm="using:Hohoema.Presentation.ViewModels.Pages.Niconico.NicoRepo" 
  DataContext="{x:Null}"
  NavigationCacheMode="Enabled"
  mc:Ignorable="d"
  >
  <Page.Resources>
    <local:NicoRepoTimelineItemTemplateSelector x:Key="NicoRepoItemTemplateSelector">
      <!-- Video Item -->
      <local:NicoRepoTimelineItemTemplateSelector.VideoItem>
        <DataTemplate x:DataType="vm:NicoRepoVideoTimeline">
          <Grid>
            <TextBlock Text="{x:Bind ItempTopicDescription}"
                     Opacity="0.7"
                     FontSize="12"
                     HorizontalAlignment="Right"
                     VerticalAlignment="Bottom" />

            <videoListPage:VideoListItemControl 
                Title="{x:Bind Label}"                 
                ThumbnailUrl="{x:Bind ThumbnailUrl}"
                Length="{x:Bind Length, Converter={StaticResource TimeToMovieLengthConverter}}"  
                IsQueueItem="{x:Bind IsQueueItem, Mode=OneWay}"
                IsWatched="{x:Bind IsWatched, Mode=OneWay}"
                IsDeleted="{x:Bind IsDeleted}"
                IsHidden="{x:Bind VideoHiddenInfo, Mode=OneWay, Converter={StaticResource NotNullToBoolean}}"
                CacheStatus="{x:Bind CacheStatus, Mode=OneWay}"
                PostedAt="{x:Bind PostedAt, Converter={StaticResource DateTimeToString}}"
                PrivateReason="{x:Bind PrivateReason, Converter={StaticResource LocalizeConverter}}"
                ViewCount="{x:Bind ViewCount, Converter={StaticResource ToUserFriendlyNumber}}"
                CommentCount="{x:Bind CommentCount, Converter={StaticResource ToUserFriendlyNumber}}"
                MylistCount="{x:Bind MylistCount, Converter={StaticResource ToUserFriendlyNumber}}"
              />
          </Grid>
        </DataTemplate>
      </local:NicoRepoTimelineItemTemplateSelector.VideoItem>
      <!-- Live Item -->
      <local:NicoRepoTimelineItemTemplateSelector.LiveItem>
        <DataTemplate >
          <Grid Margin="8 0 8 0">
            <StackPanel>
              <uwpcontrols:DockPanel Margin="0 0 0 0">
                <uwpcontrols:ImageEx Source="{Binding ThumbnailUrl}" Width="36" Height="36" CornerRadius="24" uwpcontrols:DockPanel.Dock="Left" />
                <TextBlock Text="{Binding StartTime, Converter={StaticResource ToRelationalTime}}" uwpcontrols:DockPanel.Dock="Right" 
                           VerticalAlignment="Center"                         
                           />

                <TextBlock Text="{Binding ItempTopicDescription}"
                           Margin="8 0 0 0"
                           VerticalAlignment="Center"
                     />
              </uwpcontrols:DockPanel>

              <StackPanel Margin="42 0 0 0" Spacing="8">
                <uwpcontrols:DockPanel>
                  <uwpcontrols:ImageEx Source="{Binding CommunityThumbnail}" CornerRadius="4" Height="64" Stretch="Uniform" />
                  <TextBlock Text="{Binding LiveTitle}" VerticalAlignment="Center" Margin="8 0" TextTrimming="CharacterEllipsis" MaxLines="2" TextWrapping="Wrap" />
                </uwpcontrols:DockPanel>

              </StackPanel>
            </StackPanel>

          </Grid>
        </DataTemplate>
      </local:NicoRepoTimelineItemTemplateSelector.LiveItem>
    </local:NicoRepoTimelineItemTemplateSelector>
  </Page.Resources>
  <Grid>

    <ListView x:Name="ItemsList"
              ItemsSource="{x:Bind _vm.ItemsView, Mode=OneWay}"
              ItemTemplateSelector="{StaticResource NicoRepoItemTemplateSelector}"
              IsItemClickEnabled="True"
              IncrementalLoadingTrigger="Edge"
              UseSystemFocusVisuals="True"
              SelectionMode="None"
              HorizontalContentAlignment="Stretch"
              ItemContainerStyle="{StaticResource VideoListViewItemStyle}"
              uwpExtensions:ScrollViewerExtensions.VerticalScrollBarMargin="0 0 0 0"
              xmlns:myExtensions="using:Hohoema.Presentation.Views.Extensions"
              myExtensions:ListViewBase.DeferInitialize="True"
              Style="{StaticResource FixedHeaderListViewStyle}"
              >

      <myExtensions:ListViewBase.ItemContextFlyoutTemplateSelector>
        <templateSelector:HohoemaFlyoutTemplateSelector>
          <templateSelector:HohoemaFlyoutTemplateSelector.VideoFlyoutTemplate>
            <DataTemplate>
              <flyouts:VideoItemFlyout />
            </DataTemplate>
          </templateSelector:HohoemaFlyoutTemplateSelector.VideoFlyoutTemplate>
          <templateSelector:HohoemaFlyoutTemplateSelector.LiveFlyoutTemplate>
            <DataTemplate>
              <controls:LiveListItemFlyout />
            </DataTemplate>
          </templateSelector:HohoemaFlyoutTemplateSelector.LiveFlyoutTemplate>
        </templateSelector:HohoemaFlyoutTemplateSelector>
      </myExtensions:ListViewBase.ItemContextFlyoutTemplateSelector>
      <i:Interaction.Behaviors>
        <core:EventTriggerBehavior EventName="ItemClick">
          <core:InvokeCommandAction Command="{x:Bind _vm.OpenNicoRepoItemCommand}" InputConverter="{StaticResource ItemClickEventArgsConverter}" />
        </core:EventTriggerBehavior>
      </i:Interaction.Behaviors>
      <ListView.Header>
        <Grid>
          <StackPanel x:Name="HeaderLayout">
            <CommandBar x:Name="TopCommandBar" Padding="8 0" DefaultLabelPosition="Right" VerticalContentAlignment="Center">
              <CommandBar.Content>
                <controls:AppTitleBar Title="{x:Bind _vm.Title}" />
              </CommandBar.Content>

              <CommandBar.PrimaryCommands>
                <AppBarElementContainer VerticalContentAlignment="Stretch">
                  <DropDownButton Background="Transparent" VerticalAlignment="Stretch" CornerRadius="4">
                    <TextBlock>
                      <Run Text="{i18nExt:Localize Key=NicoRepoDisplayOptions}" /> : <Run Text="{x:Bind _vm.NicoRepoType.Value, Mode=OneWay, Converter={StaticResource LocalizeConverter}}" />
                    </TextBlock>
                    <DropDownButton.Flyout>
                      <Flyout x:Name="TopicsEditFlyout" >
                        <ListView ItemsSource="{x:Bind _vm.NicoRepoTypeList}" SelectionMode="Single" IsMultiSelectCheckBoxEnabled="False" SelectedItem="{Binding NicoRepoType.Value, Mode=TwoWay}"
                                  ItemTemplate="{StaticResource LocalizedTextItemTemplate}"
                                  >
                        </ListView>
                      </Flyout>
                    </DropDownButton.Flyout>
                  </DropDownButton>
                </AppBarElementContainer>
                <AppBarButton x:Name="ScrollToTopButton" Label="{i18nExt:Localize Key=ReturnToPageTop}" Icon="Up">
                  <i:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Click">
                      <core:CallMethodAction TargetObject="{x:Bind}" MethodName="ResetScrollPosition" />
                    </core:EventTriggerBehavior>
                  </i:Interaction.Behaviors>
                </AppBarButton>
                <AppBarButton x:Name="RefreshButton" Icon="Refresh" Background="Transparent" Label="{i18nExt:Localize Key=Refresh}" Command="{Binding RefreshCommand}" />
              </CommandBar.PrimaryCommands>
            </CommandBar>
          </StackPanel>
        </Grid>
      </ListView.Header>
      <ListView.ItemsPanel>
        <ItemsPanelTemplate>
          <ItemsStackPanel x:Name="ItemsPanel" Margin="0 0 0 0"  />
        </ItemsPanelTemplate>
      </ListView.ItemsPanel>
    </ListView>
    <Grid x:Name="NoTimelineItemsLayout"
          Visibility="Collapsed">
      <TextBlock Text="{i18nExt:Localize Key=NicorepoNoItems}"
                 Style="{StaticResource SubtitleTextBlockStyle}"
                 Opacity="0.8"
                 VerticalAlignment="Center"
                 HorizontalAlignment="Center" />
    </Grid>

    <VisualStateManager.VisualStateGroups>
      <!-- レイアウトモード -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{x:Bind _vm.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.TV}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_TV}" />
            <Setter Target="ItemsList.Padding" Value="{StaticResource ContentListViewBodyMargin_TV}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{x:Bind _vm.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.Desktop}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Desktop}" />
            <Setter Target="ItemsList.Padding" Value="{StaticResource ContentListViewBodyMargin_Desktop}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{x:Bind _vm.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.Tablet}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Tablet}" />
            <Setter Target="ItemsList.Padding" Value="{StaticResource ContentListViewBodyMargin_Tablet}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{x:Bind _vm.ApplicationLayoutManager.AppLayout, Mode=OneWay}" EqualTo="{x:Bind models:ApplicationLayout.Mobile}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="ItemsList.Padding" Value="{StaticResource ContentListViewBodyMargin_Mobile}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
     
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind _vm.HasItem.Value, Mode=OneWay, Converter={StaticResource BoolNegation}}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="NoTimelineItemsLayout.Visibility"
                    Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>
