<Page
    x:Class="Hohoema.Presentation.Views.Pages.SearchPages.SearchResultTagPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Hohoema.Presentation.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mvvm="using:Prism.Mvvm"
    xmlns:view="using:Hohoema.Presentation.Views"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:mybehavior="using:Hohoema.Presentation.Views.Behaviors"
    xmlns:ext="using:WinRTXamlToolkit.Controls.Extensions"
    xmlns:controls="using:Hohoema.Presentation.Views.Controls"
    xmlns:iconPack="using:MahApps.Metro.IconPacks"
    xmlns:uwpcontrols="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:uwpExtension="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:actions="using:Hohoema.Presentation.Views.Actions"
  xmlns:videolistPage="using:Hohoema.Presentation.Views.Pages.VideoListPage"
  xmlns:windowsTriggers="using:WindowsStateTriggers"
  DataContext="{x:Null}"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400"
    >
  <Page.Transitions>
    <TransitionCollection>
      <NavigationThemeTransition>
        <SuppressNavigationTransitionInfo />
      </NavigationThemeTransition>
    </TransitionCollection>
  </Page.Transitions>
  <Grid>
    <videolistPage:VideoItemsListView ItemsSource="{Binding ItemsView}" ItemCommand="{Binding HohoemaPlaylist.PlayCommand}" ItemContextFlyoutTemplate="{StaticResource VideoListItemFlyoutTemplate}" RefreshCommand="{Binding RefreshCommand}" x:Name="VideoItemsListView">
      <videolistPage:VideoItemsListView.Header>
        <Grid x:Name="HeaderLayout" Background="{StaticResource MenuBackgroundBrush}">
          <controls:ScrollHeader x:Name="ScrollHeader" Mode="Sticky">
            <StackPanel >
              <CommandBar>
                <CommandBar.PrimaryCommands>

                  <AppBarButton x:Name="SelectionToggleButton" Icon="List" Label="{Binding Source=Select, Converter={StaticResource LocalizeConverter}}" Command="{Binding SelectionModeToggleCommand}" />

                  <AppBarButton x:Name="ScrollToTopButton" Icon="Up" Label="{Binding Source=ReturnToPageTop, Converter={StaticResource LocalizeConverter}, Mode=OneTime}">
                    <i:Interaction.Behaviors>
                      <core:EventTriggerBehavior EventName="Click">
                        <core:CallMethodAction TargetObject="{x:Bind VideoItemsListView}" MethodName="ResetScrollPosition" />
                      </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                  </AppBarButton>
                  <AppBarButton x:Name="RefreshButton" Label="{Binding Source=Refresh, Converter={StaticResource LocalizeConverter}, Mode=OneTime}" Icon="Refresh" Command="{Binding RefreshCommand}" IsEnabled="{Binding CanChangeSort.Value}" VerticalAlignment="Center"></AppBarButton>
                  <AppBarToggleButton x:Name="TagFollowButton" Label="{Binding Source=Follow, Converter={StaticResource LocalizeConverter}, Mode=OneTime}" Icon="Favorite" IsChecked="{Binding FollowButtonService.IsFollowTarget.Value, Mode=TwoWay}" Command="{Binding FollowButtonService.ToggleFollowCommand}" Visibility="Collapsed" />
                </CommandBar.PrimaryCommands>
                <CommandBar.SecondaryCommands>
                  <AppBarButton x:Name="AddSubscriptionButton" Icon="Add" Label="{Binding Source=SubscriptionAddTag, Converter={StaticResource LocalizeConverter}, Mode=OneTime}"
                                Command="{Binding AddTagSearchSubscriptionCommand}"
                                CommandParameter="{Binding Keyword}"
                                >
                  </AppBarButton>
                </CommandBar.SecondaryCommands>
                <CommandBar.Content>
                  <toolkit:DockPanel x:Name="TitleLayout" Margin="0 0 0 0">
                    <ComboBox ItemsSource="{Binding VideoSearchOptionListItems}" 
                                DisplayMemberPath="Label" 
                                SelectedItem="{Binding SelectedSearchSort.Value, Mode=TwoWay}" 
                                Margin="0" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                    </ComboBox>
                  </toolkit:DockPanel>
                </CommandBar.Content>
              </CommandBar>
            </StackPanel>
          </controls:ScrollHeader>
        </Grid>
      </videolistPage:VideoItemsListView.Header>
      <videolistPage:VideoItemsListView.ItemTemplate>
        <DataTemplate>
          <Grid>
            <controls:BooleanViewSwitcher IsSwitchView="{Binding Source={StaticResource FeatureFlags}, Path=UseNewCardViewForVideoListView}">
              <controls:BooleanViewSwitcher.DefaultViewTemplate>
                <DataTemplate>
                  <videolistPage:VideoListItemControl />
                </DataTemplate>
              </controls:BooleanViewSwitcher.DefaultViewTemplate>
              <controls:BooleanViewSwitcher.SwitchedViewTemplate>
                <DataTemplate>
                  <videolistPage:VideoListItemCardLandscape />
                </DataTemplate>
              </controls:BooleanViewSwitcher.SwitchedViewTemplate>
            </controls:BooleanViewSwitcher>
          </Grid>
        </DataTemplate>
      </videolistPage:VideoItemsListView.ItemTemplate>
    </videolistPage:VideoItemsListView>
    <Grid x:Name="EmptyItemsLayout" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center">
      <TextBlock Text="{Binding Source=TagSearchNoItems, Converter={StaticResource LocalizeConverter}, Mode=OneTime}" Style="{StaticResource SubtitleTextBlockStyle}" Opacity="0.8" />
    </Grid>
    <VisualStateManager.VisualStateGroups>
      <!-- ログインしている場合に有効になるサービスを表示する -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding NiconicoSession.IsLoggedIn}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="TagFollowButton.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <!-- レイアウトモード -->
      <!--
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="TV" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_TV}" />
            <Setter Target="VideoItemsListView.Padding" Value="{StaticResource ContentPageMargin_TV}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Desktop" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Desktop}" />
            <Setter Target="VideoItemsListView.Padding" Value="{StaticResource ContentPageMargin_Desktop}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Tablet" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="VideoItemsListView.Padding" Value="{StaticResource ContentPageMargin_Tablet}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Mobile" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="VideoItemsListView.Padding" Value="{StaticResource ContentPageMargin_Mobile}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      -->
      
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding NowLoading.Value}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ScrollToTopButton.IsEnabled" Value="False" />
            <Setter Target="RefreshButton.IsEnabled" Value="False" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{Binding ItemsView.Count}" EqualTo="0" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="EmptyItemsLayout.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>
