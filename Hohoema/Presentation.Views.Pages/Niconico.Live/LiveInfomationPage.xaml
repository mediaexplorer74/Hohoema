<Page x:Class="Hohoema.Presentation.Views.Pages.Niconico.Live.LiveInfomationPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      mc:Ignorable="d"
      xmlns:i="using:Microsoft.Xaml.Interactivity"
      xmlns:core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:toolkit="using:WinRTXamlToolkit.Controls"
      xmlns:uwptoolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
      xmlns:iconPack="using:MahApps.Metro.IconPacks"
      xmlns:hardTrigger="using:AdaptiveTriggerLibrary.Triggers.HardwareInterfaceTriggers"
      xmlns:mybehavior="using:Hohoema.Presentation.Views.Behaviors"
      xmlns:templateselector="using:Hohoema.Presentation.Views.TemplateSelector"
      xmlns:controls="using:Hohoema.Presentation.Views.Controls"
      xmlns:myTrigger="using:Hohoema.Presentation.Views.StateTrigger"
      xmlns:myExtensions="using:Hohoema.Presentation.Views.Extensions"
      xmlns:windowsStateTriggers="using:WindowsStateTriggers"
      xmlns:liveVM="using:Hohoema.Presentation.ViewModels.Pages.Niconico.Live" 
      xmlns:liveViews="using:Hohoema.Presentation.Views.Pages.Niconico.Live"
      xmlns:i18nExt="using:I18NPortable.Xaml.Extensions"
      xmlns:uwpUI="using:Microsoft.Toolkit.Uwp.UI"
      NavigationCacheMode="Enabled">
  <Grid>
    <ScrollViewer >
      <StackPanel x:Name="ContentLayout" Spacing="16">

        <!-- サムネ、タイトル、視聴開始、タイムシフト予約 -->
        <Border Background="{StaticResource MenuBackgroundBrush}">
          <uwptoolkit:DockPanel x:Name="HeaderLayout"
                            >

            <toolkit:DockPanel toolkit:DockPanel.Dock="Top">
              <Image Source="{Binding LiveProgram.ThumbnailUrl}"
                   Height="80"
                   Margin="0 8 16 16"
                   toolkit:DockPanel.Dock="Left"
                    />

              <controls:AppTitleBar Title="{Binding Title}" />
            </toolkit:DockPanel>

          
          </uwptoolkit:DockPanel>
        </Border>

        <uwptoolkit:WrapPanel Orientation="Horizontal"
                            VerticalAlignment="Center"
                            x:Name="ViewActionButtonsLayout"
                            Margin="0 0 0 0"
                            >
          <Button x:Name="OpenLiveContentButton"
                Style="{ThemeResource AccentButtonStyle}"
                Command="{Binding OpenLiveContentCommand}"
                CommandParameter="{Binding Live}"
                Visibility="{Binding IsShowOpenLiveContentButton.Value}"
                Margin="0 0 8 0"
                Height="48"
                Padding="16 0">
            <StackPanel>
              <TextBlock Text="{i18nExt:Localize Key=WatchLiveStreaming}"
                       HorizontalAlignment="Center" />
              <TextBlock Visibility="{Binding ExpiredTime, Converter={StaticResource NotNullToVisibility}}"
                       Opacity="0.8">
                                    (<Run Text="{i18nExt:Localize Key=TimeShift_WatchLimit}" /> <Run Text="{Binding ExpiredTime, Converter={StaticResource ExpiredDateTimeToString}}" />)</TextBlock>
            </StackPanel>
          </Button>
          <Button x:Name="AddTimeshiftButton" Content="{i18nExt:Localize Key=AddTimeshift}"
                Command="{Binding TogglePreserveTimeshift}"
                Visibility="{Binding IsShowAddTimeshiftButton.Value}"
                Margin="0 0 8 0" />
          <Button x:Name="DeleteTimeshiftButton" Content="{i18nExt:Localize Key=AlreadyAddedTimeshift}"
                Visibility="{Binding IsShowDeleteTimeshiftButton.Value}"
                Margin="0 0 8 0">
            <Button.Flyout>
              <MenuFlyout>
                <MenuFlyoutItem Text="{i18nExt:Localize Key=DeleteTimeshift}"
                              Command="{Binding TogglePreserveTimeshift}" />
              </MenuFlyout>
            </Button.Flyout>
          </Button>
          <Button>
            <SymbolIcon Symbol="More" />
            <Button.Flyout>
              <MenuFlyout>
                <MenuFlyoutItem Text="{i18nExt:Localize Key=OpenWithBrowser}"
                              Command="{Binding OpenLinkCommand}"
                              CommandParameter="{Binding Live}" />
                <MenuFlyoutItem Text="{i18nExt:Localize Key=Share}"
                              Command="{Binding OpenShareUICommand}"
                              CommandParameter="{Binding Live}"
                              Visibility="{Binding Source={StaticResource IsXbox}, Converter={StaticResource BooleanToVisibilityInverted}}" />
                <MenuFlyoutSubItem Text="{i18nExt:Localize Key=Copy}"
                                 Visibility="{Binding Source={StaticResource IsXbox}, Converter={StaticResource BooleanToVisibilityInverted}}">
                  <MenuFlyoutItem Text="{i18nExt:Localize Key=CopyLiveStreamingLink}"
                                Command="{Binding CopyToClipboardCommand}"
                                CommandParameter="{Binding Live}" />
                  <MenuFlyoutItem Text="{i18nExt:Localize Key=CopyLiveStreamingId}"
                                Command="{Binding CopyToClipboardCommand}"
                                CommandParameter="{Binding Id}" />
                  <MenuFlyoutItem Text="{i18nExt:Localize Key=CopyLiveStreamingShareText}"
                                Command="{Binding CopyToClipboardWithShareTextCommand}"
                                CommandParameter="{Binding Live}" />
                </MenuFlyoutSubItem>
              </MenuFlyout>
            </Button.Flyout>
          </Button>
        </uwptoolkit:WrapPanel>


        <!-- 放送日時 -->
        <StackPanel Orientation="Horizontal">
          <StackPanel toolkit:DockPanel.Dock="Bottom"
                          Margin="16 8"
                          >
            <TextBlock Text="{i18nExt:Localize Key=LiveStreamingStartAt}" />

            <TextBlock Opacity="0.7">
               <Run Text="{Binding LiveProgram.ShowTime.BeginAt, Converter={StaticResource DateTimeToString}}" />
            </TextBlock>
          </StackPanel>

          <StackPanel toolkit:DockPanel.Dock="Bottom"
                          Margin="16 8"
                          >
            <TextBlock Text="{i18nExt:Localize Key=LiveStreamingEndAt}">

            </TextBlock>
            <TextBlock Opacity="0.7">
               <Run Text="{Binding LiveProgram.ShowTime.EndAt, Converter={StaticResource DateTimeToString}}" />
            </TextBlock>
            
          </StackPanel>
        </StackPanel>


        <!-- タグ -->
        <StackPanel>
          <!--
          <TextBlock Text="{i18nExt:Localize Key=Tag}"
                           Margin="0 16 8 8"
                           Style="{StaticResource SubtitleTextBlockStyle}" />
          -->
          <TextBlock Text="{i18nExt:Localize Key=NoTags}"
                           Opacity="0.7"
                           Visibility="{Binding LiveTags, Converter={StaticResource EmptyCollectionVisibilityConverter}}" />
          <ItemsControl ItemsSource="{Binding LiveTags}">
            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <uwptoolkit:WrapPanel Orientation="Horizontal" />
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemContainerStyle>
              <Style TargetType="ContentPresenter">
                <Setter Property="Margin"
                              Value="0 0 8 8" />
              </Style>
            </ItemsControl.ItemContainerStyle>
            <ItemsControl.ItemTemplateSelector>
              <templateselector:ValueDataTemplateSelector PropertyName="Type">
                <templateselector:ValueDataTemplate Value="{x:Bind liveVM:LiveTagType.Category}">
                  <DataTemplate x:DataType="liveVM:LiveTagViewModel">
                    <Button Command="{Binding SearchLiveTagCommand}"
                                  CommandParameter="{Binding}">
                      <StackPanel Orientation="Horizontal">
                        <iconPack:PackIconMaterial Kind="Lock"
                                                         Height="16"
                                                         Width="16"
                                                         Margin="0 0 8 0"
                                                         VerticalAlignment="Center" />
                        <TextBlock Text="{Binding Tag}"
                                         FontWeight="Bold"
                                         TextWrapping="Wrap"
                                         VerticalAlignment="Center" />
                      </StackPanel>
                    </Button>
                  </DataTemplate>
                </templateselector:ValueDataTemplate>
                <templateselector:ValueDataTemplate Value="{x:Bind liveVM:LiveTagType.Locked}">
                  <DataTemplate x:DataType="liveVM:LiveTagViewModel">
                    <Button Command="{Binding SearchLiveTagCommand}"
                                  CommandParameter="{Binding}">
                      <StackPanel Orientation="Horizontal">
                        <iconPack:PackIconMaterial Kind="Lock"
                                                         Height="16"
                                                         Width="16"
                                                         Margin="0 0 8 0"
                                                         VerticalAlignment="Center" />
                        <TextBlock Text="{Binding Tag}"
                                         TextWrapping="Wrap"
                                         VerticalAlignment="Center" />
                      </StackPanel>
                    </Button>
                  </DataTemplate>
                </templateselector:ValueDataTemplate>
                <templateselector:ValueDataTemplate Value="{x:Bind liveVM:LiveTagType.Free}">
                  <DataTemplate x:DataType="liveVM:LiveTagViewModel">
                    <Button Command="{Binding SearchLiveTagCommand}"
                                  CommandParameter="{Binding}">
                      <TextBlock Text="{Binding Tag}"
                                       TextWrapping="Wrap" />
                    </Button>
                  </DataTemplate>
                </templateselector:ValueDataTemplate>
              </templateselector:ValueDataTemplateSelector>
            </ItemsControl.ItemTemplateSelector>
          </ItemsControl>
        </StackPanel>
        
        <!-- 生放送説明文 -->
        <StackPanel>
          <TextBlock Text="{i18nExt:Localize Key=LiveStreamingDescription}"
                           Margin="0 16 8 8"
                           Style="{StaticResource SubtitleTextBlockStyle}" />
          <WebView DefaultBackgroundColor="Transparent"
                         x:Name="LiveDescWebView"
                         myExtensions:WebView.HtmlString="{Binding HtmlDescription}"
                         myExtensions:WebView.UriNotifyCommand="{Binding ScriptNotifyCommand}">
            <i:Interaction.Behaviors>
              <mybehavior:WebViewAutoResizeToContent />
              <!-- WebViewでUINavigationControllerがハマるバグに対応する -->
              <mybehavior:PreventSpoilerXYNavigationInWebView />
            </i:Interaction.Behaviors>
          </WebView>
        </StackPanel>
        
        <!-- 説明文内のリンク -->
        <uwptoolkit:Expander IsExpanded="False"
                                   Visibility="Collapsed"
                                   x:Name="DescriptionHyperlinkItems">
          <uwptoolkit:Expander.HeaderTemplate>
            <DataTemplate>
              <TextBlock Text="{i18nExt:Localize Key=LinkItemsInLiveStreamingDescription}"
                               Style="{StaticResource SubtitleTextBlockStyle}" />
            </DataTemplate>
          </uwptoolkit:Expander.HeaderTemplate>
          <GridView ItemsSource="{Binding DescriptionHyperlinkItems, Mode=OneWay}"
                          IsItemClickEnabled="True"
                          HorizontalContentAlignment="Stretch"
                          SelectionMode="None">
            <i:Interaction.Behaviors>
              <core:EventTriggerBehavior EventName="ItemClick">
                <core:InvokeCommandAction Command="{Binding ScriptNotifyCommand}"
                                                InputConverter="{StaticResource ItemClickEventArgsConverter}" />
              </core:EventTriggerBehavior>
            </i:Interaction.Behaviors>
            <GridView.ItemTemplate>
              <DataTemplate>
                <TextBlock Text="{Binding Label}" />
              </DataTemplate>
            </GridView.ItemTemplate>
            <GridView.ItemContainerStyle>
              <Style TargetType="GridViewItem">
                <Setter Property="Padding"
                              Value="16 8" />
                <Setter Property="HorizontalContentAlignment"
                              Value="Stretch" />
              </Style>
            </GridView.ItemContainerStyle>
          </GridView>
        </uwptoolkit:Expander>


        <!-- 放送者情報（Community） -->
        <Grid Visibility="{Binding Community, Converter={StaticResource NotNullToVisibility}}">
          <toolkit:DockPanel x:Name="BroadcasterDesc_Other">
            <StackPanel toolkit:DockPanel.Dock="Top">
              <toolkit:DockPanel Margin="0 0 0 0">
                <Image Source="{Binding Community.Thumbnail}"
                           Height="60"
                           Margin="0 0 8 0"
                           toolkit:DockPanel.Dock="Left" />
                <TextBlock Text="{Binding Community.Name}"
                               Style="{StaticResource TitleTextBlockStyle}"
                               VerticalAlignment="Center"
                               Margin="16 0 0 0"
                               />
              </toolkit:DockPanel>
            </StackPanel>
            <Border Height="16"
                        toolkit:DockPanel.Dock="Top" />
            <StackPanel Orientation="Horizontal"
                            toolkit:DockPanel.Dock="Top">
              <Button Content="{i18nExt:Localize Key=CommunityDetail}"
                          Command="{Binding PageManager.OpenPageCommand}"
                          CommandParameter="{Binding Community}"
                          Visibility="{Binding Community, Converter={StaticResource NotNullToVisibility}}" />
            </StackPanel>
            <Border Height="16"
                        toolkit:DockPanel.Dock="Top" />
          </toolkit:DockPanel>
          <Grid x:Name="BroadcasterDesc_Official"
                    Visibility="Collapsed">
            <TextBlock Text="{i18nExt:Localize Key=ThisStreamingIsPresentedByOfficial}" />
          </Grid>
        </Grid>

        
        <!-- 市場 -->
        <Grid EffectiveViewportChanged="Grid_EffectiveViewportChanged">

          <TextBlock Text="{i18nExt:Localize Key=NiconicoIchiba}" Style="{StaticResource SubtitleTextBlockStyle}" />
          
          <TextBlock Text="{i18nExt:Localize Key=IchibaNoItems}"
                         Visibility="{Binding IsEmptyIchibaItems}"
                         Opacity="0.7"
                         Margin="16" />
          <ItemsControl ItemsSource="{Binding IchibaItems}"
                            IsTabStop="False">
            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <controls:IchibaItemCard />
              </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.ItemContainerStyle>
              <Style TargetType="ContentPresenter">
                <Setter Property="Margin"
                            Value="0 0 16 8" />
              </Style>
            </ItemsControl.ItemContainerStyle>
            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <uwptoolkit:WrapPanel Orientation="Horizontal" />
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
          </ItemsControl>
        </Grid>
        
        <!-- オススメ -->
        <StackPanel >

          <TextBlock Text="{i18nExt:Localize Key=Recommend}" Style="{StaticResource SubtitleTextBlockStyle}" />
          <TextBlock Visibility="{Binding IsEmptyLiveRecommendItems}" 
                         Text="{i18nExt:Localize Key=RecommendNotFound}"
                         Opacity="0.7"
                         Margin="16" />
          <ListView ItemsSource="{Binding ReccomendItems}"
                        IsItemClickEnabled="True"
                        SelectionMode="None"
                        HorizontalContentAlignment="Stretch"
                        myExtensions:ListViewBase.DeferInitialize="True">
            <i:Interaction.Behaviors>
              <core:EventTriggerBehavior EventName="ItemClick">
                <core:InvokeCommandAction Command="{Binding PageManager.OpenPageCommand}"
                                              InputConverter="{StaticResource ItemClickEventArgsConverter}" />
              </core:EventTriggerBehavior>
            </i:Interaction.Behaviors>
            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <liveViews:LiveVideoListItem />
              </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ListView.ItemContainerStyle>
              <Style TargetType="ListViewItem">
                <Setter Property="HorizontalContentAlignment"
                            Value="Stretch" />
                <Setter Property="Margin"
                            Value="0 0 0 0" />
                <Setter Property="Padding"
                            Value="0 8 16 8" />
                <Setter Property="UseSystemFocusVisuals"
                            Value="True" />
                <Setter Property="BorderThickness"
                            Value="0 0 0 1" />
                <Setter Property="BorderBrush"
                            Value="#44707070" />
              </Style>
            </ListView.ItemContainerStyle>
          </ListView>
        </StackPanel>
       
      </StackPanel>
    </ScrollViewer>
    
    
    <VisualStateManager.VisualStateGroups>
      <!-- レイアウトモード -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}"
                                                    EqualTo="TV" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding"
                    Value="{StaticResource ContentListViewHeaderMargin_TV}" />
            <Setter Target="ContentLayout.Padding"
                    Value="{StaticResource ContentListViewBodyMargin_TV}" />
            <Setter Target="DescriptionHyperlinkItems.Visibility"
                    Value="Visible" />
            <Setter Target="ViewActionButtonsLayout.HorizontalAlignment"
                    Value="Left" />
            <Setter Target="ViewActionButtonsLayout.Margin"
                    Value="16 56 0 0" />
            <Setter Target="ContentLayout.Margin"
                    Value="0 56 0 0" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}"
                                                    EqualTo="Desktop" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding"
                    Value="{StaticResource ContentListViewHeaderMargin_Desktop}" />
            <Setter Target="ContentLayout.Padding"
                    Value="{StaticResource ContentListViewBodyMargin_Desktop}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}"
                                                    EqualTo="Tablet" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding"
                    Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="ContentLayout.Padding"
                    Value="{StaticResource ContentListViewBodyMargin_Tablet}" />

          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}"
                                                    EqualTo="Mobile" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding"
                    Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="ContentLayout.Padding"
                    Value="{StaticResource ContentListViewBodyMargin_Mobile}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      <!-- コミュニティ種別 -->
      <!-- 
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <myTrigger:EqualConditionStateTrigger Condition="{x:Bind live:CommunityType.Community}"
                                                  Value="{Binding LiveProgram.Community, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters></VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <myTrigger:EqualConditionStateTrigger Condition="{x:Bind live:CommunityType.Channel}"
                                                  Value="{Binding LiveProgram.Community, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters></VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <myTrigger:EqualConditionStateTrigger Condition="{x:Bind live:CommunityType.Official}"
                                                  Value="{Binding LiveProgram.Community, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="BroadcasterDesc_Official.Visibility"
                    Value="Visible" />
            <Setter Target="BroadcasterDesc_Other.Visibility"
                    Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      -->
      <!-- 放送ステータス種別 -->
      <!-- 
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <myTrigger:EqualConditionStateTrigger Condition="{x:Bind live:StatusType.ComingSoon}"
                                                  Value="{Binding LiveProgram.LiveStatus, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters></VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <myTrigger:EqualConditionStateTrigger Condition="{x:Bind live:StatusType.OnAir}"
                                                  Value="{Binding LiveProgram.LiveStatus, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters></VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <myTrigger:EqualConditionStateTrigger Condition="{x:Bind live:StatusType.Closed}"
                                                  Value="{Binding LiveProgram.LiveStatus, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters></VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <myTrigger:EqualConditionStateTrigger Condition="{x:Bind live:StatusType.Invalid}"
                                                  Value="{Binding LiveProgram.LiveStatus, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters></VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      -->
      <!-- タイムシフト予約状況 -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding IsTsPreserved.Value}" />
          </VisualState.StateTriggers>
          <VisualState.Setters></VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding LiveInfo.Timeshift.Enabled, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters></VisualState.Setters>
        </VisualState>
        <!-- TSが無効な放送 -->
        <VisualState>
          <VisualState.Setters></VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <!-- ログイン状態 -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding IsPremiumAccount.Value}" />
          </VisualState.StateTriggers>
          <VisualState.Setters></VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding IsLoggedIn.Value}" />
          </VisualState.StateTriggers>
          <VisualState.Setters></VisualState.Setters>
        </VisualState>
        <!-- ログインしていない場合 -->
        <VisualState>
          <VisualState.Setters></VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      
      <!-- 生放送情報の読み込み状態 -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding IsLiveInfoLoaded.Value}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="RootScrollViewer.Visibility"
                    Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>
