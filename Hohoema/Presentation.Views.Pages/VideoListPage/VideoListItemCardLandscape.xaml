<UserControl
    x:Class="Hohoema.Presentation.Views.Pages.VideoListPage.VideoListItemCardLandscape"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Hohoema.Presentation.Views.Pages.VideoListPage"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:uwpControls="using:Microsoft.Toolkit.Uwp.UI.Controls" 
  xmlns:windowsStateTrigger="using:WindowsStateTriggers" xmlns:myStateTrigger="using:Hohoema.Presentation.Views.StateTrigger"
  mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">

  <Grid Margin="8 0" Height="88" MaxWidth="800" >

    <uwpControls:DockPanel x:Name="ContentLayout" IsHitTestVisible="True" Background="Transparent">

      <Grid x:Name="ThumbnailContainer" 
            Width="160"
            Height="88"
            uwpControls:DockPanel.Dock="Left"
            >
        <uwpControls:ImageEx  x:Name="ThumbnailImage" Source="{Binding ThumbnailUrl}" 
               Stretch="Uniform"
                              Width="160" Height="240"
                              VerticalAlignment="Center"
            VerticalContentAlignment="Center" 
               />
        <Border x:Name="ImageOptionTextContainer" HorizontalAlignment="Right" VerticalAlignment="Bottom" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                Margin="4 5" Padding="3 1"
                >
          <TextBlock x:Name="ImageOptionText" Text="{Binding Length, Converter={StaticResource TimeToMovieLengthConverter}}" 
                     FontSize="13" 
                     FontWeight="Bold"
                     TextAlignment="Right"
                     VerticalAlignment="Center"
                     HorizontalTextAlignment="Center"
                     >
            <TextBlock.RenderTransform>
              <TranslateTransform Y="-1.5" />
            </TextBlock.RenderTransform>
          </TextBlock>
        </Border>
        <ProgressBar x:Name="ImageOptionProgressBar" Maximum="1.0" Minimum="0.0" 
                     Value="{Binding LastWatchedPositionInterpolation}" 
                     Foreground="Red" 
                     HorizontalAlignment="Stretch" 
                     HorizontalContentAlignment="Stretch" 
                     VerticalAlignment="Bottom"
                     Background="{ThemeResource SystemBaseMediumLowColor}"
                     Opacity="0.0"
                     />

        <StackPanel HorizontalAlignment="Right" Margin="8">
          <Button x:Name="AddWatchAfterButton" 
                  Command="{Binding AddWatchAfterCommand}"
                  CommandParameter="{Binding}"
                  FontSize="13" 
                  Opacity="0.0"
                  MinHeight="24"
                  MinWidth="32"
                  Height="28"
                  Background="{ThemeResource SystemChromeAltMediumHighColor}"
                  >
            <TextBlock Text="{Binding Source=HohoemaPageType.WatchAfter, Converter={StaticResource LocalizeConverter}}" FontSize="13" VerticalAlignment="Center">
              
            </TextBlock>
          </Button>
        </StackPanel>
      </Grid>

      <Grid x:Name="BodyContainer" Margin="16 0" >
        <StackPanel Spacing="0" HorizontalAlignment="Left">

          <TextBlock Text="{Binding Label}" FontSize="17" MaxLines="2" TextTrimming="CharacterEllipsis" TextWrapping="Wrap"
                     Margin="0 0 0 0"
                     />

          <TextBlock x:Name="PrivteReasonTextBlock" Visibility="Collapsed" Opacity="0.7" FontSize="13" Foreground="{ThemeResource SystemAccentColor}" TextLineBounds="Tight">
            <Run Text="{Binding PrivateReason, Converter={StaticResource LocalizeConverter}}" />
          </TextBlock>

          <TextBlock FontSize="13" Foreground="{ThemeResource SystemBaseMediumColor}">
            <Hyperlink Click="OpenVideoOwnerPage"><Run Text="{Binding ProviderName}" Foreground="{ThemeResource SystemBaseMediumColor}" TextDecorations="None"/></Hyperlink> ・ <Run Text="{Binding ViewCount, Converter={StaticResource ToKMGTPEZY}}" /><Run Text=" 回視聴" /> ・ <Run Text="{Binding CommentCount, Converter={StaticResource ToKMGTPEZY}}" /><Run Text="コメント" /> ・ <Run Text="{Binding PostedAt, Converter={StaticResource ToRelationalTime}}" />
          </TextBlock>

          <TextBlock Text="{Binding Description}" Foreground="{ThemeResource SystemBaseMediumColor}" TextTrimming="CharacterEllipsis" MaxLines="2"
                     Margin="0 8 0 0"
                     FontSize="13"
                     />
        </StackPanel>

        <Button x:Name="OpenOptionalActionsFlyoutButton" Flyout="{StaticResource VideoListItemFlyout}" HorizontalAlignment="Right" VerticalAlignment="Top"
                Background="Transparent"
                Opacity="0.0"
                >
          <Button.Content>
            <SymbolIcon Symbol="More" />
          </Button.Content>
        </Button>
      </Grid>
      
    </uwpControls:DockPanel>

    <StackPanel x:Name="CacheStatusLayout" HorizontalAlignment="Right" VerticalAlignment="Bottom">
      <TextBlock Opacity="0.6" FontSize="12">
         <Run Text="{Binding CacheRequest.CacheState, Converter={StaticResource LocalizeConverter}}" /> <Run Text="{Binding CacheRequest.PriorityQuality, Converter={StaticResource LocalizeConverter}}" />
      </TextBlock>

      <StackPanel Orientation="Horizontal" Spacing="8" x:Name="CacheProgressLayout" Visibility="Collapsed">
        <TextBlock x:Name="CacheProgressPercentage" Opacity="0.75" FontSize="12">
          <Run Text="{Binding DownloadProgress, Converter={StaticResource ToUserFriendlySoubleVolume}}" />%
        </TextBlock>
        <ProgressBar x:Name="CacheProgressBar" 
                     Maximum="1.0"
                   Minimum="0.0"
                   Value="{Binding DownloadProgress}"
                   Width="120"
                     IsIndeterminate="False"
                   />
      </StackPanel>
    </StackPanel>

    
    <Grid x:Name="HiddenVideoOwnerLayout" Opacity="0.0" IsHitTestVisible="False">
      <StackPanel x:Name="HiddenVideoOwnerRevealedLayout" Visibility="Collapsed" HorizontalAlignment="Right" Orientation="Horizontal" Spacing="8">
        <!--
        <Button Content="{Binding Source=RemoveHiddenVideoOwner, Converter={StaticResource LocalizeConverter}, Mode=OneTime}"
                x:Name="UnregistrationHiddenVideoOwnerButton"
                Click="UnregistrationHiddenVideoOwnerButton_Click"
                Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                BorderBrush="{ThemeResource ButtonBorderThemeBrush}"
                BorderThickness="1" 
                />
        -->

        <Button Content="{Binding Source=ExitOnceReveal, Converter={StaticResource LocalizeConverter}, Mode=OneTime}"
                x:Name="ExitRevealButton"
                Click="ExitRevealButton_Click"
                Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                BorderBrush="{ThemeResource ButtonBorderThemeBrush}"
                BorderThickness="1"
                />
      </StackPanel>
      <Grid x:Name="HiddenVideoOwnerUnrevealedLayout"
            Opacity="0.7">
        <TextBlock 
                   VerticalAlignment="Center"
                   HorizontalAlignment="Center"
                   Margin="0 0 128 0">
          <Run Text="{Binding Source=HiddenVideo, Converter={StaticResource LocalizeConverter}, Mode=OneWay}" />
        </TextBlock>
        <Button Content="{Binding Source=OnceReveal, Converter={StaticResource LocalizeConverter}, Mode=OneTime}" 
                x:Name="HiddenVideoOnceRevealButton" Click="HiddenVideoOnceRevealButton_Click"
                HorizontalAlignment="Right"
                Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                BorderBrush="{ThemeResource ButtonBorderThemeBrush}"
                BorderThickness="1" 
                />
      </Grid>
    </Grid>


    <VisualStateManager.VisualStateGroups>

      <!-- サムネイル画像上のボタン表示切り替え -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <myStateTrigger:PointerFocusTrigger Target="{x:Bind ContentLayout}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="OpenOptionalActionsFlyoutButton.Opacity" Value="1.0" />
          </VisualState.Setters>
          <VisualState.Storyboard>
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="AddWatchAfterButton"
                               Storyboard.TargetProperty="Opacity"
                               Duration="0:0:0.075"
                               To="1.0"
                               />
            </Storyboard>
          </VisualState.Storyboard>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="True" />
          </VisualState.StateTriggers>
          <VisualState.Storyboard>
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="AddWatchAfterButton"
                               Storyboard.TargetProperty="Opacity"
                               Duration="0:0:0.075"
                               To="0.0"
                               />
            </Storyboard>
          </VisualState.Storyboard>
        </VisualState>
      </VisualStateGroup>
      
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding IsDeleted}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="PrivteReasonTextBlock.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding IsWatched}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ImageOptionProgressBar.Opacity" Value="1.0" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>


      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTrigger:EqualsStateTrigger Value="{Binding CacheRequest}" EqualTo="{x:Null}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="CacheStatusLayout.Visibility" Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind IsRevealHiddenVideo, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HiddenVideoOwnerLayout.Opacity"
                    Value="1.0" />
            <Setter Target="HiddenVideoOwnerLayout.IsHitTestVisible"
                    Value="True" />
            <Setter Target="HiddenVideoOwnerUnrevealedLayout.Visibility"
                    Value="Collapsed" />
            <Setter Target="HiddenVideoOwnerRevealedLayout.Visibility"
                    Value="Visible" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTrigger:NotEqualStateTrigger Value="{Binding VideoHiddenInfo, Mode=OneWay}" NotEqualTo="{x:Null}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HiddenVideoOwnerLayout.Opacity"
                    Value="1.0" />
            <Setter Target="HiddenVideoOwnerLayout.IsHitTestVisible"
                    Value="True" />

            <Setter Target="ContentLayout.Visibility"
                    Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</UserControl>
