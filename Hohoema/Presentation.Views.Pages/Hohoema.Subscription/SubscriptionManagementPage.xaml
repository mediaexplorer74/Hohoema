<Page
  x:Class="Hohoema.Presentation.Views.Pages.Hohoema.Subscription.SubscriptionManagementPage"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:i="using:Microsoft.Xaml.Interactivity"
  xmlns:core="using:Microsoft.Xaml.Interactions.Core"
  xmlns:mycontrols="using:Hohoema.Presentation.Views.Controls"
  xmlns:myTemplateSelector="using:Hohoema.Presentation.Views.TemplateSelector"
  xmlns:material="using:MahApps.Metro.IconPacks"
  xmlns:videoList1="using:Hohoema.Presentation.ViewModels.VideoListPage"
  xmlns:i18nExt="using:I18NPortable.Xaml.Extensions" 
  xmlns:behaviors="using:Microsoft.Toolkit.Uwp.UI.Behaviors"
  xmlns:subscriptionVM="using:Hohoema.Presentation.ViewModels.Pages.Hohoema.Subscription"
  mc:Ignorable="d"
  NavigationCacheMode="Enabled"
  >

  <Page.Resources>

    <myTemplateSelector:ValueDataTemplateSelector x:Key="SubscriptionSourceTypeTemplateSelector">
      <myTemplateSelector:ValueDataTemplate Value="User">
        <DataTemplate>
          <material:PackIconMaterial Kind="Account" />
        </DataTemplate>
      </myTemplateSelector:ValueDataTemplate>
      <myTemplateSelector:ValueDataTemplate Value="Channel">
        <DataTemplate>
          <material:PackIconMaterial Kind="Layers" />
        </DataTemplate>
      </myTemplateSelector:ValueDataTemplate>
      <myTemplateSelector:ValueDataTemplate Value="Mylist">
        <DataTemplate>
          <material:PackIconMaterial Kind="PlaylistPlay" />
        </DataTemplate>
      </myTemplateSelector:ValueDataTemplate>
      <myTemplateSelector:ValueDataTemplate Value="SearchWithKeyword">
        <DataTemplate>
          <material:PackIconMaterial Kind="SearchWeb" />
        </DataTemplate>
      </myTemplateSelector:ValueDataTemplate>
      <myTemplateSelector:ValueDataTemplate Value="SearchWithTag">
        <DataTemplate>
          <material:PackIconMaterial Kind="Tag" />
        </DataTemplate>
      </myTemplateSelector:ValueDataTemplate>
    </myTemplateSelector:ValueDataTemplateSelector>

  </Page.Resources>
  <Grid>
    <ListView ItemsSource="{Binding Subscriptions}"
              SelectionMode="None"
              ReorderMode="Enabled"
              CanReorderItems="True"
              AllowDrop="True"
              IsTabStop="False"
              >
      <i:Interaction.Behaviors>
        <behaviors:StickyHeaderBehavior />
      </i:Interaction.Behaviors>
      
      <ListView.Header>

        <Grid Padding="8 0" Background="{ThemeResource ApplicationContentBackgroundBrush}">
          <CommandBar DefaultLabelPosition="Right" VerticalContentAlignment="Center"
                      XYFocusDownNavigationStrategy="NavigationDirectionDistance"
                      XYFocusLeftNavigationStrategy="RectilinearDistance"
                      >
            <CommandBar.Content>
              <mycontrols:AppTitleBar Title="{Binding Title}" />
            </CommandBar.Content>

            <CommandBar.PrimaryCommands>
              <AppBarElementContainer IsEnabled="False" Visibility="{Binding IsAutoUpdateEnabled.Value, Converter={StaticResource BooleanToVisibility}}" VerticalContentAlignment="Center">
                <Grid Margin="8 0" HorizontalAlignment="Right">
                  <StackPanel Orientation="Horizontal" x:Name="AutoUpdateRunningStatusLayout" Spacing="8" Opacity="0.0">
                  </StackPanel>
                  <StackPanel Orientation="Horizontal" x:Name="AutoUpdateNotRunningStatusLayout" Spacing="8" Opacity="0.0">
                    <TextBlock Text="{i18nExt:Localize Key=SubscriptionsAutoNotUpdateRunning}" VerticalAlignment="Center" />
                  </StackPanel>
                </Grid>
              </AppBarElementContainer>
              <AppBarElementContainer VerticalContentAlignment="Center">
                <ToggleSwitch IsOn="{Binding IsAutoUpdateEnabled.Value, Mode=TwoWay}" Style="{StaticResource ToggleSwitchNoHeader}" Header="自動更新" VerticalAlignment="Center" />
              </AppBarElementContainer>
              <AppBarButton Visibility="Collapsed" Icon="Play" Command="{Binding PlayAllUnwatchedCommand}" />
              <AppBarButton Visibility="Collapsed" Icon="Add" Label="{i18nExt:Localize Key=Add}" Command="{Binding AddSubscriptionSourceCommand}" />
              <AppBarButton Icon="Refresh" Label="{i18nExt:Localize Key=Refresh}" Command="{Binding AllUpdateCommand}"  />
            </CommandBar.PrimaryCommands>
          </CommandBar>
        </Grid>
      </ListView.Header>

      <ListView.ItemContainerStyle>
        <Style TargetType="ListViewItem">
          <Setter Property="IsTabStop" Value="False" />
          <Setter Property="Padding" Value="24 0 0 8" />
        </Style>
      </ListView.ItemContainerStyle>

      <ListView.ItemTemplate>
        <DataTemplate x:DataType="subscriptionVM:SubscriptionViewModel">
          <StackPanel>
            <StackPanel Orientation="Horizontal">
              <Button Background="Transparent" x:Name="SubscriptionActionButton" XYFocusDown="{Binding ElementName=SubscriptionVideoList}">
                <StackPanel Orientation="Horizontal" Spacing="8">
                  <ContentControl Content="{Binding SourceType}" ContentTemplateSelector="{StaticResource SubscriptionSourceTypeTemplateSelector}"
                                VerticalAlignment="Center"
                                />
                  <TextBlock Text="{Binding Label}"
                           Style="{StaticResource SubtitleTextBlockStyle}"
                           VerticalAlignment="Center"
                           />

                  <SymbolIcon Symbol="More" />

                </StackPanel>
                <Button.Flyout>
                  <MenuFlyout>
                    <MenuFlyoutItem Text="{i18nExt:Localize Key=Refresh}" Command="{Binding UpdateCommand}" IsEnabled="{Binding NowUpdating, Converter={StaticResource BoolNegation}}" />
                    <MenuFlyoutItem Text="{i18nExt:Localize Key=OpenSubscriptionSourceVideoList}" Command="{Binding OpenSourceVideoListPageCommand}" />
                    <MenuFlyoutSeparator />
                    <MenuFlyoutSubItem Text="{i18nExt:Localize Key=ReorderSubsciprionSource_Move}">
                      <MenuFlyoutItem Text="{i18nExt:Localize Key=ReorderSubsciprionSource_MovePreview}" Command="{Binding MoveToPreviewCommand}"/>
                      <MenuFlyoutItem Text="{i18nExt:Localize Key=ReorderSubsciprionSource_MoveNext}" Command="{Binding MoveToNextCommand}" />
                      <MenuFlyoutItem Text="{i18nExt:Localize Key=ReorderSubsciprionSource_MoveToHead}" Command="{Binding MoveToHeadCommand}" />
                      <MenuFlyoutItem Text="{i18nExt:Localize Key=ReorderSubsciprionSource_MoveToTail}" Command="{Binding MoveToTailCommand}" />
                    </MenuFlyoutSubItem>
                    <MenuFlyoutSeparator />
                    <MenuFlyoutItem Text="{i18nExt:Localize Key=StopSubscribe}" Command="{Binding DeleteSubscriptionCommand}" />
                  </MenuFlyout>
                </Button.Flyout>
              </Button>
            </StackPanel>

            <ListView x:Name="SubscriptionVideoList"
                     ItemsSource="{Binding Videos}"
                        ScrollViewer.VerticalScrollMode="Disabled"
                      ScrollViewer.HorizontalScrollBarVisibility="Auto"
                      ScrollViewer.HorizontalScrollMode="Enabled"
                        SelectionMode="None"
                        Margin="0 0"
                        IsFocusEngagementEnabled="True"
                        xmlns:ex="using:Hohoema.Presentation.Views.Extensions"
                        ex:ListViewBase.DeferInitialize="True"
                        XYFocusUp="{Binding ElementName=SubscriptionActionButton}"
                      IsItemClickEnabled="True"
                      ContextRequested="SubscriptionVideoList_ContextRequested"
                      >
              <i:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="ItemClick">
                  <core:InvokeCommandAction Command="{Binding PlayVideoItemCommand}" InputConverter="{StaticResource ItemClickEventArgsConverter}" />
                </core:EventTriggerBehavior>
              </i:Interaction.Behaviors>
              <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                  <ItemsStackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
              </ListView.ItemsPanel>
              <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                  <Setter Property="Padding" Value="0" />
                </Style>
              </ListView.ItemContainerStyle>
              <ListView.ItemTemplate>
                <DataTemplate x:DataType="videoList1:VideoListItemControlViewModel">
                  <UserControl>
                    <Grid x:Name="VideoItemContainer" BorderThickness="1" BorderBrush="{ThemeResource SystemAccentColor}" Height="108">
                      <Border   >
                        <Image Source="{Binding ThumbnailUrl}" Width="180" Stretch="Uniform" VerticalAlignment="Center" />
                      </Border>

                      <Border HorizontalAlignment="Right"  VerticalAlignment="Top" CornerRadius="0 0 0 4" >
                        <Border.Background>
                          <SolidColorBrush Color="{ThemeResource SystemAltMediumColor}"/>
                        </Border.Background>

                        <TextBlock Text="{Binding Length, Mode=OneWay, Converter={StaticResource TimeToMovieLengthConverter}}" 
                               Padding="4 0 4 2" 
                               TextWrapping="Wrap" VerticalAlignment="Center" 
                               FontSize="14"
                                 />
                      </Border>

                      <Grid VerticalAlignment="Bottom" Width="180">
                        <Border Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"  Opacity="0.8" />

                        <StackPanel Margin="8 8 8 8" >
                          <StackPanel>
                            <TextBlock Text="{Binding Label}" TextWrapping="Wrap" FontSize="12"  />
                          </StackPanel>
                        </StackPanel>
                      </Grid>

                      <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup>
                          <VisualState>
                            <VisualState.StateTriggers>
                              <StateTrigger IsActive="{Binding IsWatched}" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                              <Setter Target="VideoItemContainer.BorderBrush" Value="Transparent" />
                            </VisualState.Setters>
                          </VisualState>
                        </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>
                    </Grid>
                  </UserControl>
                </DataTemplate>
              </ListView.ItemTemplate>

            </ListView>
          </StackPanel>
        </DataTemplate>
      </ListView.ItemTemplate>
    </ListView>

    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding IsAutoUpdateRunning.Value}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="AutoUpdateRunningStatusLayout.Opacity" Value="1.0" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="True" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="AutoUpdateNotRunningStatusLayout.Opacity" Value="1.0" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>
