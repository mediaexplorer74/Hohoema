<Page
  x:Class="Hohoema.Presentation.Views.Pages.Niconico.VideoRanking.RankingCategoryPage"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:i="using:Microsoft.Xaml.Interactivity"
  xmlns:core="using:Microsoft.Xaml.Interactions.Core"
  xmlns:controls="using:Hohoema.Presentation.Views.Controls"
  xmlns:videolistPage="using:Hohoema.Presentation.Views.Controls.VideoList"
  xmlns:windowsTriggers="using:WindowsStateTriggers"
  xmlns:i18nExt="using:I18NPortable.Xaml.Extensions" 
  xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
  NavigationCacheMode="Enabled"
  mc:Ignorable="d"
  >

  <Grid>
    <videolistPage:VideoItemsListView ItemsSource="{Binding ItemsView}"
                                      ItemCommand="{Binding VideoPlayWithQueueCommand}"
                                      ItemContextFlyoutTemplate="{StaticResource VideoListItemFlyoutTemplate}"
                                      RefreshCommand="{Binding RefreshCommand}"
                                      x:Name="VideoItemsListView"
                                      >
      <videolistPage:VideoItemsListView.Header>
        <Grid Background="{ThemeResource MenuBackgroundBrush}">
          <CommandBar x:Name="VideoListCommandBar" HorizontalAlignment="Stretch" >
            <CommandBar.Content>
              <controls:AppTitleBar Title="{Binding Title}" />
            </CommandBar.Content>

            <CommandBar.PrimaryCommands>

              <AppBarElementContainer>
                <ComboBox x:Name="GenreTagSelector"
                            ItemsSource="{Binding PickedTags}"
                            SelectedItem="{Binding SelectedRankingTag.Value, Mode=TwoWay}"
                            DisplayMemberPath="Label"
                            >
                </ComboBox>
              </AppBarElementContainer>

              <AppBarElementContainer>
                <ComboBox x:Name="RankingTermSelector"
                            ItemsSource="{Binding CurrentSelectableRankingTerms.Value}"
                            SelectedItem="{Binding SelectedRankingTerm.Value, Mode=TwoWay}"
                            >
                  <ComboBox.ItemTemplate>
                    <DataTemplate>
                      <TextBlock Text="{Binding Converter={StaticResource LocalizeConverter}}" />
                    </DataTemplate>
                  </ComboBox.ItemTemplate>
                </ComboBox>
              </AppBarElementContainer>
              <AppBarButton x:Name="ScrollToTopButton" Icon="Up" Label="{i18nExt:Localize Key=ReturnToPageTop}">
                <i:Interaction.Behaviors>
                  <core:EventTriggerBehavior EventName="Click">
                    <core:CallMethodAction TargetObject="{x:Bind VideoItemsListView}" MethodName="ResetScrollPosition" />
                  </core:EventTriggerBehavior>
                </i:Interaction.Behaviors>
              </AppBarButton>

              <AppBarButton x:Name="SelectionToggleButton" Icon="List" Label="{i18nExt:Localize Key=Select}" Command="{Binding SelectionModeToggleCommand}" />

            </CommandBar.PrimaryCommands>

            <CommandBar.SecondaryCommands>
              <AppBarButton x:Name="RefreshButton"
                              Label="{i18nExt:Localize Key=Refresh}" 
                              Icon="Refresh"
                              Command="{Binding RefreshCommand}"
                              IsEnabled="{Binding CanChangeSort.Value}"
                              VerticalAlignment="Center"
                          >
              </AppBarButton>

            </CommandBar.SecondaryCommands>
          </CommandBar>
        </Grid>
      </videolistPage:VideoItemsListView.Header>

      <videolistPage:VideoItemsListView.ItemTemplate>
        <DataTemplate x:DataType="rankingPageVM:RankedVideoListItemControlViewModel"
                      xmlns:rankingPageVM="using:Hohoema.Presentation.ViewModels.Pages.Niconico.VideoRanking"
                      >
          <Grid>
            <TextBlock Text="{x:Bind Rank}"
                       Style="{StaticResource HeaderTextBlockStyle}"
                       Opacity="0.25"
                       VerticalAlignment="Bottom"
                       HorizontalAlignment="Right"
                       HorizontalTextAlignment="Left"
                       Width="70"
                       FontWeight="Bold" />

            <videolistPage:VideoListItemControl 
                Title="{x:Bind Label}"                 
                ThumbnailUrl="{x:Bind ThumbnailUrl}"
                Length="{x:Bind Length, Converter={StaticResource TimeToMovieLengthConverter}}"  
                IsQueueItem="{x:Bind IsQueueItem, Mode=OneWay}"
                IsWatched="{x:Bind IsWatched, Mode=OneWay}"
                IsDeleted="{x:Bind IsDeleted}"
                IsHidden="{x:Bind VideoHiddenInfo, Mode=OneWay, Converter={StaticResource NotNullToBoolean}}"
                CacheStatus="{x:Bind CacheStatus, Mode=OneWay}"
                PostedAt="{x:Bind PostedAt, Converter={StaticResource DateTimeToString}}"
                PrivateReason="{x:Bind PrivateReason, Converter={StaticResource LocalizeConverter}}"
                ViewCount="{x:Bind ViewCount, Converter={StaticResource ToUserFriendlyNumber}}"
                CommentCount="{x:Bind CommentCount, Converter={StaticResource ToUserFriendlyNumber}}"
                MylistCount="{x:Bind MylistCount, Converter={StaticResource ToUserFriendlyNumber}}"
              />
          </Grid>
        </DataTemplate>
      </videolistPage:VideoItemsListView.ItemTemplate>

    </videolistPage:VideoItemsListView>

    <Grid x:Name="EmptyItemsLayout" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center">
      <TextBlock Text="{i18nExt:Localize Key=RankingNoItems}"
                     Style="{StaticResource SubtitleTextBlockStyle}"
                     Opacity="0.8"
                     />
    </Grid>


    <VisualStateManager.VisualStateGroups>
      <!-- レイアウトモード -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="TV" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="VideoListCommandBar.Margin" Value="{StaticResource ContentListViewHeaderMargin_TV}" />
            <Setter Target="VideoItemsListView.Padding" Value="{StaticResource ContentListViewBodyMargin_TV}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Desktop" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="VideoListCommandBar.Margin" Value="{StaticResource ContentListViewHeaderMargin_Desktop}" />
            <Setter Target="VideoItemsListView.Padding" Value="{StaticResource ContentPageMargin_Desktop}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Tablet" />
            <windowsTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Mobile" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="VideoListCommandBar.Margin" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="VideoItemsListView.Padding" Value="{StaticResource ContentListViewBodyMargin_Mobile}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      



      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding HasItem.Value, Converter={StaticResource BoolNegation}}"/>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="EmptyItemsLayout.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

    </VisualStateManager.VisualStateGroups>
    
  </Grid>
</Page>
