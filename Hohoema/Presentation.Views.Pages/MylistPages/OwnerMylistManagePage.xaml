<Page
    x:Class="Hohoema.Presentation.Views.Pages.MylistPages.OwnerMylistManagePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Hohoema.Presentation.Views.Pages.MylistPages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
  xmlns:i="using:Microsoft.Xaml.Interactivity" 
  xmlns:core="using:Microsoft.Xaml.Interactions.Core" 
  xmlns:flyouts="using:Hohoema.Presentation.Views.Flyouts" 
  xmlns:mycontrols="using:Hohoema.Presentation.Views.Controls"
  xmlns:uwpControls="using:Microsoft.Toolkit.Uwp.UI.Controls"
  xmlns:windowsStateTriggers="using:WindowsStateTriggers"
  mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

  <Grid x:Name="ContentLayout">
    <GridView x:Name="ContentItemsView"
                ItemsSource="{Binding ItemsView}"
                IsItemClickEnabled="True"
                SelectionMode="None"
                Padding="8 0 8 24"
                xmlns:myExtensions="using:Hohoema.Presentation.Views.Extensions"
              myExtensions:ListViewBase.ItemContextFlyoutCustomObjectToTag="{Binding}"
              >
      <i:Interaction.Behaviors>
        <core:EventTriggerBehavior EventName="ItemClick">
          <core:InvokeCommandAction Command="{Binding OpenMylistCommand}"
                                      InputConverter="{StaticResource ItemClickEventArgsConverter}" />
        </core:EventTriggerBehavior>
      </i:Interaction.Behaviors>
      <myExtensions:ListViewBase.ItemContextFlyoutTemplate>
        <DataTemplate>
          <MenuFlyout>
            <MenuFlyoutItem Text="{Binding Source=MylistOpenVideoList, Converter={StaticResource LocalizeConverter}}" Command="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag.OpenMylistCommand}" CommandParameter="{Binding}" />
            <MenuFlyoutItem Text="{Binding Source=PlayAll, Converter={StaticResource LocalizeConverter}}" Command="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag.PlaylistPlayAllCommand}" CommandParameter="{Binding}" />
            <MenuFlyoutItem Text="{Binding Source=Edit, Converter={StaticResource LocalizeConverter}}" Command="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag.EditMylistGroupCommand}" CommandParameter="{Binding}" />
            <MenuFlyoutItem Text="{Binding Source=Delete, Converter={StaticResource LocalizeConverter}}" Command="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag.RemoveMylistGroupCommand}" CommandParameter="{Binding}" />
          </MenuFlyout>
        </DataTemplate>
      </myExtensions:ListViewBase.ItemContextFlyoutTemplate>
      <GridView.Header>
        <Grid x:Name="HeaderLayout" Background="{StaticResource MenuBackgroundBrush}">
          <mycontrols:ScrollHeader x:Name="ScrollHeader" Mode="Sticky">
            <CommandBar uwpControls:DockPanel.Dock="Right" Background="Transparent">
              <CommandBar.Content>
                <mycontrols:AppTitleBar Title="{Binding Title}" />
              </CommandBar.Content>

              <AppBarButton x:Name="LoginUserMylistActions"
                            Icon="Add" Background="Transparent" 
                            Label="{Binding Source=MylistCreate, Converter={StaticResource LocalizeConverter}}" 
                            Command="{Binding AddMylistGroupCommand}"
                            />

            </CommandBar>
          </mycontrols:ScrollHeader>
        </Grid>
      </GridView.Header>
      <GridView.ItemTemplate>
        <DataTemplate>
          <local:MylistListItem />
        </DataTemplate>
      </GridView.ItemTemplate>
      <GridView.ItemsPanel>
        <ItemsPanelTemplate>
          <ItemsWrapGrid x:Name="ItemsPanel" Orientation="Horizontal" />
        </ItemsPanelTemplate>
      </GridView.ItemsPanel>
    </GridView>

    <VisualStateManager.VisualStateGroups>
      <!-- レイアウトモード -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="TV" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_TV}" />
            <Setter Target="ItemsPanel.Margin" Value="{StaticResource ContentListViewBodyMargin_TV}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Desktop" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Desktop}" />
            <Setter Target="ItemsPanel.Margin" Value="{StaticResource ContentListViewBodyMargin_Desktop}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Tablet" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Tablet}" />
            <Setter Target="ItemsPanel.Margin" Value="{StaticResource ContentListViewBodyMargin_Tablet}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Mobile" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="ItemsPanel.Margin" Value="{StaticResource ContentListViewBodyMargin_Mobile}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>
