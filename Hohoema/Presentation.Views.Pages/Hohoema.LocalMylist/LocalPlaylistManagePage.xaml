<Page
    x:Class="Hohoema.Presentation.Views.Pages.Hohoema.LocalMylist.LocalPlaylistManagePage"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:i="using:Microsoft.Xaml.Interactivity"
  xmlns:core="using:Microsoft.Xaml.Interactions.Core"
  xmlns:mycontrols="using:Hohoema.Presentation.Views.Controls"
  xmlns:uwpControls="using:Microsoft.Toolkit.Uwp.UI.Controls"
  xmlns:windowsStateTriggers="using:WindowsStateTriggers" 
  xmlns:i18nExt="using:I18NPortable.Xaml.Extensions" 
  xmlns:behaviors="using:Microsoft.Toolkit.Uwp.UI.Behaviors" 
  xmlns:local="using:Hohoema.Presentation.Views.Pages.Niconico.Mylist" 
  xmlns:models="using:Hohoema.Models.Domain.Application"
  mc:Ignorable="d"
  >

  <Grid x:Name="ContentLayout">
    <GridView x:Name="ContentItemsView"
                ItemsSource="{Binding ItemsView}"
                IsItemClickEnabled="True"
                SelectionMode="None"                
                xmlns:myExtensions="using:Hohoema.Presentation.Views.Extensions"
              myExtensions:ListViewBase.ItemContextFlyoutCustomObjectToTag="{Binding}"
              >
      <i:Interaction.Behaviors>
        <behaviors:StickyHeaderBehavior />
        
        <core:EventTriggerBehavior EventName="ItemClick">
          <core:InvokeCommandAction Command="{Binding OpenMylistCommand}"
                                      InputConverter="{StaticResource ItemClickEventArgsConverter}" />
        </core:EventTriggerBehavior>
      </i:Interaction.Behaviors>
      <myExtensions:ListViewBase.ItemContextFlyoutTemplate>
        <DataTemplate>
          <MenuFlyout>
            <MenuFlyoutItem Text="{i18nExt:Localize Key=LocalPlaylistOpenVideoList}" Command="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag.OpenMylistCommand}" CommandParameter="{Binding}" />
            <MenuFlyoutItem Text="{i18nExt:Localize Key=PlayAll}" Command="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag.PlaylistPlayAllCommand}" CommandParameter="{Binding}" />
            <MenuFlyoutItem Text="{i18nExt:Localize Key=Rename}" Command="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag.RenameLocalPlaylistCommand}" CommandParameter="{Binding}" />
            <MenuFlyoutItem Text="{i18nExt:Localize Key=LocalPlaylistChangeThumbnail}" Visibility="Collapsed" />
            <MenuFlyoutItem Text="{i18nExt:Localize Key=Delete}" Command="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag.DeleteLocalPlaylistCommand}" CommandParameter="{Binding}" />
          </MenuFlyout>
        </DataTemplate>
      </myExtensions:ListViewBase.ItemContextFlyoutTemplate>
      <GridView.Header>
        <Grid x:Name="HeaderLayout" Padding="8 0" BorderThickness="0 0 0 1" BorderBrush="{StaticResource HohoemaLightBorderBrush}">
          <CommandBar DefaultLabelPosition="Right" VerticalContentAlignment="Center">
            <CommandBar.Content>
              <mycontrols:AppTitleBar Title="{Binding Title}" />
            </CommandBar.Content>

            <AppBarButton Background="Transparent" Label="{i18nExt:Localize Key=LocalPlaylistCreate}" Icon="Add" x:Name="LoginUserMylistActions"
                            Command="{Binding CreateLocalMylistCommand}"
                            />

          </CommandBar>
        </Grid>
      </GridView.Header>
      <GridView.ItemsPanel>
        <ItemsPanelTemplate>
          <ItemsWrapGrid x:Name="ItemsPanel" Orientation="Horizontal" ItemWidth="200" Margin="8 0 8 24" />
        </ItemsPanelTemplate>
      </GridView.ItemsPanel>
      <GridView.ItemTemplate>
        <DataTemplate x:DataType="playlistModel:LocalPlaylist"
                      xmlns:playlistModel="using:Hohoema.Models.Domain.LocalMylist"
                      >
          <mylistView:MylistCardView xmlns:mylistView="using:Hohoema.Presentation.Views.Mylist" 
                                     PlaylistName="{x:Bind Name}" ImageUrl="{x:Bind ThumbnailImage}" ImageCaption="{x:Bind Count}"
                                     />
        </DataTemplate>
      </GridView.ItemTemplate>
    </GridView>

    <VisualStateManager.VisualStateGroups>
      <!-- レイアウトモード -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="{x:Bind models:ApplicationLayout.TV}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_TV}" />
            <Setter Target="ItemsPanel.Margin" Value="{StaticResource ContentListViewBodyMargin_TV}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="{x:Bind models:ApplicationLayout.Desktop}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Desktop}" />
            <Setter Target="ItemsPanel.Margin" Value="{StaticResource ContentListViewBodyMargin_Desktop}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="{x:Bind models:ApplicationLayout.Tablet}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Tablet}" />
            <Setter Target="ItemsPanel.Margin" Value="{StaticResource ContentListViewBodyMargin_Tablet}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="{x:Bind models:ApplicationLayout.Mobile}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="ItemsPanel.Margin" Value="{StaticResource ContentListViewBodyMargin_Mobile}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>
