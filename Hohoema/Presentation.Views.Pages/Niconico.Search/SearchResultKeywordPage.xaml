<Page
    x:Class="Hohoema.Presentation.Views.Pages.Niconico.Search.SearchResultKeywordPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:uwpControls="using:Microsoft.Toolkit.Uwp.UI.Controls"
  xmlns:i="using:Microsoft.Xaml.Interactivity"
  xmlns:core="using:Microsoft.Xaml.Interactions.Core"
  xmlns:models="using:Hohoema.Models.Domain.Application"
  xmlns:controls="using:Hohoema.Presentation.Views.Controls"
  xmlns:videolistPage="using:Hohoema.Presentation.Views.Controls.VideoList"
  xmlns:windowsTriggers="using:WindowsStateTriggers"
  xmlns:i18nExt="using:I18NPortable.Xaml.Extensions"
  DataContext="{x:Null}"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400"
  Transitions="{StaticResource SuppressNavigationTransitionCollection}"
    >
  <Grid>
    <videolistPage:VideoItemsListView 
      ItemsSource="{x:Bind _vm.ItemsView, Mode=OneWay}" 
      ItemCommand="{x:Bind _vm.VideoPlayWithQueueCommand}" 
      ItemTemplate="{StaticResource VideoListItemControlDefaultTemplate}"
      ItemContextFlyoutTemplate="{StaticResource VideoListItemFlyoutTemplate}" 
      RefreshCommand="{x:Bind _vm.RefreshCommand}" 
      PlaylistPassToFlyout="{x:Bind _vm.SearchVideoPlaylist, Mode=OneWay}"
      x:Name="VideoItemsListView">
      <videolistPage:VideoItemsListView.Header>
        <Grid x:Name="HeaderLayout">
          <StackPanel >
            <CommandBar DefaultLabelPosition="Right" VerticalContentAlignment="Center">
              <CommandBar.PrimaryCommands>

                <AppBarElementContainer VerticalAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False">
                  <ComboBox ItemsSource="{x:Bind _vm.SortOptions}"
                          SelectedItem="{x:Bind _vm.SelectedSortOption, Mode=TwoWay}"
                          IsEnabled="{x:Bind _vm.NowLoading.Value, Mode=OneWay, Converter={StaticResource BoolNegation}}"
                          VerticalAlignment="Stretch"
                          Margin="0 6"
                          >
                    <ComboBox.ItemTemplate>
                      <DataTemplate>
                        <TextBlock Text="{Binding Label}" />
                      </DataTemplate>
                    </ComboBox.ItemTemplate>
                  </ComboBox>
                </AppBarElementContainer>

                <AppBarButton x:Name="PlayAllButton"
                                Icon="Play"
                                Label="{i18nExt:Localize Key=PlayAll}"
                                Command="{x:Bind _vm.PlaylistPlayAllCommand}"
                                CommandParameter="{x:Bind _vm.CurrentPlaylistToken.Value, Mode=OneWay}" />

                <AppBarButton x:Name="ScrollToTopButton" Icon="Up" Label="{i18nExt:Localize Key=ReturnToPageTop}">
                  <i:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Click">
                      <core:CallMethodAction TargetObject="{x:Bind VideoItemsListView}" MethodName="ResetScrollPosition" />
                    </core:EventTriggerBehavior>
                  </i:Interaction.Behaviors>
                </AppBarButton>

                <AppBarButton x:Name="SelectionToggleButton" Icon="List" Label="{i18nExt:Localize Key=Select}" Command="{x:Bind _vm.SelectionModeToggleCommand}" />
                <AppBarButton x:Name="RefreshButton" Label="{i18nExt:Localize Key=Refresh}" Icon="Refresh" Command="{x:Bind _vm.RefreshCommand}" IsEnabled="{x:Bind _vm.CanChangeSort.Value, Mode=OneWay}" VerticalAlignment="Center"></AppBarButton>
              </CommandBar.PrimaryCommands>
              <CommandBar.SecondaryCommands>

                <AppBarButton x:Name="AddSubscriptionButton" Icon="Add" Label="{i18nExt:Localize Key=SubscriptionAdd}"
                                Command="{x:Bind _vm.AddKeywordSearchSubscriptionCommand}"
                                CommandParameter="{x:Bind _vm.Keyword, Mode=OneWay}"
                                >
                </AppBarButton>
              </CommandBar.SecondaryCommands>
            </CommandBar>
          </StackPanel>
        </Grid>
      </videolistPage:VideoItemsListView.Header>
    </videolistPage:VideoItemsListView>
    <Grid x:Name="EmptyItemsLayout" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center">
      <TextBlock Text="{i18nExt:Localize Key=KeywordSearchNoItems}" Style="{StaticResource SubtitleTextBlockStyle}" Opacity="0.8" />
    </Grid>
    <VisualStateManager.VisualStateGroups>
      <!-- レイアウトモード -->
      <!--
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="{x:Bind models:ApplicationLayout.TV}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_TV}" />
            <Setter Target="VideoItemsListView.Padding" Value="{StaticResource ContentPageMargin_TV}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="{x:Bind models:ApplicationLayout.Desktop}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Desktop}" />
            <Setter Target="VideoItemsListView.Padding" Value="{StaticResource ContentPageMargin_Desktop}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="{x:Bind models:ApplicationLayout.Tablet}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="VideoItemsListView.Padding" Value="{StaticResource ContentPageMargin_Tablet}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="{x:Bind models:ApplicationLayout.Mobile}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="VideoItemsListView.Padding" Value="{StaticResource ContentPageMargin_Mobile}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      -->
      
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind _vm.NowLoading.Value, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ScrollToTopButton.IsEnabled" Value="False" />
            <Setter Target="RefreshButton.IsEnabled" Value="False" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _vm.ItemsView.Count, Mode=OneWay}" EqualTo="0" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="EmptyItemsLayout.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>
