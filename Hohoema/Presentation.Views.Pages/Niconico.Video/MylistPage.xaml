<Page
    x:Name="PageRoot"
    x:Class="Hohoema.Presentation.Views.Pages.Niconico.Video.MylistPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:toolkit="using:WinRTXamlToolkit.Controls"
  xmlns:i="using:Microsoft.Xaml.Interactivity"
  xmlns:core="using:Microsoft.Xaml.Interactions.Core"
  xmlns:controls="using:Hohoema.Presentation.Views.Controls"
  xmlns:flyouts="using:Hohoema.Presentation.Views.Flyouts"
  xmlns:videolistPage="using:Hohoema.Presentation.Views.Controls.VideoList"
  xmlns:windowsStateTriggers="using:WindowsStateTriggers"
  xmlns:myConv="using:Hohoema.Presentation.Views.Converters"
  xmlns:i18nExt="using:I18NPortable.Xaml.Extensions"
  DataContext="{x:Null}"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d"
    >
  <Page.Resources>
    <myConv:MylistSortLocalizeConverter x:Key="MylistSortLocalizeConverter" />
  </Page.Resources>
  
  <Grid>
    <videolistPage:VideoItemsListView ItemsSource="{Binding MylistItems}" ItemCommand="{Binding PlayWithCurrentPlaylistCommand}" RefreshCommand="{Binding RefreshCommand}" PlaylistPassToFlyout="{Binding Mylist.Value}" x:Name="VideoItemsListView">
      <videolistPage:VideoItemsListView.ItemContextFlyoutTemplate>
        <DataTemplate>
          <flyouts:VideoItemFlyout />
        </DataTemplate>
      </videolistPage:VideoItemsListView.ItemContextFlyoutTemplate>
      <videolistPage:VideoItemsListView.Header>
        <Grid x:Name="HeaderLayout" Background="{StaticResource MenuBackgroundBrush}">
          <CommandBar x:Name="VideoListCommandBar" Background="Transparent" toolkit:DockPanel.Dock="Right">

            <CommandBar.Content>
              <controls:AppTitleBar Title="{Binding Title}" />
            </CommandBar.Content>
            <CommandBar.PrimaryCommands>
              <AppBarElementContainer IsEnabled="False">
                <StackPanel Orientation="Horizontal">

                  <StackPanel Orientation="Horizontal" Margin="0 0 0 0" Visibility="{Binding UserName, Converter={StaticResource NotNullToVisibility}}">
                    <TextBlock FontSize="14">
                        <Run Text="{i18nExt:Localize Key=ContentOwner}" /> : <Run Text="{Binding UserName}" /></TextBlock>
                    <Border x:Name="DefaultMylistRegistrationCount" Visibility="Collapsed" Margin="8 0 0 0">
                      <TextBlock>
                        (<Run Text="{i18nExt:Localize Key=MylistRegisteredCount}" />:<Run Text="{Binding DeflistRegistrationCount}" /> <Run Text="{i18nExt:Localize Key=MylistRegisteredCountLimit}" />:<Run Text="{Binding DeflistRegistrationCapacity}" />)</TextBlock>
                    </Border>
                    <Border x:Name="MylistRegistrationCount" Visibility="Collapsed" Margin="8 0 0 0">
                      <TextBlock>
                        (<Run Text="{i18nExt:Localize Key=MylistRegisteredCount}" />:<Run Text="{Binding MaxItemsCount}" /> <Run Text="{i18nExt:Localize Key=MylistRegisteredCountSum}" />:<Run Text="{Binding MylistRegistrationCount}" /> 上限:<Run Text="{Binding MylistRegistrationCapacity}" />)</TextBlock>
                    </Border>
                  </StackPanel>
                </StackPanel>
              </AppBarElementContainer>
              <AppBarElementContainer>
                <ComboBox ItemsSource="{Binding SortItems}"
                                SelectedItem="{Binding SelectedSortItem.Value, Mode=TwoWay}"
                                >
                  <ComboBox.ItemTemplate>
                    <DataTemplate>
                      <TextBlock Text="{Binding Converter={StaticResource MylistSortLocalizeConverter}}" />

                    </DataTemplate>
                  </ComboBox.ItemTemplate>
                </ComboBox>

              </AppBarElementContainer>
              <!-- 非選択中 -->
              <AppBarToggleButton x:Name="ToggleMylistFavoriteButton" IsChecked="{Binding FollowContext.IsFollowing}" Command="{Binding FollowContext.ToggleFollowCommand}" IsEnabled="{Binding FollowContext.NowChanging, Converter={StaticResource BoolNegation}}" Visibility="Collapsed" Icon="Favorite" Label="{i18nExt:Localize Key=Follow}" />
              <AppBarButton x:Name="SelectionToggleButton" Icon="List" Label="{i18nExt:Localize Key=Select}" Command="{Binding SelectionModeToggleCommand}" />
              <AppBarButton x:Name="PlayAllButton" Icon="Play" Label="{i18nExt:Localize Key=PlayAll}" Command="{Binding PlayAllVideosFromHeadCommand}"></AppBarButton>
              <AppBarButton x:Name="ScrollToTopButton" Icon="Up" Label="{i18nExt:Localize Key=ReturnToPageTop}">
                <i:Interaction.Behaviors>
                  <core:EventTriggerBehavior EventName="Click">
                    <core:CallMethodAction TargetObject="{x:Bind VideoItemsListView}" MethodName="ResetScrollPosition" />
                  </core:EventTriggerBehavior>
                </i:Interaction.Behaviors>
              </AppBarButton>
            </CommandBar.PrimaryCommands>
            <CommandBar.SecondaryCommands>
              <AppBarButton x:Name="RefreshButton" Label="{i18nExt:Localize Key=Refresh}" Icon="Refresh" Command="{Binding RefreshCommand}" VerticalAlignment="Center"></AppBarButton>
              <AppBarButton x:Name="FeedRegstrationButton" Icon="Add" Visibility="Visible" Label="{i18nExt:Localize Key=SubscriptionAddMylist}"
                                Command="{Binding AddSubscriptionCommand}"
                                CommandParameter="{Binding Mylist.Value}"
                                >
              </AppBarButton>
              <AppBarButton x:Name="OpenUserPageButton" Command="{Binding OpenMylistOwnerCommand}" Background="Transparent" Visibility="Collapsed" Icon="People" Label="{i18nExt:Localize Key=MylistOwner}"></AppBarButton>
              <AppBarButton x:Name="EditMylistButton" Command="{Binding EditMylistGroupCommand}" CommandParameter="{Binding Mylist.Value}" Background="Transparent" Visibility="Collapsed" Icon="Edit" Label="{i18nExt:Localize Key=MylistEditInfo}"></AppBarButton>
              <AppBarSeparator x:Name="MylistDeleteButtonSeparator" Visibility="Collapsed" />
              <AppBarButton x:Name="DeleteMylistButton" Command="{Binding DeleteMylistCommand}" CommandParameter="{Binding Mylist.Value}" Background="Transparent" Visibility="Collapsed" Icon="Delete" Label="{i18nExt:Localize Key=MylistDelete}"></AppBarButton>
            </CommandBar.SecondaryCommands>
          </CommandBar>
        </Grid>
      </videolistPage:VideoItemsListView.Header>
      <videolistPage:VideoItemsListView.ItemTemplate>
        <DataTemplate>
          <Grid>
            <videolistPage:VideoListItemControl />
          </Grid>
        </DataTemplate>
      </videolistPage:VideoItemsListView.ItemTemplate>
    </videolistPage:VideoItemsListView>
    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="TV" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_TV}" />
            <Setter Target="VideoItemsListView.Padding" Value="{StaticResource ContentPageMargin_TV}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Desktop" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Desktop}" />
            <Setter Target="VideoItemsListView.Padding" Value="{StaticResource ContentPageMargin_Desktop}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Tablet" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="VideoItemsListView.Padding" Value="{StaticResource ContentPageMargin_Tablet}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Mobile" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="VideoItemsListView.Padding" Value="{StaticResource ContentPageMargin_Mobile}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
     
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding IsLoginUserDeflist}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="FeedRegstrationButton.Visibility" Value="Collapsed" />
            <Setter Target="DefaultMylistRegistrationCount.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding IsUserOwnerdMylist}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="OpenUserPageButton.Visibility" Value="Visible" />
            <Setter Target="ToggleMylistFavoriteButton.Visibility" Value="Visible" />
            <Setter Target="EditMylistButton.Visibility" Value="Visible" />
            <Setter Target="DeleteMylistButton.Visibility" Value="Visible" />
            <Setter Target="MylistDeleteButtonSeparator.Visibility" Value="Visible" />
            <Setter Target="MylistRegistrationCount.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="True" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ToggleMylistFavoriteButton.Visibility" Value="Visible" />
            <Setter Target="OpenUserPageButton.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>
