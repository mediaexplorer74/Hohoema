<Page
    x:Class="NicoPlayerHohoema.Views.VideoPlayerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NicoPlayerHohoema.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls"
    xmlns:toolkitext="using:WinRTXamlToolkit.Controls.Extensions"
    xmlns:mybehavior="using:NicoPlayerHohoema.Views.Behaviors"
    xmlns:viewmodel="using:NicoPlayerHohoema.ViewModels"
    xmlns:logicalTrigger="using:AdaptiveTriggerLibrary.Triggers.LogicalTriggers"
    xmlns:intractionTrigger="using:AdaptiveTriggerLibrary.Triggers.UserInteractionTriggers"
    xmlns:uiTrigger="using:AdaptiveTriggerLibrary.Triggers.UserInterfaceTriggers"
    xmlns:myTrigger ="using:NicoPlayerHohoema.Views.StateTrigger"
    xmlns:hardTrigger="using:AdaptiveTriggerLibrary.Triggers.HardwareInterfaceTriggers"
    xmlns:media="using:Microsoft.Xaml.Interactions.Media"
    xmlns:uwptoolkit="using:Microsoft.Toolkit.Uwp.UI.Animations.Behaviors"
    xmlns:uwpui="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:iconPack="using:MahApps.Metro.IconPacks"
    xmlns:model="using:NicoPlayerHohoema.Models"
    xmlns:mvvm="using:Prism.Windows.Mvvm"
    xmlns:controls="using:NicoPlayerHohoema.Views.Controls"
    mvvm:ViewModelLocator.AutoWireViewModel="True"
    x:Name="RootLayout"
    d:DesignHeight="300"
    d:DesignWidth="400">

    <UserControl.Resources>

        

        <MenuFlyout x:Key="VideoOptionsFlyout">

            <MenuFlyoutSubItem Text="再生速度" 
                               Visibility="Collapsed"
                               >

                <MenuFlyoutItem Text="等倍速に戻す"
                                      Command="{Binding SetPlaybackRateCommand}"
                                      >
                    <MenuFlyoutItem.CommandParameter>
                        <x:Double>1.0</x:Double>
                    </MenuFlyoutItem.CommandParameter>
                </MenuFlyoutItem>


                <MenuFlyoutSeparator />


                <MenuFlyoutItem Text="200%"
                                      Command="{Binding SetPlaybackRateCommand}"
                                      >
                    <MenuFlyoutItem.CommandParameter>
                        <x:Double>2.0</x:Double>
                    </MenuFlyoutItem.CommandParameter>
                </MenuFlyoutItem>
                <MenuFlyoutItem Text="175%"
                                      Command="{Binding SetPlaybackRateCommand}"
                                      >
                    <MenuFlyoutItem.CommandParameter>
                        <x:Double>1.75</x:Double>
                    </MenuFlyoutItem.CommandParameter>
                </MenuFlyoutItem>
                <MenuFlyoutItem Text="150%"
                                      Command="{Binding SetPlaybackRateCommand}"
                                      >
                    <MenuFlyoutItem.CommandParameter>
                        <x:Double>1.5</x:Double>
                    </MenuFlyoutItem.CommandParameter>
                </MenuFlyoutItem>

                <MenuFlyoutItem Text="125%"
                                      Command="{Binding SetPlaybackRateCommand}"
                                      >
                    <MenuFlyoutItem.CommandParameter>
                        <x:Double>1.25</x:Double>
                    </MenuFlyoutItem.CommandParameter>
                </MenuFlyoutItem>

                
                
                <MenuFlyoutSeparator />
                
                
                
                <MenuFlyoutItem Text="75%"
                                      Command="{Binding SetPlaybackRateCommand}"
                                      >
                    <MenuFlyoutItem.CommandParameter>
                        <x:Double>0.75</x:Double>
                    </MenuFlyoutItem.CommandParameter>
                </MenuFlyoutItem>

                <MenuFlyoutItem Text="50%"
                                      Command="{Binding SetPlaybackRateCommand}"
                                      >
                    <MenuFlyoutItem.CommandParameter>
                        <x:Double>0.5</x:Double>
                    </MenuFlyoutItem.CommandParameter>
                </MenuFlyoutItem>

                <MenuFlyoutItem Text="25%"
                                      Command="{Binding SetPlaybackRateCommand}"
                                      >
                    <MenuFlyoutItem.CommandParameter>
                        <x:Double>0.25</x:Double>
                    </MenuFlyoutItem.CommandParameter>
                </MenuFlyoutItem>

            </MenuFlyoutSubItem>



            <MenuFlyoutSeparator Visibility="Collapsed" />

            

            
            
            <MenuFlyoutItem Text="マイリストに追加" Command="{Binding AddMylistCommand}" />

            <MenuFlyoutItem Text="共有" Command="{Binding ShareCommand}" Visibility="{Binding IsXbox, Converter={StaticResource BooleanToVisibility}}" />

            <MenuFlyoutSubItem Text="共有" Visibility="{Binding IsXbox, Converter={StaticResource BooleanToVisibilityInverted}}" >
                <MenuFlyoutItem Text="アプリを選択" Command="{Binding ShareCommand}" />
                <MenuFlyoutItem Text="Twitterで共有" Command="{Binding ShereWithTwitterCommand}" />
                <MenuFlyoutItem Text="動画情報をコピー" Command="{Binding VideoInfoCopyToClipboardCommand}" />
            </MenuFlyoutSubItem>




            <MenuFlyoutSeparator />

            <MenuFlyoutItem Text="動画情報" Command="{Binding OpenVideoInfoCommand}" />

            <!--
            <MenuFlyoutItem Text="プレイヤー設定" 
                            Command="{Binding SelectSidePaneContentCommand}"
                            CommandParameter="Setting"
                            >
            </MenuFlyoutItem>
            

            <MenuFlyoutItem Text="小窓で表示" Command="{Binding PlayerSmallWindowDisplayCommand}" >
                <i:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Tapped">
                        <core:ChangePropertyAction TargetObject="{Binding IsDisplayControlUI, Mode=TwoWay}" PropertyName="Value" Value="False" />
                    </core:EventTriggerBehavior>
                </i:Interaction.Behaviors>
            </MenuFlyoutItem>
            -->




        </MenuFlyout>



        <local:PlayerSidePaneContentTemplateSelecter x:Key="PlayerSidePaneContentTemplateSelecter">

            <local:PlayerSidePaneContentTemplateSelecter.Empty>
                <DataTemplate>
                    <!-- empty -->
                </DataTemplate>
            </local:PlayerSidePaneContentTemplateSelecter.Empty>

            <local:PlayerSidePaneContentTemplateSelecter.Playlist>
                <DataTemplate>
                    <local:PlaylistSidePaneContent />
                </DataTemplate>
            </local:PlayerSidePaneContentTemplateSelecter.Playlist>

            <local:PlayerSidePaneContentTemplateSelecter.Comments>
                <DataTemplate>
                    <local:CommentsSidePaneContent />
                </DataTemplate>
            </local:PlayerSidePaneContentTemplateSelecter.Comments>

            <local:PlayerSidePaneContentTemplateSelecter.Settings>
                <DataTemplate>
                    <local:VideoSettingsSidePaneContent />
                </DataTemplate>
            </local:PlayerSidePaneContentTemplateSelecter.Settings>

        </local:PlayerSidePaneContentTemplateSelecter>
                
    </UserControl.Resources>
    
    <Grid x:Name="LayoutRoot" Background="{StaticResource AppBarBorderThemeBrush}">
        
        <VisualStateManager.VisualStateGroups>

            <!-- 画面サイズごとの表示・非表示に切り替え -->
            <VisualStateGroup>
                <!-- 一番幅が広いとき -->
                <!--
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="721" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>
                -->
                <!-- 中ぐらい -->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="521" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>

                    </VisualState.Setters>
                </VisualState>
                <!-- 超狭い -->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PreviewVideoPositionButon.Visibility" Value="Collapsed" />
                        <Setter Target="ForwardVideoPositionButon.Visibility" Value="Collapsed" />

                        <Setter Target="CommentTextBox.(Grid.Row)" Value="0" />
                        <Setter Target="CommentTextBox.(Grid.RowSpan)" Value="1" />
                        <Setter Target="CommentTextBox.(Grid).Column)" Value="0" />
                        <Setter Target="CommentTextBox.(Grid).ColumnSpan)" Value="6" />

                        <Setter Target="CommentCommandEditButton.(Grid.Row)" Value="1" />
                        <Setter Target="CommentCommandEditButton.(Grid.RowSpan)" Value="1" />
                        <Setter Target="CommentCommandEditButton.(Grid.Column)" Value="0" />
                        <Setter Target="CommentCommandEditButton.(Grid.ColumnSpan)" Value="3" />

                        <Setter Target="CommentSubmitButton.(Grid.Row)" Value="1" />
                        <Setter Target="CommentSubmitButton.(Grid.RowSpan)" Value="1" />
                        <Setter Target="CommentSubmitButton.(Grid.Column)" Value="3" />
                        <Setter Target="CommentSubmitButton.(Grid.ColumnSpan)" Value="3" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>


            <!-- ミニモード　画面サイズごとの表示・非表示に切り替え -->
            <VisualStateGroup>
                <!-- 中ぐらい -->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="280" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>

                    </VisualState.Setters>
                </VisualState>
                <!-- 超狭い -->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="CO_PreviewVideoPositionButton.Visibility" Value="Collapsed" />
                        <Setter Target="CO_ForwardVideoPositionButton.Visibility" Value="Collapsed" />
                        <Setter Target="CO_ToggleCommentDisplayButton.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <!-- ミニモードの縦幅 -->
            <VisualStateGroup>
                <!-- 中ぐらい -->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="200" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>

                    </VisualState.Setters>
                </VisualState>
                <!-- 超狭い -->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="CO_CommentTextBox.Visibility" Value="Collapsed" />

                        <Setter Target="CO_OpenPreviousPlaylistItemButton.Visibility" Value="Collapsed" />
                        <Setter Target="CO_OpenNextPlaylistItemButton.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>



            <!-- コンパクトオーバーレイ切り替えボタンの表示・非表示 -->
            <VisualStateGroup >

                <VisualState>
                    <VisualState.StateTriggers>
                        <myTrigger:IsSupportCompactOverlayTrigger />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="CompactOverlayButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                
            </VisualStateGroup>

            <!-- コンパクトオーバーレイ表示中のコントロールUI切り替え -->
            <VisualStateGroup >

                <VisualState>
                    <VisualState.StateTriggers>
                        <myTrigger:CompactOverlayViewModeTrigger />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="CompactOverlayUIControl.Visibility" Value="Visible" />
                        <Setter Target="DefaultUIControl.Visibility" Value="Collapsed" />

                        <Setter Target="PlayerSplitView.OpenPaneLength" Value="120" />
                    </VisualState.Setters>
                </VisualState>
                

            </VisualStateGroup>

            <!-- Xbox時のレイアウト調整 -->
            <VisualStateGroup >
                <VisualState>
                    <VisualState.StateTriggers>
                        <hardTrigger:DeviceFamilyTrigger Condition="Xbox" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PlayerSidePaneLayout.Margin" Value="0 27 0 27" />

                        <Setter Target="UIControlContentLayout.Padding" Value="48 0 48 27" />
                        <Setter Target="UIControlHeaderLayout.Margin" Value="48 27 48 0" />
                        <Setter Target="UIControlCenterLayout.Margin" Value="48 0" />
                        
                    </VisualState.Setters>
                </VisualState>

            </VisualStateGroup>



            <!-- フルスクリーン -->
            <VisualStateGroup >
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsFullScreen.Value, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="FullscreenButtonIcon.Kind" Value="FullScreenExit" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup >
                <VisualState>
                    <VisualState.StateTriggers>
                        <hardTrigger:DeviceFamilyTrigger Condition="Xbox" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="TVModeDisplayOptionsButtonButton.Visibility" Value="Visible" />
                        <Setter Target="MobileAndDesktopDisplayOptionsButton.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <hardTrigger:DeviceFamilyTrigger Condition="Desktop" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--
                        <Setter Target="SplitWindowButton.Visibility" Value="Visible" />
                        -->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            

            <!-- 再生・停止 -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding NowPlaying.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PlayPauseButtonIcon.Kind" Value="Pause" />
                        <Setter Target="CO_PlayPauseButtonIcon.Kind" Value="Pause" />

                        <Setter Target="TitleLayout.Opacity" Value="0.7" />

                    </VisualState.Setters>
                </VisualState>


            </VisualStateGroup>



            <!-- ミュートの有効・無効 -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsMuted.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>

                        <Setter Target="VolumeButton.Symbol" Value="Mute" />
                        <Setter Target="MuteToggleButton.Icon" Value="Mute" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsMuted.Value, Converter={StaticResource BooleanInverted}}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="VolumeButton.Symbol" Value="Volume" />
                        <Setter Target="MuteToggleButton.Icon" Value="Volume" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <!-- ウィンドウ非アクティブ時にマウス移動に反応するエリアを拡大する -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <myTrigger:WindowActiveTrigger Inverted="True" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="WindowDeactiveMouseMoveDetectWall.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState>
                    <VisualState.StateTriggers>
                        <myTrigger:WindowActiveTrigger Inverted="False" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="WindowDeactiveMouseMoveDetectWall.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>





            
            <!-- 別ウィンドウで開く -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsDisplayInSecondaryView}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="DisplayWithMainViewButton.Visibility" Value="Visible" />
                        <Setter Target="SmallWindowButton.Visibility" Value="Collapsed" />

                        <Setter Target="CloseButton.Visibility" Value="Collapsed" />
                        <Setter Target="CO_CloseButton.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <hardTrigger:DeviceFamilyTrigger Condition="Desktop" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="DisplayWithSecondaryViewButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            
            <!-- 小窓で開く -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsSmallWindowModeEnable.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="UIControlLayout.Visibility" Value="Collapsed" />
                        <Setter Target="PlayerSplitView.OpenPaneLength" Value="120" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding NowPlaying.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>

                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="True" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>



            <!-- コントロールUI -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <myTrigger:CompactOverlayViewModeTrigger />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ReadOnlySeekBarSlider.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsDisplayControlUI.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- 読み取り再生位置スライダーの表示状態 -->
                        <Setter Target="ReadOnlySeekBarSlider.Visibility" Value="Collapsed" />

                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            
            
            <!-- キーボード入力によるコメント書き込みショートカットの有効・無効 -->
            <VisualStateGroup>
                
                <VisualState>
                    <VisualState.StateTriggers>
                        <myTrigger:CompactOverlayViewModeTrigger />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="CommentWriteBeginKeyboardTrigger.IsEnabled" Value="False" />
                        
                        <Setter Target="CO_CommentWriteBeginKeyboardTrigger.IsEnabled" Value="True" />
                    </VisualState.Setters>

                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding NowCommentWriting.Value}" />
                        <StateTrigger IsActive="{Binding ElementName=PlayerSplitView, Path=IsPaneOpen}" />
                        <StateTrigger IsActive="{Binding IsSmallWindowModeEnable.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="CommentWriteBeginKeyboardTrigger.IsEnabled" Value="False" />
                        <Setter Target="PlayPauseToggleKeyboardTrigger.IsEnabled" Value="False" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding NowCommentWriting.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="CommentWriteExitKeyboardTrigger.IsEnabled" Value="True" />
                        <Setter Target="CommentSubmitKeyboardTrigger.IsEnabled" Value="True" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <!-- コメント投稿欄の表示 -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsSmallWindowModeEnable.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="{Binding NowCommentWriting.Value, Mode=TwoWay}" Value="False" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <!-- Landscape固定ボタンの表示管理 -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <intractionTrigger:InteractionModeTrigger Condition="Touch" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ForceRotateToggleButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <!-- モバイルの縦持ち時のLandscape固定処理 -->
            <VisualStateGroup>

                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsSmallWindowModeEnable.Value}" />

                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LayoutRotateTranform.Angle" Value="0" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsForceLandscape.Value, Converter={StaticResource BooleanInverted}}" />

                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LayoutRotateTranform.Angle" Value="0" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState>
                    <VisualState.StateTriggers>
                        <logicalTrigger:MultiTrigger ConditionModifier="{StaticResource AndModifier}">
                            <logicalTrigger:MultiTrigger.Triggers>
                                <uiTrigger:OrientationTrigger Condition="Portrait" />
                                <intractionTrigger:InteractionModeTrigger Condition="Touch" />
                            </logicalTrigger:MultiTrigger.Triggers>
                        </logicalTrigger:MultiTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LayoutRotateTranform.Angle" Value="90" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

        </VisualStateManager.VisualStateGroups>

        <i:Interaction.Behaviors>
            <core:EventTriggerBehavior EventName="Unloaded">
                <core:CallMethodAction TargetObject="{Binding}" MethodName="Dispose" />
            </core:EventTriggerBehavior>
        </i:Interaction.Behaviors>

        <toolkit:LayoutTransformControl
                x:Name="LayoutTransform"
                >
            <toolkit:LayoutTransformControl.Transform>
                <RotateTransform x:Name="LayoutRotateTranform" Angle="0" />
            </toolkit:LayoutTransformControl.Transform>



            <SplitView PanePlacement="Right"
                           x:Name="PlayerSplitView"
                           IsTabStop="False"
                       
                               >

                <i:Interaction.Behaviors>
                                       
                    <!-- サイドペインのコンテンツVMが指定されたらサイドペインを開く -->

                    <!-- 条件に{x:Null}ではなく PlayerSidePaneContentType.None を指定しているのは
                         nullの場合、閉じた後のバインディングエラーによって
                         意図しない値が書き戻される可能性があるためです
                    -->

                    <core:DataTriggerBehavior Binding="{Binding CurrentSidePaneContentType.Value}" 
                                              ComparisonCondition="NotEqual" 
                                              Value="{x:Null}"
                                              >
                        <core:ChangePropertyAction PropertyName="IsPaneOpen" Value="True" />
                    </core:DataTriggerBehavior>
                    
                    <!-- サイドペインが閉じられたら コンテンツVMをリセット -->
                    <core:EventTriggerBehavior EventName="PaneClosed">
                        <core:ChangePropertyAction TargetObject="{Binding CurrentSidePaneContentType}" 
                                                   PropertyName="Value" 
                                                   Value="{x:Null}" 
                                                   />
                    </core:EventTriggerBehavior>
                    
                </i:Interaction.Behaviors>
                
                <SplitView.Pane>
                    <Grid x:Name="PlayerSidePaneLayout">
                        <ContentControl Content="{Binding CurrentSidePaneContent.Value}"
                                        ContentTemplateSelector="{StaticResource PlayerSidePaneContentTemplateSelecter}"
                                        HorizontalContentAlignment="Stretch"
                                        VerticalContentAlignment="Stretch"
                                        />
                    </Grid>
                    
                </SplitView.Pane>

                <SplitView.Content>

                    <!-- Media Control -->

                    <Grid x:Name="MediaControl" 
                          ContextFlyout="{StaticResource VideoOptionsFlyout}"
                          >

                        <i:Interaction.Behaviors>



                            <!-- マウスの非表示 -->
                            
                            <mybehavior:AutoHideCursor x:Name="AutoHideCursor"
                                IsAutoHideEnabled="{Binding IsMouseCursolAutoHideEnable.Value, Mode=OneWay}"
                                AutoHideDelay="0:0:2"
                                />
                            


                            <core:EventTriggerBehavior EventName="Loaded">
                                <mybehavior:SetFocus TargetObject="{Binding ElementName=RootLayout}" />
                            </core:EventTriggerBehavior>


                            <!-- スペースキー入力で再生停止の切り替え-->
                            <mybehavior:KeyboardTrigger Key="Space"  x:Name="PlayPauseToggleKeyboardTrigger">
                                <core:InvokeCommandAction Command="{Binding TogglePlayPauseCommand}" />
                            </mybehavior:KeyboardTrigger>



                            <mybehavior:KeyboardTrigger Key="Enter" x:Name="CommentSubmitKeyboardTrigger">
                                <mybehavior:KeyboardTrigger.Actions>
                                    <core:InvokeCommandAction Command="{Binding CommentSubmitCommand}" />
                                </mybehavior:KeyboardTrigger.Actions>
                            </mybehavior:KeyboardTrigger>

                            <mybehavior:KeyboardTrigger Key="Escape" x:Name="CommentWriteExitKeyboardTrigger" IsEnabled="False">
                                <mybehavior:KeyboardTrigger.Actions>
                                    <core:ChangePropertyAction TargetObject="{Binding ElementName=CommentTextBox}" PropertyName="IsEnabled" Value="False" />
                                    <core:ChangePropertyAction TargetObject="{Binding ElementName=CommentTextBox}" PropertyName="IsEnabled" Value="True" />
                                    <core:ChangePropertyAction TargetObject="{Binding ElementName=CO_CommentTextBox}" PropertyName="IsEnabled" Value="False" />
                                    <core:ChangePropertyAction TargetObject="{Binding ElementName=CO_CommentTextBox}" PropertyName="IsEnabled" Value="True" />
                                </mybehavior:KeyboardTrigger.Actions>
                            </mybehavior:KeyboardTrigger>


                            
                            <mybehavior:KeyboardTrigger x:Name="CommentWriteBeginKeyboardTrigger">
                                <mybehavior:KeyboardTrigger.Actions>
                                    <mybehavior:SetFocus TargetObject="{Binding ElementName=CommentTextBox}" Delay="00:00:00" />
                                    <core:ChangePropertyAction TargetObject="{Binding ElementName=PlayerControlAutoHide}" PropertyName="IsVisible" Value="True" />
                                </mybehavior:KeyboardTrigger.Actions>
                            </mybehavior:KeyboardTrigger>

                            <mybehavior:KeyboardTrigger x:Name="CO_CommentWriteBeginKeyboardTrigger" IsEnabled="False">
                                <mybehavior:KeyboardTrigger.Actions>
                                    <mybehavior:SetFocus TargetObject="{Binding ElementName=CO_CommentTextBox}" Delay="00:00:00" />
                                    <core:ChangePropertyAction TargetObject="{Binding ElementName=PlayerControlAutoHide}" PropertyName="IsVisible" Value="True" />
                                </mybehavior:KeyboardTrigger.Actions>
                            </mybehavior:KeyboardTrigger>


                            

                            <mybehavior:MouseWheelTrigger>
                                <mybehavior:MouseWheelTrigger.UpActions>
                                    <core:InvokeCommandAction Command="{Binding VolumeUpCommand}" />
                                </mybehavior:MouseWheelTrigger.UpActions>
                                <mybehavior:MouseWheelTrigger.DownActions>
                                    <core:InvokeCommandAction Command="{Binding VolumeDownCommand}" />
                                </mybehavior:MouseWheelTrigger.DownActions>
                            </mybehavior:MouseWheelTrigger>




                            
                            <mybehavior:UINavigationTrigger Kind="Cancel" 
                                                                IsEnabled="{Binding IsSmallWindowModeEnable.Value, Converter={StaticResource BooleanInverted}}"
                                                                >
                                <core:ChangePropertyAction TargetObject="{Binding ElementName=PlayerControlAutoHide}" PropertyName="IsVisible" Value="{Binding IsDisplayControlUI.Value, Converter={StaticResource BooleanInverted}}" />
                            </mybehavior:UINavigationTrigger>
                    



                            <mybehavior:UINavigationTrigger Kind="Cancel" Hold="True" 
                                                        IsEnabled="{Binding IsSmallWindowModeEnable.Value, Converter={StaticResource BooleanInverted}}"
                                                        >
                                <core:InvokeCommandAction Command="{Binding ClosePlayerCommand}" />
                            </mybehavior:UINavigationTrigger>


                            <mybehavior:UINavigationTrigger Kind="PageLeft" 
                                                        IsEnabled="{Binding IsSmallWindowModeEnable.Value, Converter={StaticResource BooleanInverted}}"
                                                        >
                                <core:InvokeCommandAction Command="{Binding PreviewVideoPositionCommand}" />
                            </mybehavior:UINavigationTrigger>
                            <mybehavior:UINavigationTrigger Kind="PageRight" 
                                                        IsEnabled="{Binding IsSmallWindowModeEnable.Value, Converter={StaticResource BooleanInverted}}"
                                                        >
                                <core:InvokeCommandAction Command="{Binding ForwardVideoPositionCommand}" />
                            </mybehavior:UINavigationTrigger>

                            <mybehavior:UINavigationTrigger Kind="Context1" 
                                                        IsEnabled="{Binding IsSmallWindowModeEnable.Value, Converter={StaticResource BooleanInverted}}"
                                                        >
                                <core:InvokeCommandAction Command="{Binding TogglePlayPauseCommand}" />
                            </mybehavior:UINavigationTrigger>


                        </i:Interaction.Behaviors>


                        <MediaPlayerElement x:Name="MediaPlayerElement" 
                                            AutoPlay="True"
                                    >
                            <i:Interaction.Behaviors>

                                <mybehavior:MediaPlayerSetter MediaPlayer="{Binding MediaPlayer}" />

                                <mybehavior:MediaPlayerElementContentHeightGetter ContentHeight="{Binding CommentCanvasHeight.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />


                            </i:Interaction.Behaviors>




                        </MediaPlayerElement>


                        <local:CommentRendererCompositionUI
                                x:Name="CommentRederer"
                                MediaPlayer="{Binding MediaPlayer}"
                                Comments="{Binding Comments}"
                                Visibility="{Binding IsCommentDisplayEnable.Value, Converter={StaticResource BooleanToVisibility}}"
                                CommentSizeScale="{Binding CommentFontScale.Value}"
                                Height="{Binding CommentCanvasHeight.Value}"
                                CommentDefaultColor="{Binding CommentDefaultColor.Value}"
                                DefaultDisplayDuration="{Binding RequestCommentDisplayDuration.Value}"
                                Opacity="{Binding CommentOpacity.Value, Mode=OneWay}"
                                UpdateInterval="0:0:0.032"
                                />






                        <ProgressRing Visibility="{Binding NowBuffering.Value, Mode=OneWay, Converter={StaticResource BooleanToVisibility}}"
                                IsActive="{Binding NowBuffering.Value, Mode=OneWay}"
                                Width="48"
                                Height="48"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Margin="0 88 24 0"      
                                />

                        <!-- ウィンドウ非アクティブ時に画面全体をマウス移動の反応対象にするためのコリジョン-->
                        <Border x:Name="WindowDeactiveMouseMoveDetectWall" Background="Transparent"
                            >

                        </Border>


                        <!-- UI非表示時の再生位置バー -->
                        <Slider Value="{Binding ElementName=SeekBarSlider, Path=Value, Mode=TwoWay}" 
                                Maximum="{Binding VideoLength.Value, Mode=OneWay}"
                                Style="{StaticResource VideoProgressBarStyle}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Bottom"
                                IsEnabled="False"
                                Opacity="0.6"
                                x:Name="ReadOnlySeekBarSlider"
                             >
                            <Slider.RenderTransform>
                                <TranslateTransform Y="8" />
                            </Slider.RenderTransform>


                        </Slider>



                        <Border IsHitTestVisible="True" Background="Transparent">
                            <i:Interaction.Behaviors>
                                
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:ChangePropertyAction TargetObject="{Binding IsDisplayControlUI, Mode=TwoWay}" PropertyName="Value" Value="{Binding IsDisplayControlUI.Value, Converter={StaticResource BooleanInverted}}" />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </Border>


                        <!-- 音量表示 -->
                        <controls:InstantContent DisplayContent="{Binding SoundVolume.Value, Mode=OneWay}"
                                                 HorizontalAlignment="Left"
                                                 VerticalAlignment="Top"
                                                 Margin="16"
                                                 >
                            <controls:InstantContent.Background>
                                <SolidColorBrush Color="{ThemeResource SystemAltMediumColor}" />
                            </controls:InstantContent.Background>
                            <controls:InstantContent.DisplayContentTemplate>
                                <DataTemplate>
                                    <Grid Margin="16 2 16 4">
                                        <Border>
                                            <TextBlock FontSize="20" VerticalAlignment="Center">
                                                <Run Text="音量" />:
                                                <Run Text="{Binding Converter={StaticResource ToUserFriendlySoubleVolume}}" FontSize="22" />%
                                            </TextBlock>
                                        </Border>
                                    </Grid>
                                </DataTemplate>
                            </controls:InstantContent.DisplayContentTemplate>
                        </controls:InstantContent>



                        <Grid x:Name="UIControlLayout">
                            <i:Interaction.Behaviors>

                                <mybehavior:VisiblityFadeChanger x:Name="PlayerControlAutoHide" 
                                                         Delay="{Binding AutoHideDelayTime.Value, Mode=OneWay}"
                                                         IsAnimationEnable="{Binding IsSmallWindowModeEnable.Value, Converter={StaticResource BooleanInverted}}"
                                                         IsVisible="{Binding IsDisplayControlUI.Value, Mode=TwoWay}"
                                                         IsAutoHideEnabled="{Binding IsAutoHideEnable.Value, Mode=OneWay}"
                                     />

                                <core:DataTriggerBehavior Binding="{Binding IsDisplayControlUI.Value}" Value="True">
                                    <mybehavior:SetFocus TargetObject="{Binding ElementName=PlayPauseButton}" Delay="00:00:00" 
                                                 IsEnabled="{Binding IsForceTVModeEnable.Value}"
                                                 />
                                </core:DataTriggerBehavior>

                            </i:Interaction.Behaviors>


                            <toolkit:DockPanel x:Name="DefaultUIControl">
                                
                                <!-- プレイリスト 操作 -->
                                <StackPanel toolkit:DockPanel.Dock="Top" >

                                    <Border Background="{StaticResource HohoemaPlayerBackgroundBrush}">
                                        <toolkit:DockPanel
                                            x:Name="UIControlHeaderLayout"
                                            
                                               >

                                            <Button x:Name="CloseButton"
                                                    Command="{Binding ClosePlayerCommand}"
                                                    Background="Transparent"
                                                    toolkit:DockPanel.Dock="Left"
                                                    UseSystemFocusVisuals="True"
                                                        
                                                    >
                                                <iconPack:PackIconMaterial Kind="Close" />
                                            </Button>

                                            <StackPanel Orientation="Horizontal"
                                                        toolkit:DockPanel.Dock="Right"
                                                        >

                                                <Button Background="Transparent" 
                                                        Command="{Binding SelectSidePaneContentCommand}"
                                                        CommandParameter="Playlist"
                                                        >
                                                    <iconPack:PackIconMaterial Kind="PlaylistPlay" Width="24" Height="24" >

                                                    </iconPack:PackIconMaterial>

                                                </Button>

                                            </StackPanel>



                                            <Border />

                                        </toolkit:DockPanel>

                                    </Border>




                                    

                                </StackPanel>


                                <!-- 動画コンテンツ 操作 -->
                                <StackPanel toolkit:DockPanel.Dock="Bottom" >

                                    

                                    <StackPanel x:Name="UIControlContentLayout"
                                                Background="{StaticResource HohoemaPlayerBackgroundBrush}"
                                                >


                                        <StackPanel Margin="8 0" >
                                            <TextBlock x:Name="TitleLayout"
                                                       Text="{Binding VideoTitle}" 
                                                       FontSize="24" 
                                                       HorizontalAlignment="Center" 
                                                       TextWrapping="Wrap"
                                                       />

                                            <i:Interaction.Behaviors>
                                                <core:EventTriggerBehavior EventName="Tapped">
                                                    <core:ChangePropertyAction TargetObject="{Binding IsDisplayControlUI}" PropertyName="Value" Value="False" />
                                                </core:EventTriggerBehavior>
                                            </i:Interaction.Behaviors>
                                        </StackPanel>

                                        <!-- シークバー -->
                                        <StackPanel >

                                            <Grid Margin="0 0 0 4">

                                                <!--
                                        <local:DownloadProgressBar 
                                                ProgressFragmentItems="{Binding ProgressFragments}"
                                                Margin="0 20 0 0"
                                                />
                                        -->


                                                <Slider x:Name="SeekBarSlider"
                                                            Minimum="0.0" 
                                                            Maximum="{Binding VideoLength.Value}"
                                                            Value="{Binding SliderVideoPosition.Value, Mode=TwoWay}"
                                                            Style="{StaticResource VideoProgressBarStyle}"
                                                            Padding="0 16 0 8"
                                                            StepFrequency="0.1"
                                                            LargeChange="30"
                                                            SmallChange="5"
                                                            IsThumbToolTipEnabled="True"
                                                            ThumbToolTipValueConverter="{StaticResource TimeToMovieLengthConverter}"
                                                            HorizontalAlignment="Stretch"
                                                            HorizontalContentAlignment="Stretch"
                                                            VerticalAlignment="Center"
                                                            IsEnabled="{Binding NowQualityChanging.Value, Converter={StaticResource BooleanInverted}}"
                                        
                                                    Opacity="0.75"
                                             >
                                                </Slider>
                                            </Grid>
                                            
                                            <Grid Margin="0 0 0 8">

                                                


                                                <StackPanel HorizontalAlignment="Left"          
                                                            VerticalAlignment="Bottom"
                                                            Orientation="Horizontal"
                                                            Margin="16 0 16 0"
                                                            Visibility="{Binding CurrentVideoQuality.Value, Converter={StaticResource NotNullToVisibility}}"
                                                >

                                                    <TextBlock  Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}">
                                                        <Run Text="{Binding CurrentVideoQuality.Value, Converter={StaticResource ToLocalText}}" />
                                                        <Run Text="画質" />   
                                                    </TextBlock>

                                                    <Border Width="8" />

                                                    <TextBlock  Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                                                Visibility="{Binding IsPlayWithCache.Value, Converter={StaticResource BooleanToVisibility}}"
                                                        >
                                                        <Run Text="(キャッシュ済み)" />
                                                    </TextBlock>
                                                    <TextBlock  Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                                    Visibility="{Binding IsPlayWithCache.Value, Converter={StaticResource BooleanToVisibilityInverted}}"
                                                        >
                                                        <Run Text="(オンライン再生)" />
                                                    </TextBlock>

                                                </StackPanel>


                                                <TextBlock  HorizontalAlignment="Right"
                                                        VerticalAlignment="Bottom"
                                                        IsHitTestVisible="False"
                                                        Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                                        Margin="16 0 16 0"
                                                    >
                                        
                                                    <Run Text="{Binding SliderVideoPosition.Value, Converter={StaticResource TimeToMovieLengthConverter}}" />
                                                    <Run Text="/" />
                                                    <Run Text="{Binding VideoLength.Value, Converter={StaticResource TimeToMovieLengthConverter}}" />
                                                </TextBlock>
                                            </Grid>
                                        </StackPanel>

                                        <!-- 再生コントロール -->
                                        <Grid Padding="8 0 8 0" x:Name="PlaybackControlContainer">

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <StackPanel Orientation="Horizontal">

                                                <!-- 音量 -->
                                                <Button Background="Transparent">

                                                    <SymbolIcon 
                                            x:Name="VolumeButton"
                                            Symbol="Mute" 
                                            />
                                                    <Button.Flyout>
                                                        <Flyout>
                                                            <toolkit:DockPanel
                                                    toolkit:DockPanel.Dock="Right"
                                                    Margin="0 0 16 0"
                                                      Height="66"
                                                    >

                                                                <StackPanel Background="#AA777777"
                                                    toolkit:DockPanel.Dock="Left"
                                                    >
                                                                    <AppBarButton Icon="Volume" 
                                                          Label="ミュート"
                                                          VerticalAlignment="Stretch"
                                                          x:Name="MuteToggleButton"
                                                          Command="{Binding ToggleMuteCommand}"    
                                                      >

                                                                    </AppBarButton>
                                                                </StackPanel>


                                                                <StackPanel Background="#AA777777" Margin="8 0" 
                                                    Orientation="Vertical">



                                                                    <Slider x:Name="VolumeSlider"
                                                                Orientation="Horizontal"
                                                                VerticalAlignment="Top"
                                                                Margin="8 4"
                                                                Value="{Binding SoundVolume.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                IsThumbToolTipEnabled="True"
                                                                ThumbToolTipValueConverter="{StaticResource ToUserFriendlySoubleVolume}"
                                                                Maximum="1.0"
                                                                Minimum="0.0"
                                                                StepFrequency="0.01"
                                                                SmallChange="0.01"
                                                                LargeChange="0.1"
                                                                Height="32"
                                                                Width="160"
                                                                Background="Transparent"
                                                            >
                                                                        <i:Interaction.Behaviors>
                                                                            <core:EventTriggerBehavior EventName="ValueChanged" >

                                                                            </core:EventTriggerBehavior>
                                                                        </i:Interaction.Behaviors>
                                                                    </Slider>
                                                                    <TextBlock Text="音量" 
                                                           VerticalAlignment="Center"
                                                           Margin="8 0 0 0"
                                                           HorizontalAlignment="Center"
                                                           FontSize="12"
                                                           />

                                                                </StackPanel>



                                                            </toolkit:DockPanel>
                                                        </Flyout>
                                                    </Button.Flyout>
                                                </Button>

                                                <Button Command="{Binding ToggleDisplayCommentCommand}"
                                                Background="Transparent"
                                                      >
                                                    <Grid>
                                                        <iconPack:PackIconMaterial
                                                    Kind="Comment"
                                                    x:Name="CommentIcon"
                                                    Width="20"
                                                    Height="20"
                                                    />
                                                        <Canvas>
                                                            <Line X1="{Binding ElementName=CommentIcon, Path=ActualWidth}" 
                                                          Y1="0"
                                                          X2="0" 
                                                          Y2="{Binding ElementName=CommentIcon, Path=ActualHeight}"
                                                      Stroke="Red"
                                                          StrokeThickness="4"
                                                      Visibility="{Binding IsCommentDisplayEnable.Value, Converter={StaticResource BooleanToVisibilityInverted}}"
                                                          Opacity="0.7"
                                                      />
                                                        </Canvas>
                                                    </Grid>
                                                </Button>


                                            </StackPanel>

                                            <!-- 再生 -->
                                            <StackPanel Orientation="Horizontal" x:Name="MiddleUIControlLayout"
                                            Grid.Column="1"
                                            >


                                                <Button Background="Transparent" 
                                                Command="{Binding PreviewVideoPositionCommand}"
                                            x:Name="PreviewVideoPositionButon"
                                                Margin="0 0 24 0"
                                            >
                                                    <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xED3C;" 
                                                        FontSize="24"
                                                               
                                                    />

                                                </Button>

                                                <Button Command="{Binding TogglePlayPauseCommand}"
                                            Background="Transparent"
                                            Margin="0 0 0 0"
                                                x:Name="PlayPauseButton"  
                                            
                                              >
                                                    <iconPack:PackIconMaterial Kind="Play" 
                                                    x:Name="PlayPauseButtonIcon"  
                                                    RenderTransformOrigin="0.5, 0.5"
                                                    >
                                                        <iconPack:PackIconMaterial.RenderTransform>
                                                            <CompositeTransform ScaleX="1.35" ScaleY="1.35"/>
                                                        </iconPack:PackIconMaterial.RenderTransform>

                                                    </iconPack:PackIconMaterial>
                                                </Button>

                                                <Button x:Name="ForwardVideoPositionButon"
                                                        Background="Transparent"
                                                        Command="{Binding ForwardVideoPositionCommand}"
                                                        Margin="24 0 0 0"
                                                        >
                                                    <TextBlock FontFamily="Segoe MDL2 Assets" 
                                                               Text="&#xED3D;"
                                                               FontSize="24"
                                                                />


                                                </Button>

                                            </StackPanel>

                                            <!-- Fullscreen / More -->
                                            <toolkit:WrapPanel Orientation="Horizontal"
                                                    Grid.Column="2"
                                                HorizontalAlignment="Right"
                                                               VerticalAlignment="Center"
                                                    >

                                                <Button Background="Transparent"
                                                        x:Name="MobileAndDesktopDisplayOptionsButton"
                                                        >
                                                    <Button.Flyout>
                                                        <Flyout>
                                                            <StackPanel Orientation="Horizontal">

                                                                <Button Command="{Binding PlayerSmallWindowDisplayCommand}"
                                                                        Background="Transparent"
                                                                        x:Name="SmallWindowButton"  
                                                                        >
                                                                    <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                                                        <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE743;"
                                                                                   FontSize="24"
                                                                                   VerticalAlignment="Center"
                                                                                   Height="24"
                                                                                   Width="24"
                                                                                   HorizontalAlignment="Center"
                                                                                   Margin="0 0 0 8"
                                                                               />

                                                                        <TextBlock Text="小窓" 
                                                                                   Style="{StaticResource CaptionTextBlockStyle}"
                                                                                   VerticalAlignment="Center" />

                                                                    </StackPanel>
                                                                </Button>




                                                                
                                                                
                                                                <Button Command="{Binding ToggleCompactOverlayCommand}"
                                                                        Background="Transparent"
                                                                        x:Name="CompactOverlayButton"
                                                                        Visibility="Collapsed"
                                                                        >
                                                                    <StackPanel Orientation="Vertical">

                                                                        <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE8A7;"
                                                                                   FontSize="24"
                                                                                   VerticalAlignment="Center"
                                                                                   Height="24"
                                                                                   Width="24"
                                                                                   HorizontalAlignment="Center"
                                                                                   Margin="0 0 0 8"
                                                                               />
                                                                        <TextBlock Text="ミニモード" 
                                                                                   Style="{StaticResource CaptionTextBlockStyle}"
                                                                                   VerticalAlignment="Center" />
                                                                    </StackPanel>
                                                                </Button>

                                                                
                                                                
                                                                <Button Command="{Binding ToggleFullScreenCommand}"
                                                                        Background="Transparent"
                                                                        x:Name="FullscreenButton"  
                                                                        >
                                                                    <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                                                        <toolkit:LayoutTransformControl Margin="0 0 0 8">
                                                                            <iconPack:PackIconMaterial x:Name="FullscreenButtonIcon"  
                                                                                Kind="Fullscreen"                                                                                                        
                                                                                Width="24"
                                                                                Height="24"
                                                                                HorizontalAlignment="Center"
                                                                            >

                                                                            </iconPack:PackIconMaterial>
                                                                        </toolkit:LayoutTransformControl>
                                                                        

                                                                        <TextBlock Text="全画面" 
                                                                                   Style="{StaticResource CaptionTextBlockStyle}"
                                                                                   VerticalAlignment="Center" />

                                                                    </StackPanel>
                                                                </Button>


                                                                <Button Command="{Binding PlayerDisplayWithMainViewCommand}"
                                                                        Background="Transparent"
                                                                        x:Name="DisplayWithMainViewButton"
                                                                        Visibility="Collapsed"
                                                                        >
                                                                    <StackPanel Orientation="Vertical">
                                                                        <iconPack:PackIconMaterial Kind="CheckboxBlankOutline"
                                                                                                   Margin="0 0 0 8"
                                                                                                   Height="24"
                                                                                                   Width="24"
                                                                                                   HorizontalAlignment="Center"
                                                                                                   />

                                                                        <TextBlock Text="メインビューで表示" 
                                                                                   Style="{StaticResource CaptionTextBlockStyle}"
                                                                                   VerticalAlignment="Center" />
                                                                    </StackPanel>
                                                                </Button>

                                                                <Button Command="{Binding PlayerDisplayWithSecondaryViewCommand}"
                                                                        Background="Transparent"
                                                                        x:Name="DisplayWithSecondaryViewButton"
                                                                        Visibility="Collapsed"
                                                                        >
                                                                    <StackPanel Orientation="Vertical">
                                                                        <iconPack:PackIconMaterial Kind="CheckboxMultipleBlankOutline"
                                                                                                   Margin="0 0 0 8"
                                                                                                   Height="24"
                                                                                                   Width="24"
                                                                                                   HorizontalAlignment="Center"
                                                                                                   />

                                                                        <TextBlock Text="新しいビューで表示" 
                                                                                   Style="{StaticResource CaptionTextBlockStyle}"
                                                                                   VerticalAlignment="Center" />
                                                                    </StackPanel>
                                                                </Button>



                                                                <Button Visibility="Collapsed"
                                                                              x:Name="SplitWindowButton"
                                                                              Background="Transparent"
                                                                              >
                                                                    <StackPanel Orientation="Vertical">
                                                                        <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE78B;"
                                                                                   FontSize="24"
                                                                                   VerticalAlignment="Center"
                                                                                   Height="24"
                                                                                   Width="24"
                                                                                   HorizontalAlignment="Center"
                                                                                   Margin="0 0 0 8"
                                                                               />
                                                                        <TextBlock Text="別ウィンドウ" 
                                                                                   Style="{StaticResource CaptionTextBlockStyle}"
                                                                                   VerticalAlignment="Center" />
                                                                    </StackPanel>
                                                                </Button>

                                                                <ToggleButton Background="Transparent"
                                                                        x:Name="ForceRotateToggleButton" 
                                                                        Visibility="Collapsed"
                                                                        IsChecked="{Binding IsForceLandscape.Value, Mode=TwoWay}"
                                                                        >
                                                                    <StackPanel>
                                                                        <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE8B4;"
                                                                                   FontSize="24"
                                                                                   VerticalAlignment="Center"
                                                                                   Height="24"
                                                                                   Width="24"
                                                                                   HorizontalAlignment="Center"
                                                                                   Margin="0 0 0 8"
                                                                               />
                                                                        
                                                                        <TextBlock Text="横持ち固定"
                                                                                   Style="{StaticResource CaptionTextBlockStyle}"
                                                                                   VerticalAlignment="Center"
                                                                                   />
                                                                    </StackPanel>
                                                                </ToggleButton>


                                                            </StackPanel>
                                                        </Flyout>
                                                    </Button.Flyout>


                                                    <Grid>
                                                        <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE97C;"
                                                                                   FontSize="24"
                                                                                   VerticalAlignment="Center"
                                                                                   Height="24"
                                                                                   Width="24"
                                                                                   HorizontalAlignment="Center"
                                                                               />
                                                    </Grid>
                                                    
                                                </Button>


                                                <Button Command="{Binding PlayerSmallWindowDisplayCommand}"
                                                        Background="Transparent"
                                                        x:Name="TVModeDisplayOptionsButtonButton"  
                                                        Visibility="Collapsed"
                                                        >
                                                    <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                                        <toolkit:LayoutTransformControl Margin="0 0 0 8">
                                                            <iconPack:PackIconMaterial Kind="WindowMinimize" 
                                                                                                   Width="24"
                                                                                                   Height="24"
                                                                                                       HorizontalAlignment="Center"
                                                                            >
                                                            </iconPack:PackIconMaterial>
                                                        </toolkit:LayoutTransformControl>

                                                        <TextBlock Text="小窓表示" 
                                                                                   Style="{StaticResource CaptionTextBlockStyle}"
                                                                                   VerticalAlignment="Center" />

                                                    </StackPanel>
                                                </Button>


                                                <Button Command="{Binding SelectSidePaneContentCommand}"
                                                        CommandParameter="Setting" 
                                                        Background="Transparent"
                                                        >
                                                    <SymbolIcon Symbol="Setting"
                                                                />
                                                </Button>

                                                <Button Background="Transparent"
                                                        x:Name="VideoOptionsMenuButton"
                                                        Flyout="{StaticResource VideoOptionsFlyout}"
                                                        >
                                                    <SymbolIcon Symbol="More" />

                                                </Button>
                                            </toolkit:WrapPanel>

                                        </Grid>


                                        <!-- コメントを書く -->
                                        <Grid x:Name="CommentLayout"
                                                Padding="0 8 0 0"
                                            >
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="1*" />
                                                <ColumnDefinition Width="1*" />
                                                <ColumnDefinition Width="1*" />
                                                <ColumnDefinition Width="1*" />
                                                <ColumnDefinition Width="1*" />
                                                <ColumnDefinition Width="1*" />
                                            </Grid.ColumnDefinitions>

                                            <TextBox x:Name="CommentTextBox" 
                                                    Text="{Binding WritingComment.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    Style="{StaticResource BGTransparentTextBoxStyle}"
                                                    FontSize="18"
                                                    VerticalAlignment="Center"
                                                    MaxLength="75"
                                                    IsTabStop="True"
                                                    toolkitext:TextBoxFocusExtensions.AutoSelectOnFocus="True"
                                                    PlaceholderText="コメント"
                                                    HorizontalAlignment="Stretch"
                                                    Margin="8 0 8 8"
                                                    HorizontalContentAlignment="Stretch"
                                                    Height="40"
                                                    Grid.RowSpan="2"
                                                    Grid.Column="1"
                                                    Grid.ColumnSpan="4"
                                                    >
                                                <i:Interaction.Behaviors>

                                                    <mybehavior:FocusGetter IsFocus="{Binding NowCommentWriting.Value, Mode=TwoWay}" />

                                                </i:Interaction.Behaviors>
                                            </TextBox>


                                            <Button Content="{Binding CommandString.Value}" 
                                                    Margin="8 0 8 8"
                                                    HorizontalAlignment="Stretch"
                                                    HorizontalContentAlignment="Center"
                                                    DataContext="{Binding}"
                                                    x:Name="CommentCommandEditButton"
                                                    Height="40"
                                                    UseSystemFocusVisuals="True"
                                                    Grid.RowSpan="2"
                                                    Grid.Column="0"
                                                    Grid.ColumnSpan="1"
                                            >
                                                <Button.Flyout>
                                                    <Flyout>
                                                        <local:CommentCommandEditer DataContext="{Binding CommandEditerVM}" />
                                                    </Flyout>
                                                </Button.Flyout>
                                            </Button>

                                            <Button Content="投稿"  Margin="8 0 8 8"
                                                    Height="40"
                                                    Command="{Binding CommentSubmitCommand}"
                                                    x:Name="CommentSubmitButton"
                                                HorizontalAlignment="Stretch"
                                                HorizontalContentAlignment="Center"
                                                UseSystemFocusVisuals="True"
                                                Grid.RowSpan="2"
                                                 Grid.Column="5"
                                                 Grid.ColumnSpan="1"
                                            
                                                    />
                                        </Grid>
                                    </StackPanel>
                                </StackPanel>




                                <Grid x:Name="UIControlCenterLayout" BorderThickness="0">


                                    <Border IsHitTestVisible="True" Background="Transparent" BorderThickness="0">
                                        <i:Interaction.Behaviors>
                                            <core:EventTriggerBehavior EventName="Tapped">
                                                <core:ChangePropertyAction TargetObject="{Binding IsDisplayControlUI}" PropertyName="Value" Value="False" />
                                            </core:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </Border>

                                    <Border Height="32" VerticalAlignment="Top">

                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="1, 1" EndPoint="1, 0">
                                                <GradientStop Color="{Binding Source={StaticResource SystemAltMediumColor}, Converter={StaticResource ToTransparentColor}}" Offset="0.0" />
                                                <GradientStop Color="{ThemeResource SystemAltMediumColor}" Offset="1.0" />
                                            </LinearGradientBrush>
                                        </Border.Background>

                                    </Border>


                                    <Border Height="48" BorderThickness="0" VerticalAlignment="Bottom" >
                                        <Border.Background>
                                            <LinearGradientBrush x:Name="ControlPanelBackgroundBrush" StartPoint="1, 0" EndPoint="1, 1">
                                                <GradientStop Color="{Binding Source={StaticResource SystemAltMediumColor}, Converter={StaticResource ToTransparentColor}}" Offset="0.0" x:Name="GradientStop1"/>
                                                <GradientStop Color="{ThemeResource SystemAltMediumColor}" Offset="1.0" x:Name="GradientStop2" />
                                            </LinearGradientBrush>
                                        </Border.Background>

                                        <Border.RenderTransform>
                                            <TranslateTransform Y="0" />
                                        </Border.RenderTransform>

                                        <i:Interaction.Behaviors>
                                            <core:EventTriggerBehavior EventName="Tapped">
                                                <core:ChangePropertyAction TargetObject="{Binding IsDisplayControlUI}" PropertyName="Value" Value="False" />
                                            </core:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </Border>

                                    <Border VerticalAlignment="Center"
                                            HorizontalAlignment="Left"
                                            >
                                        <Button MinWidth="24"
                                                Height="120"
                                                Command="{Binding OpenPreviousPlaylistItemCommand}"
                                                IsEnabled="{Binding PlaylistCanGoBack.Value}"
                                                BorderBrush="{StaticResource HohoemaPlayerBackgroundBrush}"
                                                BorderThickness="0 1 1 1"
                                            >
                                            <TextBlock FontFamily="Segoe MDL2 Assets" 
                                                       Text="&#xE016;" 
                                                       FontSize="20"
                                                       Foreground="{ThemeResource HohoemaPlayerBackgroundBrush}"
                                                       >
                                            </TextBlock>
                                        </Button>
                                    </Border>

                                    <Border VerticalAlignment="Center"
                                            HorizontalAlignment="Right"
                                            >
                                        <Button MinWidth="24"
                                                Height="120"
                                                Command="{Binding OpenNextPlaylistItemCommand}"
                                                IsEnabled="{Binding PlaylistCanGoNext.Value}"
                                                BorderBrush="{StaticResource HohoemaPlayerBackgroundBrush}"
                                                BorderThickness="1 1 0 1"
                                                >
                                            <TextBlock FontFamily="Segoe MDL2 Assets" 
                                                       Text="&#xE017;" 
                                                       FontSize="20"
                                                       Foreground="{ThemeResource HohoemaPlayerBackgroundBrush}"
                                                           >
                                            </TextBlock>
                                        </Button>
                                    </Border>




                                </Grid>
                            </toolkit:DockPanel>




                            <!-- Compact Overlay UIControl -->
                            <Grid x:Name="CompactOverlayUIControl"
                                  Visibility="Collapsed"
                                  Background="{StaticResource HohoemaPlayerBackgroundBrush}"
                                  >

                                <Grid>
                                    <Border IsHitTestVisible="True" Background="Transparent">

                                        
                                        <i:Interaction.Behaviors>

                                            <core:EventTriggerBehavior EventName="Tapped">
                                                <core:ChangePropertyAction TargetObject="{Binding IsDisplayControlUI}" PropertyName="Value" Value="{Binding IsDisplayControlUI.Value, Converter={StaticResource BooleanInverted}}" />
                                            </core:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </Border>
                                </Grid>

                                <toolkit:DockPanel>
                                    
                                    <Border toolkit:DockPanel.Dock="Top" 
                                            Height="32"
                                            Background="{StaticResource HohoemaPlayerBackgroundBrush}"
                                            >
                                        <TextBlock Text="{Binding Title}" 
                                                   Style="{StaticResource CaptionTextBlockStyle}"
                                                   VerticalAlignment="Center"
                                                   Margin="14 0 8 0"
                                                   />

                                    </Border>

                                    <toolkit:DockPanel toolkit:DockPanel.Dock="Top">
                                        <Button x:Name="CO_CloseButton"
                                                Command="{Binding ClosePlayerCommand}"
                                                Background="Transparent"
                                                toolkit:DockPanel.Dock="Left"
                                                UseSystemFocusVisuals="True"
                                                >
                                            <iconPack:PackIconMaterial Kind="Close" />
                                        </Button>

                                        <Border />
                                    </toolkit:DockPanel>

                                    <Slider Value="{Binding ElementName=SeekBarSlider, Path=Value, Mode=TwoWay}" 
                                        Maximum="{Binding VideoLength.Value, Mode=OneWay}"
                                        Style="{StaticResource VideoProgressBarStyle}"
                                        HorizontalAlignment="Stretch"
                                        IsEnabled="False"
                                        Opacity="0.6"
                                        toolkit:DockPanel.Dock="Bottom"
                                        
                                         >
                                        <Slider.RenderTransform>
                                            <TranslateTransform Y="8" />
                                        </Slider.RenderTransform>


                                    </Slider>

                                    <StackPanel VerticalAlignment="Bottom">
                                        <!-- 再生コントロール -->
                                        
                                        <Grid Padding="8 0 8 0"  >

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <StackPanel Orientation="Horizontal">

                                                <Button x:Name="CO_ToggleCommentDisplayButton"
                                                     Command="{Binding ToggleDisplayCommentCommand}"
                                                     Background="Transparent"
                                                      >
                                                    <Grid>
                                                        <iconPack:PackIconMaterial
                                                            Kind="Comment"
                                                            Width="18"
                                                            Height="18"
                                                            />
                                                        <Canvas>
                                                            <Line X1="{Binding ElementName=CommentIcon, Path=ActualWidth}" 
                                                              Y1="0"
                                                              X2="0" 
                                                              Y2="{Binding ElementName=CommentIcon, Path=ActualHeight}"
                                                              Stroke="Red"
                                                              StrokeThickness="3"
                                                              Visibility="{Binding IsCommentDisplayEnable.Value, Converter={StaticResource BooleanToVisibilityInverted}}"
                                                              Opacity="0.7"
                                                             />
                                                        </Canvas>
                                                    </Grid>
                                                </Button>


                                            </StackPanel>

                                            <!-- 再生 -->
                                            <StackPanel Orientation="Horizontal"
                                                    Grid.Column="1"
                                                    >


                                                <Button Background="Transparent" 
                                                        Command="{Binding PreviewVideoPositionCommand}"
                                                        Margin="0 0 8 0"
                                                        x:Name="CO_PreviewVideoPositionButton"
                                                >
                                                    <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xED3C;" 
                                                           FontSize="20"
                                                           />
                                                </Button>

                                                <Button Command="{Binding TogglePlayPauseCommand}"
                                                    Background="Transparent"
                                                    Margin="0 0 0 0"
                                                        x:Name="CO_PlayPauseButton" 
                                            
                                              >
                                                    <iconPack:PackIconMaterial Kind="Play" 
                                                                               x:Name="CO_PlayPauseButtonIcon" 
                                                                    RenderTransformOrigin="0.5, 0.5"
                                                                    >
                                                        <iconPack:PackIconMaterial.RenderTransform>
                                                            <CompositeTransform ScaleX="1.35" ScaleY="1.35"/>
                                                        </iconPack:PackIconMaterial.RenderTransform>

                                                    </iconPack:PackIconMaterial>
                                                </Button>

                                                <Button Background="Transparent"
                                                    Command="{Binding ForwardVideoPositionCommand}"
                                                    x:Name="CO_ForwardVideoPositionButton"
                                                        Margin="8 0 0 0"
                                                    >
                                                    <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xED3D;"
                                                       FontSize="20"
                                           
                                                   
                                                       />
                                                </Button>

                                            </StackPanel>

                                            <!-- Fullscreen / More -->
                                            <toolkit:WrapPanel Orientation="Horizontal"
                                                            Grid.Column="2"
                                                            HorizontalAlignment="Right"
                                                            VerticalAlignment="Center"
                                                    >

                                                <Button Command="{Binding ToggleCompactOverlayCommand}"
                                                        Background="Transparent"
                                                        x:Name="CO_CompactOverlayButton"
                                                    
                                                        >
                                                    <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE944;"
                                                       FontSize="24"
                                                       />
                                                </Button>

                                            </toolkit:WrapPanel>

                                        </Grid>

                                        <TextBox x:Name="CO_CommentTextBox" 
                                             Text="{Binding WritingComment.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             Style="{StaticResource BGTransparentTextBoxStyle}"
                                            FontSize="18"
                                            VerticalAlignment="Center"
                                            MaxLength="75"
                                                 MaxWidth="320"
                                            IsTabStop="True"
                                            toolkitext:TextBoxFocusExtensions.AutoSelectOnFocus="True"
                                            PlaceholderText="コメント"
                                            HorizontalAlignment="Stretch"
                                            Margin="8 0 8 0"
                                            HorizontalContentAlignment="Stretch"
                                            Height="18"
                                                >
                                            <i:Interaction.Behaviors>

                                                <mybehavior:FocusGetter IsFocus="{Binding NowCommentWriting.Value, Mode=TwoWay}" />

                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                    </StackPanel>
                                </toolkit:DockPanel>



                                <Border VerticalAlignment="Center"
                                            HorizontalAlignment="Left"
                                        x:Name="CO_OpenPreviousPlaylistItemButton"
                                        Margin="0 0 0 8"
                                            >
                                    <Button MinWidth="48"
                                                Height="80"
                                                Command="{Binding OpenPreviousPlaylistItemCommand}"
                                                IsEnabled="{Binding PlaylistCanGoBack.Value}"
                                                BorderBrush="{StaticResource HohoemaPlayerBackgroundBrush}"
                                                BorderThickness="0 1 1 1"
                                            >
                                        <TextBlock FontFamily="Segoe MDL2 Assets" 
                                                       Text="&#xE016;" 
                                                       FontSize="20"
                                                       Foreground="{ThemeResource HohoemaPlayerBackgroundBrush}"
                                                       >
                                        </TextBlock>
                                    </Button>
                                </Border>

                                <Border VerticalAlignment="Center"
                                            HorizontalAlignment="Right"
                                        x:Name="CO_OpenNextPlaylistItemButton"
                                        Margin="0 0 0 8"
                                            >
                                    <Button MinWidth="48"
                                                Height="80"
                                                Command="{Binding OpenNextPlaylistItemCommand}"
                                                IsEnabled="{Binding PlaylistCanGoNext.Value}"
                                                BorderBrush="{StaticResource HohoemaPlayerBackgroundBrush}"
                                                BorderThickness="1 1 0 1"
                                                >
                                        <TextBlock FontFamily="Segoe MDL2 Assets" 
                                                       Text="&#xE017;" 
                                                       FontSize="20"
                                                       Foreground="{ThemeResource HohoemaPlayerBackgroundBrush}"
                                                           >
                                        </TextBlock>
                                    </Button>
                                </Border>

                            </Grid>

                            
                        </Grid>


                        <Grid Visibility="{Binding IsDisplayControlUI.Value, Converter={StaticResource BooleanToVisibilityInverted}}">
                            <Border IsHitTestVisible="True" Background="Transparent">
                                <i:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="Tapped">
                                        <core:ChangePropertyAction TargetObject="{Binding IsDisplayControlUI}" PropertyName="Value" Value="{Binding IsDisplayControlUI.Value, Converter={StaticResource BooleanInverted}}" />
                                    </core:EventTriggerBehavior>
                                </i:Interaction.Behaviors>
                            </Border>
                        </Grid>


                        

                        <Grid 
                            
                            >

                            <!-- サポートされていないプロトコル・動画形式 -->
                            <Border HorizontalAlignment="Left"
                                  VerticalAlignment="Top"
                                  Margin="32 64"
                                  Visibility="{Binding IsNotSupportVideoType, Converter={StaticResource BooleanToVisibility}}"
                                  Background="{StaticResource AppBarItemPointerOverBackgroundThemeBrush}"
                                Padding="16"
                          >

                                <StackPanel Orientation="Horizontal">

                                    <iconPack:PackIconMaterial Kind="Exclamation"
                                        Margin="8 8 16 8"
                                                               Width="32"
                                                               Height="32"
                                        />

                                    <StackPanel>
                                        <TextBlock Text="動画を再生できません"
                                                   VerticalAlignment="Center"    
                                                   Style="{StaticResource SubtitleTextBlockStyle}"
                                                   Margin="0 0 0 8"
                                                   />

                                        <TextBlock VerticalAlignment="Center"
                                                   TextWrapping="Wrap"
                                                   Width="300"
                                                   >
                                            <Run Text="{Binding CannotPlayReason}" />
                                        </TextBlock>

                                        <HyperlinkButton Content="ブラウザで表示"
                                                 Command="{Binding OpenVideoPageWithBrowser}"
                                                 >
                                        </HyperlinkButton>

                                    </StackPanel>
                                </StackPanel>
                            </Border>




                        </Grid>


                    </Grid>


                </SplitView.Content>
            </SplitView>




            


        </toolkit:LayoutTransformControl>
    </Grid>
</Page>
