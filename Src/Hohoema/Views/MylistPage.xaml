<Page
    x:Name="PageRoot"
    x:Class="NicoPlayerHohoema.Views.MylistPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NicoPlayerHohoema.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mvvm="using:Prism.Windows.Mvvm"
    xmlns:view="using:NicoPlayerHohoema.Views"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:mybehavior="using:NicoPlayerHohoema.Views.Behaviors"
    xmlns:controls="using:NicoPlayerHohoema.Views.Controls"
    xmlns:iconPack="using:MahApps.Metro.IconPacks"
    xmlns:mytrigger="using:NicoPlayerHohoema.Views.StateTrigger"
    xmlns:hardtrigger="using:AdaptiveTriggerLibrary.Triggers.HardwareInterfaceTriggers"
    xmlns:hohoemalistItem="using:NicoPlayerHohoema.Views.HohoemaListItem"
    mvvm:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">

    <i:Interaction.Behaviors>
        <core:EventTriggerBehavior EventName="Unloaded">
            <core:CallMethodAction TargetObject="{Binding}" MethodName="Dispose" />
        </core:EventTriggerBehavior>
    </i:Interaction.Behaviors>
    
    <Grid>
        <VisualStateManager.VisualStateGroups>

            <!-- ウィンドウサイズごとの表示 -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="520" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="TitleLayout.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding CanEditMylist, Converter={StaticResource BooleanInverted}}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <mytrigger:EqualConditionStateTrigger Condition="LoginUser" Value="{Binding MylistOrigin.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="EditMylistButton.Visibility" Value="Visible" />
                        <Setter Target="DeleteMylistButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <mytrigger:EqualConditionStateTrigger Condition="Local" Value="{Binding MylistOrigin.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="EditMylistButton.Visibility" Value="Visible" />
                        <Setter Target="DeleteMylistButton.Visibility" Value="Visible" />

                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <mytrigger:EqualConditionStateTrigger Condition="OtherUser" Value="{Binding MylistOrigin.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="FeedRegstrationButton.Visibility" Value="Visible" />
                        <Setter Target="ToggleMylistFavoriteButton.Visibility" Value="Visible" />

                    </VisualState.Setters>
                </VisualState>

            </VisualStateGroup>
            
        </VisualStateManager.VisualStateGroups>


        <controls:ListingWithHeader 
            x:Name="ListingWithHeader"
            ItemsSource="{Binding IncrementalLoadingItems, Mode=OneWay}"
            SelectedItems="{Binding SelectedItems}"
            RefreshCommand="{Binding RefreshCommand}"
            ItemCommand="{StaticResource OpenContentCommand}"
            IsTVModeEnabled="{Binding IsForceTVModeEnable.Value}"
            IsSelectionEnabled="{Binding IsSelectionModeEnable.Value}"
            NowLoading="{Binding NowLoading.Value}"
            >
            <controls:ListingWithHeader.HeaderContent>
                <toolkit:DockPanel >

                    <StackPanel toolkit:DockPanel.Dock="Right" 
                                Orientation="Horizontal"
                                >

                        <StackPanel Visibility="{Binding IsSelectionModeEnable.Value, Converter={StaticResource BooleanToVisibilityInverted}}"
                                    Orientation="Horizontal"
                                    >
                            <Button Background="Transparent"
                                    Command="{StaticResource AddFeedSourceCommand}"
                                    CommandParameter="{Binding MylistBookmark}"
                                    x:Name="FeedRegstrationButton"
                                    Visibility="Collapsed"
                                    >
                                <TextBlock Text="フィード登録" />
                            </Button>

                            <Button Command="{Binding OpenUserPageCommand}"
                                Background="Transparent"
                                    x:Name="OpenUserPageButton"
                                    Visibility="{Binding IsLocalMylist, Converter={StaticResource BooleanToVisibilityInverted}}"
                                     >
                                <SymbolIcon Symbol="People" />
                            </Button>

                            <Button x:Name="EditMylistButton"
                                            Command="{Binding EditMylistGroupCommand}"
                                            Background="Transparent"
                                            Visibility="Collapsed"
                                            >
                                <StackPanel Orientation="Horizontal">
                                    <SymbolIcon Symbol="Edit" />
                                </StackPanel>
                            </Button>
                            <ToggleButton x:Name="ToggleMylistFavoriteButton"
                                                  IsChecked="{Binding IsFavoriteMylist.Value, Mode=TwoWay}"
                                                  IsEnabled="{Binding CanChangeFavoriteMylistState.Value}"
                                                  Background="Transparent"                                                  
                                                  Visibility="Collapsed"
                                                >
                                <StackPanel Orientation="Horizontal">
                                    <SymbolIcon Symbol="Favorite" />
                                </StackPanel>
                            </ToggleButton>

                            <Button x:Name="DeleteMylistButton"
                                            Command="{Binding DeleteMylistCommand}"
                                            Height="32"
                                            Background="Transparent"
                                            Visibility="Collapsed"
                                          >
                                <StackPanel Orientation="Horizontal">
                                    <SymbolIcon Symbol="Delete" />
                                </StackPanel>
                            </Button>
                        </StackPanel>

                        <StackPanel Visibility="{Binding IsSelectionModeEnable.Value, Converter={StaticResource BooleanToVisibility}}"
                                            Orientation="Horizontal"
                                            >

                            <Button Command="{Binding RegistratioMylistCommand}"
                                            Background="Transparent"
                                            >
                                <StackPanel Orientation="Horizontal">
                                    <SymbolIcon Symbol="Add" />
                                    <TextBlock Text="マイリストに追加"
                                                   VerticalAlignment="Center"
                                                   />
                                </StackPanel>
                            </Button>
                            <Button Command="{Binding UnregistrationMylistCommand}"
                                            Visibility="{Binding IsUserOwnerdMylist, Converter={StaticResource BooleanToVisibility}}"
                                            Background="Transparent"
                                            >
                                <StackPanel Orientation="Horizontal">
                                    <SymbolIcon Symbol="Remove" />
                                    <TextBlock Text="マイリスト解除"
                                                VerticalAlignment="Center"
                                                />
                                </StackPanel>
                            </Button>

                            <Button Command="{Binding RequestCacheDownload}"
                                            Visibility="{Binding CanDownload, Converter={StaticResource BooleanToVisibility}}"
                                            Background="Transparent"
                                            >
                                <StackPanel Orientation="Horizontal">
                                    <SymbolIcon Symbol="Download" />
                                    <TextBlock Text="キャッシュ"
                                            VerticalAlignment="Center"
                                            />
                                </StackPanel>
                            </Button>

                        </StackPanel>



                        <AppBarToggleButton IsChecked="{Binding IsSelectionModeEnable.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch"
                                            Label="選択"
                                            >
                            <iconPack:PackIconMaterial Kind="CheckboxMarkedOutline" 
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       />
                        </AppBarToggleButton>

                    </StackPanel>

                    <StackPanel Background="Transparent" IsHitTestVisible="True"
                                    Margin="16 8 0 0"
                                    >

                        <i:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="Tapped">
                                <core:ChangePropertyAction TargetObject="{x:Bind ListingWithHeader}" PropertyName="ListPosition" Value="0.0" />
                            </core:EventTriggerBehavior>
                        </i:Interaction.Behaviors>

                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Title, Mode=OneWay}" 
                                            VerticalAlignment="Center"
                                            Style="{StaticResource TitleTextBlockStyle}"
                                       
                                       x:Name="TitleLayout"
                                            />

                        </StackPanel>






                        <StackPanel Orientation="Horizontal" Visibility="{Binding IsSelectionModeEnable.Value, Converter={StaticResource BooleanToVisibilityInverted}}"
                                           Margin="0 4"
                                           >

                            <TextBlock FontSize="14">
                                        <Run Text="{Binding UserName}" /> の <Run Text="{Binding MylistState}" />
                            </TextBlock>

                            <Border Visibility="{Binding IsLoginUserDeflist, Converter={StaticResource BooleanToVisibility}}"
                                            Margin="8 0 0 0"
                                            >
                                <TextBlock>
                                    (登録:<Run Text="{Binding DeflistRegistrationCount}" /> 上限:<Run Text="{Binding DeflistRegistrationCapacity}" />)
                                </TextBlock>

                            </Border>
                            <Border Visibility="{Binding IsLoginUserMylistWithoutDeflist, Converter={StaticResource BooleanToVisibility}}"
                                            Margin="8 0 0 0"
                                            >
                                <TextBlock >
                                    (登録:<Run Text="{Binding MaxItemsCount.Value}" /> 合計:<Run Text="{Binding MylistRegistrationCount}" /> 上限:<Run Text="{Binding MylistRegistrationCapacity}" />)
                                </TextBlock>

                            </Border>
                        </StackPanel>
                    </StackPanel>
                </toolkit:DockPanel>
            </controls:ListingWithHeader.HeaderContent>


            <controls:ListingWithHeader.ListItemTemplate>
                <DataTemplate>
                    <Grid>
                        <local:VideoInfoControl />
                    </Grid>
                </DataTemplate>
            </controls:ListingWithHeader.ListItemTemplate>

            <controls:ListingWithHeader.GridItemTemplate>
                <DataTemplate>
                    <controls:VideoInfoControl_TV />
                </DataTemplate>
            </controls:ListingWithHeader.GridItemTemplate>
        </controls:ListingWithHeader>
    </Grid>
</Page>
