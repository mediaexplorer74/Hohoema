<Page
    x:Class="NicoPlayerHohoema.Views.LivePlayerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NicoPlayerHohoema.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls"
    xmlns:toolkitext="using:WinRTXamlToolkit.Controls.Extensions"
    xmlns:mybehavior="using:NicoPlayerHohoema.Views.Behaviors"
    xmlns:logicalTrigger="using:AdaptiveTriggerLibrary.Triggers.LogicalTriggers"
    xmlns:intractionTrigger="using:AdaptiveTriggerLibrary.Triggers.UserInteractionTriggers"
    xmlns:uiTrigger="using:AdaptiveTriggerLibrary.Triggers.UserInterfaceTriggers"
    xmlns:hardTrigger="using:AdaptiveTriggerLibrary.Triggers.HardwareInterfaceTriggers"
    xmlns:myTrigger ="using:NicoPlayerHohoema.Views.StateTrigger"
    xmlns:media="using:Microsoft.Xaml.Interactions.Media"
    xmlns:uwptoolkit="using:Microsoft.Toolkit.Uwp.UI.Animations.Behaviors"
    xmlns:iconPack="using:MahApps.Metro.IconPacks"
    xmlns:mvvm="using:Prism.Windows.Mvvm"
    xmlns:controls="using:NicoPlayerHohoema.Views.Controls"
    mvvm:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">

    <UserControl.Resources>

        <MenuFlyout x:Name="LivePlayerFlyout">

            <!--
            <MenuFlyoutSubItem Text="画質" 
                                                               x:Name="LeoLiveQualityMenuFlyoutSubItem"
                                                               Visibility="Collapsed"
                                                               >
                <MenuFlyoutItem Text="高画質" 
                                                                Command="{Binding ChangeQualityCommand}"
                                                                CommandParameter="high"
                                                                />
                <MenuFlyoutItem Text="通常画質" 
                                                                Command="{Binding ChangeQualityCommand}"
                                                                CommandParameter="normal"
                                                                />
                <MenuFlyoutItem Text="低画質" 
                                                                Command="{Binding ChangeQualityCommand}"
                                                                CommandParameter="low"
                                                                />
                <MenuFlyoutItem Text="モバイル画質" 
                                                                Command="{Binding ChangeQualityCommand}"
                                                                CommandParameter="super_low"
                                                                />
            </MenuFlyoutSubItem>

            <MenuFlyoutSeparator Visibility="Collapsed"
                                 x:Name="LeoLiveQualityMenuFlyoutSeparator"
                                 />
            -->

            <MenuFlyoutSubItem Text="共有" x:Name="MenuSubItem_Share">
                <MenuFlyoutItem Text="アプリを選択" Command="{Binding ShareCommand}"/>
                <MenuFlyoutItem Text="Twitterで共有" Command="{Binding ShereWithTwitterCommand}" />
                <MenuFlyoutItem Text="コピー" Command="{Binding ShareWithClipboardCommand}" />
            </MenuFlyoutSubItem>

            <MenuFlyoutItem Text="共有" x:Name="MenuSubItem_Share_TV" Visibility="Collapsed" Command="{Binding ShareCommand}"/>

            <MenuFlyoutSeparator  />

            <MenuFlyoutItem Text="配信者情報" Command="{Binding OpenBroadcastCommunityCommand}" />

            <!-- 
            <MenuFlyoutItem Text="プレイヤー設定" 
                            Command="{Binding SelectSidePaneContentCommand}"
                            CommandParameter="Setting"
                            >
            </MenuFlyoutItem>
            
            <MenuFlyoutItem Text="小さく表示" Command="{Binding PlayerSmallWindowDisplayCommand}">
                <i:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Tapped">
                        <core:ChangePropertyAction TargetObject="{Binding IsDisplayControlUI, Mode=TwoWay}" PropertyName="Value" Value="False" />
                    </core:EventTriggerBehavior>
                </i:Interaction.Behaviors>
            </MenuFlyoutItem>

            <ToggleMenuFlyoutItem Text="横持ち固定" 
                                                              x:Name="ForceRotateToggleButton" 
                                                              Visibility="Collapsed"
                                                              IsChecked="{Binding IsForceLandscape.Value, Mode=TwoWay}"
                                                              />

            -->


        </MenuFlyout>

        <local:PlayerSidePaneContentTemplateSelecter x:Key="PlayerSidePaneContentTemplateSelecter">
            
            <local:PlayerSidePaneContentTemplateSelecter.Empty>
                <DataTemplate>
                    <!-- empty -->
                </DataTemplate>
            </local:PlayerSidePaneContentTemplateSelecter.Empty>
            
            <local:PlayerSidePaneContentTemplateSelecter.Playlist>
                <DataTemplate>
                    <local:PlaylistSidePaneContent />
                </DataTemplate>
            </local:PlayerSidePaneContentTemplateSelecter.Playlist>

            <local:PlayerSidePaneContentTemplateSelecter.Comments>
                <DataTemplate>
                    <local:CommentsSidePaneContent />
                </DataTemplate>
            </local:PlayerSidePaneContentTemplateSelecter.Comments>

            <local:PlayerSidePaneContentTemplateSelecter.Settings>
                <DataTemplate>
                    <local:LiveSettingsSidePaneContent />
                </DataTemplate>
            </local:PlayerSidePaneContentTemplateSelecter.Settings>
        </local:PlayerSidePaneContentTemplateSelecter>

        
        
    </UserControl.Resources>

    <i:Interaction.Behaviors>
        <core:EventTriggerBehavior EventName="Unloaded">
            <core:CallMethodAction TargetObject="{Binding}" MethodName="Dispose" />
        </core:EventTriggerBehavior>
    </i:Interaction.Behaviors>


    <Border x:Name="LayoutRoot">
        <VisualStateManager.VisualStateGroups>

            <!-- 画面サイズごとの表示・非表示に切り替え -->
            <VisualStateGroup>
                <!-- 一番幅が広いとき -->
                <!--
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="721" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>
                -->
                <!-- 中ぐらい -->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="521" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>

                    </VisualState.Setters>
                </VisualState>
                <!-- 超狭い -->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="CommentTextBox.(Grid.Row)" Value="0" />
                        <Setter Target="CommentTextBox.(Grid.RowSpan)" Value="1" />
                        <Setter Target="CommentTextBox.(Grid).Column)" Value="0" />
                        <Setter Target="CommentTextBox.(Grid).ColumnSpan)" Value="6" />

                        <Setter Target="CommentCommandEditButton.(Grid.Row)" Value="1" />
                        <Setter Target="CommentCommandEditButton.(Grid.RowSpan)" Value="1" />
                        <Setter Target="CommentCommandEditButton.(Grid.Column)" Value="0" />
                        <Setter Target="CommentCommandEditButton.(Grid.ColumnSpan)" Value="3" />

                        <Setter Target="CommentSubmitButton.(Grid.Row)" Value="1" />
                        <Setter Target="CommentSubmitButton.(Grid.RowSpan)" Value="1" />
                        <Setter Target="CommentSubmitButton.(Grid.Column)" Value="3" />
                        <Setter Target="CommentSubmitButton.(Grid.ColumnSpan)" Value="3" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>



            <!-- キーボード入力によるコメント書き込みショートカットの有効・無効 -->
            <VisualStateGroup>

                <VisualState>
                    <VisualState.StateTriggers>
                        <myTrigger:CompactOverlayViewModeTrigger />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="CommentWriteBeginKeyboardTrigger.IsEnabled" Value="False" />

                        <Setter Target="CO_CommentWriteBeginKeyboardTrigger.IsEnabled" Value="True" />
                    </VisualState.Setters>

                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding NowCommentWriting.Value}" />
                        <StateTrigger IsActive="{Binding ElementName=PlayerSplitView, Path=IsPaneOpen}" />
                        <StateTrigger IsActive="{Binding IsSmallWindowModeEnable.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="CommentWriteBeginKeyboardTrigger.IsEnabled" Value="False" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding NowCommentWriting.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="CommentWriteExitKeyboardTrigger.IsEnabled" Value="True" />
                        <Setter Target="CommentSubmitKeyboardTrigger.IsEnabled" Value="True" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>



            <!-- ミュートの有効・無効 -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsMuted.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="VolumeButtonIcon.Symbol" Value="Mute" />
                        <Setter Target="MuteToggleButton.Icon" Value="Mute" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsMuted.Value, Converter={StaticResource BooleanInverted}}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="VolumeButtonIcon.Symbol" Value="Volume" />
                        <Setter Target="MuteToggleButton.Icon" Value="Volume" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>


            <!-- Landscape固定ボタンの表示管理 -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <intractionTrigger:InteractionModeTrigger Condition="Touch" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ForceRotateToggleButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>


            <!-- Landscape固定ボタンの表示管理 -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <intractionTrigger:InteractionModeTrigger Condition="Touch" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ForceRotateToggleButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <!-- モバイルの縦持ち時のLandscape固定処理 -->
            <VisualStateGroup>

                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsSmallWindowModeEnable.Value}" />

                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LayoutRotateTranform.Angle" Value="0" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsForceLandscape.Value, Converter={StaticResource BooleanInverted}}" />

                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LayoutRotateTranform.Angle" Value="0" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState>
                    <VisualState.StateTriggers>
                        <logicalTrigger:MultiTrigger ConditionModifier="{StaticResource AndModifier}">
                            <logicalTrigger:MultiTrigger.Triggers>
                                <uiTrigger:OrientationTrigger Condition="Portrait" />
                                <intractionTrigger:InteractionModeTrigger Condition="Touch" />
                            </logicalTrigger:MultiTrigger.Triggers>
                        </logicalTrigger:MultiTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LayoutRotateTranform.Angle" Value="90" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            
            <!-- 別ウィンドウで開く -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsDisplayInSecondaryView}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="DisplayWithMainViewButton.Visibility" Value="Visible" />
                        <Setter Target="SmallWindowButton.Visibility" Value="Collapsed" />

                        <Setter Target="CloseButton.Visibility" Value="Collapsed" />
                        <Setter Target="CO_CloseButton.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <hardTrigger:DeviceFamilyTrigger Condition="Desktop" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="DisplayWithSecondaryViewButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>


            <!-- 小窓表示 -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsSmallWindowModeEnable.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ControlUIRoot.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding NowPlaying.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>

                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="True" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>


            <!-- コンパクトオーバーレイ切り替えボタンの表示・非表示 -->
            <VisualStateGroup >

                <VisualState>
                    <VisualState.StateTriggers>
                        <myTrigger:IsSupportCompactOverlayTrigger />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="CompactOverlayButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>

            </VisualStateGroup>

            <!-- コンパクトオーバーレイ表示中のコントロールUI切り替え -->
            <VisualStateGroup >

                <VisualState>
                    <VisualState.StateTriggers>
                        <myTrigger:CompactOverlayViewModeTrigger />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="CompactOverlayUIControl.Visibility" Value="Visible" />
                        <Setter Target="DefaultUIControl.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>


            </VisualStateGroup>


            <!-- Xbox -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <hardTrigger:DeviceFamilyTrigger Condition="Xbox" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>

                        <Setter Target="MenuSubItem_Share.Visibility" Value="Collapsed" />
                        <Setter Target="MenuSubItem_Share_TV.Visibility" Value="Visible" />
                        
                        
                        <Setter Target="TitleLayout.Padding" Value="48 0" />
                        <Setter Target="TopBarLayout.Padding" Value="48 27 48 0" />
                        <Setter Target="CommentLayout.Padding" Value="48 8 48 27" />
                        <Setter Target="PlaybackControlLayout.Padding" Value="48 8" />
                        <Setter Target="LiveInfoLayout.Padding" Value="48 0" />


                        <Setter Target="TVModeDisplayOptionsButtonButton.Visibility" Value="Visible" />
                        <Setter Target="MobileAndDesktopDisplayOptionsButton.Visibility" Value="Collapsed" />

                    </VisualState.Setters>
                </VisualState>

            </VisualStateGroup>


            

            <!-- Flash or DMC 放送サーバーごとの表示 -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <myTrigger:EqualConditionStateTrigger Value="{Binding LivePlayerType.Value}" Condition="Leo" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PlayerTypeTextBlock.Text" Value="新配信" />
                        <!--
                        <Setter Target="LeoLiveQualityMenuFlyoutSubItem.Visibility" Value="Visible" />
                        <Setter Target="LeoLiveQualityMenuFlyoutSeparator.Visibility" Value="Visible" />
                        -->
                    </VisualState.Setters>
                </VisualState>

                <VisualState>
                    <VisualState.StateTriggers>
                        <myTrigger:EqualConditionStateTrigger Value="{Binding LivePlayerType.Value}" Condition="Aries" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PlayerTypeTextBlock.Text" Value="Flash" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

        </VisualStateManager.VisualStateGroups>

        <toolkit:LayoutTransformControl
                x:Name="LayoutTransform"
                >
            <toolkit:LayoutTransformControl.Transform>
                <RotateTransform x:Name="LayoutRotateTranform" Angle="0" />
            </toolkit:LayoutTransformControl.Transform>


            <SplitView PanePlacement="Right"
                           x:Name="PlayerSplitView"
                           IsTabStop="False"
                       
                               >

                <i:Interaction.Behaviors>
                    <!-- サイドペインのコンテンツVMが指定されたらサイドペインを開く -->

                    <!-- 条件に{x:Null}ではなく PlayerSidePaneContentType.None を指定しているのは
                         nullの場合、閉じた後のバインディングエラーによって
                         意図しない値が書き戻される可能性があるためです
                    -->

                    <core:DataTriggerBehavior Binding="{Binding CurrentSidePaneContentType.Value}" 
                                              ComparisonCondition="NotEqual" 
                                              Value="{x:Null}"
                                              >
                        <core:ChangePropertyAction PropertyName="IsPaneOpen" Value="True" />
                    </core:DataTriggerBehavior>

                    <!-- サイドペインが閉じられたら コンテンツVMをリセット -->
                    <core:EventTriggerBehavior EventName="PaneClosed">
                        <core:ChangePropertyAction TargetObject="{Binding CurrentSidePaneContentType}" 
                                                   PropertyName="Value" 
                                                   Value="{x:Null}" 
                                                   />
                    </core:EventTriggerBehavior>

                </i:Interaction.Behaviors>

                <SplitView.Pane>
                    <Grid x:Name="PlayerSidePaneLayout">
                        <ContentControl Content="{Binding CurrentSidePaneContent.Value}"
                                        ContentTemplateSelector="{StaticResource PlayerSidePaneContentTemplateSelecter}"
                                        HorizontalContentAlignment="Stretch"
                                        VerticalContentAlignment="Stretch"
                                        IsTabStop="False"
                                        />
                    </Grid>

                </SplitView.Pane>

                <Grid x:Name="MediaControl"
                  ContextFlyout="{StaticResource LivePlayerFlyout}"
                  >

                    <i:Interaction.Behaviors>

                        <!-- マウスの非表示 -->
                        <mybehavior:AutoHideCursor x:Name="AutoHideCursor"
                                IsAutoHideEnabled="{Binding IsMouseCursolAutoHideEnable.Value, Mode=OneWay}"
                                AutoHideDelay="0:0:2"
                                />

                        <mybehavior:KeyboardTrigger Key="Enter" x:Name="CommentSubmitKeyboardTrigger">
                            <mybehavior:KeyboardTrigger.Actions>
                                <core:InvokeCommandAction Command="{Binding CommentSubmitCommand}" />
                            </mybehavior:KeyboardTrigger.Actions>
                        </mybehavior:KeyboardTrigger>

                        <mybehavior:KeyboardTrigger Key="Escape" x:Name="CommentWriteExitKeyboardTrigger" IsEnabled="False">
                            <mybehavior:KeyboardTrigger.Actions>
                                <core:ChangePropertyAction TargetObject="{Binding ElementName=CommentTextBox}" PropertyName="IsEnabled" Value="False" />
                                <core:ChangePropertyAction TargetObject="{Binding ElementName=CommentTextBox}" PropertyName="IsEnabled" Value="True" />
                                <core:ChangePropertyAction TargetObject="{Binding ElementName=CO_CommentTextBox}" PropertyName="IsEnabled" Value="False" />
                                <core:ChangePropertyAction TargetObject="{Binding ElementName=CO_CommentTextBox}" PropertyName="IsEnabled" Value="True" />
                            </mybehavior:KeyboardTrigger.Actions>
                        </mybehavior:KeyboardTrigger>

                        <!-- キー入力でコメント入力開始 -->
                        <mybehavior:KeyboardTrigger x:Name="CommentWriteBeginKeyboardTrigger">
                            <mybehavior:KeyboardTrigger.Actions>
                                <core:ChangePropertyAction TargetObject="{Binding IsDisplayControlUI}" PropertyName="Value" Value="True" />
                                <mybehavior:SetFocus TargetObject="{Binding ElementName=CommentTextBox}" Delay="00:00:00.25" />
                            </mybehavior:KeyboardTrigger.Actions>
                        </mybehavior:KeyboardTrigger>
                        <mybehavior:KeyboardTrigger x:Name="CO_CommentWriteBeginKeyboardTrigger" IsEnabled="False">
                            <mybehavior:KeyboardTrigger.Actions>
                                <mybehavior:SetFocus TargetObject="{Binding ElementName=CO_CommentTextBox}" Delay="00:00:00" />
                                <core:ChangePropertyAction TargetObject="{Binding ElementName=PlayerControlAutoHide}" PropertyName="IsVisible" Value="True" />
                            </mybehavior:KeyboardTrigger.Actions>
                        </mybehavior:KeyboardTrigger>


                        <mybehavior:MouseWheelTrigger>
                            <mybehavior:MouseWheelTrigger.UpActions>
                                <core:InvokeCommandAction Command="{Binding VolumeUpCommand}" />
                            </mybehavior:MouseWheelTrigger.UpActions>
                            <mybehavior:MouseWheelTrigger.DownActions>
                                <core:InvokeCommandAction Command="{Binding VolumeDownCommand}" />
                            </mybehavior:MouseWheelTrigger.DownActions>
                        </mybehavior:MouseWheelTrigger>


                        <core:EventTriggerBehavior EventName="Loaded">
                            <mybehavior:SetFocus TargetObject="{Binding ElementName=VolumeButton}" />
                        </core:EventTriggerBehavior>

                        <mybehavior:UINavigationTrigger Kind="Cancel" Hold="True" 
                                                        IsEnabled="{Binding IsSmallWindowModeEnable.Value, Converter={StaticResource BooleanInverted}}"
                                                        >
                            <core:InvokeCommandAction Command="{Binding ClosePlayerCommand}" />
                        </mybehavior:UINavigationTrigger>

                    </i:Interaction.Behaviors>

                    <MediaPlayerElement x:Name="mediaElem"
                                  AutoPlay="True"
                                  
                            >
                        <i:Interaction.Behaviors>

                            <mybehavior:MediaPlayerSetter MediaPlayer="{Binding MediaPlayer, Mode=OneWay}" />
                            <mybehavior:MediaPlayerElementContentHeightGetter ContentHeight="{Binding CommentCanvasHeight.Value, Mode=TwoWay}"
                                                                            />
                            <!-- 再生開始時にUIを非表示に-->
                            <!--
                        <core:DataTriggerBehavior Binding="{Binding CurrentState.Value}" ComparisonCondition="Equal" Value="Opening">
                            <core:CallMethodAction TargetObject="{Binding ElementName=PlayerControlAutoHide}" MethodName="Hide" />
                        </core:DataTriggerBehavior>
                        -->

                            <!-- 再生停止時にUIを表示状態に切替-->
                            <!--
                        <core:DataTriggerBehavior Binding="{Binding CurrentState.Value}" ComparisonCondition="Equal" Value="Closed">
                            <core:CallMethodAction TargetObject="{Binding ElementName=PlayerControlAutoHide}" MethodName="Show" />
                        </core:DataTriggerBehavior>
                        -->

                            <!-- 小窓表示時にUIを非表示に-->
                            <!--
                        <core:DataTriggerBehavior Binding="{Binding IsSmallWindowModeEnable.Value}" ComparisonCondition="Equal" Value="True">
                            <core:CallMethodAction TargetObject="{Binding ElementName=PlayerControlAutoHide}" MethodName="Hide" />
                        </core:DataTriggerBehavior>
                        -->

                        </i:Interaction.Behaviors>
                    </MediaPlayerElement>


                    <Grid Height="{Binding CommentCanvasHeight.Value}">

                        <local:CommentRendererCompositionUI
                                    x:Name="CommentRederer"
                                    Comments="{Binding LiveComments}"
                                    MediaPlayer="{Binding MediaPlayer, Mode=OneWay}"                                 
                                    Visibility="{Binding IsCommentDisplayEnable.Value, Converter={StaticResource BooleanToVisibility}}"
                                    CommentSizeScale="{Binding CommentFontScale.Value}"
                                    CommentDefaultColor="{Binding CommentDefaultColor.Value}"
                                    DefaultDisplayDuration="{Binding RequestCommentDisplayDuration.Value}"
                                    Opacity="{Binding CommentOpacity.Value, Mode=OneWay}"
                                    UpdateInterval="0:0:0.032"
                                    />

                        <Border  VerticalAlignment="Bottom"
                                 HorizontalAlignment="Left"
                                 >
                            <Border.Background>
                                <SolidColorBrush Color="{ThemeResource SystemAltMediumColor}"/>
                            </Border.Background>

                            
                            <TextBlock Text="{Binding PermanentDisplayText.Value}" 
                                   TextWrapping="Wrap"
                                   />

                        </Border>

                    </Grid>

                    <ProgressRing Visibility="{Binding NowConnecting.Value, Mode=OneWay, Converter={StaticResource BooleanToVisibility}}"
                                  IsActive="{Binding NowConnecting.Value, Mode=OneWay}"
                                  Width="48"
                                  Height="48"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Top"
                                  Margin="24 88"      
                                  />


                    <Border IsHitTestVisible="True" Background="Transparent">
                        <i:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="Tapped">
                                <core:ChangePropertyAction TargetObject="{Binding IsDisplayControlUI, Mode=TwoWay}" PropertyName="Value" Value="{Binding IsDisplayControlUI.Value, Converter={StaticResource BooleanInverted}}" />
                            </core:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                    </Border>


                    <!-- 音量表示 -->
                    <controls:InstantContent DisplayContent="{Binding SoundVolume.Value, Mode=OneWay}"
                                                 HorizontalAlignment="Left"
                                                 VerticalAlignment="Top"
                                                 Margin="16"
                                                 >
                        <controls:InstantContent.Background>
                            <SolidColorBrush Color="{ThemeResource SystemAltMediumColor}" />
                        </controls:InstantContent.Background>
                        <controls:InstantContent.DisplayContentTemplate>
                            <DataTemplate>
                                <Grid Margin="16 2 16 4">
                                    <Border>
                                        <TextBlock FontSize="20" VerticalAlignment="Center">
                                                <Run Text="音量" />:
                                                <Run Text="{Binding Converter={StaticResource ToUserFriendlySoubleVolume}}" FontSize="22" />%
                                        </TextBlock>
                                    </Border>
                                </Grid>
                            </DataTemplate>
                        </controls:InstantContent.DisplayContentTemplate>
                    </controls:InstantContent>

                    <Grid x:Name="ControlUIRoot" >

                        <i:Interaction.Behaviors>
                            <mybehavior:VisiblityFadeChanger x:Name="PlayerControlAutoHide" 
                                                         Delay="{Binding AutoHideDelayTime.Value}"
                                                         IsAnimationEnable="{Binding IsSmallWindowModeEnable.Value, Converter={StaticResource BooleanInverted}}"
                                                         IsVisible="{Binding IsDisplayControlUI.Value, Mode=TwoWay}"
                                                         IsAutoHideEnabled="{Binding IsAutoHideEnable.Value, Mode=OneWay}"
                        />

                            <core:DataTriggerBehavior Binding="{Binding IsDisplayControlUI.Value}" Value="True">
                                <mybehavior:SetFocus TargetObject="{Binding ElementName=RefreshButton}" Delay="00:00:00.00"  />
                            </core:DataTriggerBehavior>

                        </i:Interaction.Behaviors>

                        <toolkit:DockPanel x:Name="DefaultUIControl">
                            <StackPanel toolkit:DockPanel.Dock="Top" >

                                <Border x:Name="TopBarLayout"
                                >
                                    <Border.Background>
                                        <SolidColorBrush Color="{ThemeResource SystemAltMediumColor}"/>
                                    </Border.Background>

                                    <toolkit:DockPanel>

                                        <Button Command="{Binding ClosePlayerCommand}"
                                            Background="Transparent"
                                            toolkit:DockPanel.Dock="Left"
                                            UseSystemFocusVisuals="True"
                                                x:Name="CloseButton"
                                            >
                                            <iconPack:PackIconMaterial Kind="Close" />
                                        </Button>


                                        <Border />

                                    </toolkit:DockPanel>

                                </Border>




                                <Border Height="32">

                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="1, 1" EndPoint="1, 0">
                                            <GradientStop Color="{Binding Source={StaticResource SystemAltMediumColor}, Converter={StaticResource ToTransparentColor}}" Offset="0.0" />
                                            <GradientStop Color="{ThemeResource SystemAltMediumColor}" Offset="1.0" />
                                        </LinearGradientBrush>
                                    </Border.Background>

                                    <i:Interaction.Behaviors>
                                        <core:EventTriggerBehavior EventName="Tapped">
                                            <core:ChangePropertyAction TargetObject="{Binding IsDisplayControlUI, Mode=TwoWay}" PropertyName="Value" Value="False" />
                                        </core:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </Border>

                            </StackPanel>

                            <StackPanel 
                                toolkit:DockPanel.Dock="Bottom"
                                HorizontalAlignment="Stretch"
                                >

                                <Border Height="48">
                                    <Border.Background>
                                        <LinearGradientBrush x:Name="ControlPanelBackgroundBrush" StartPoint="1, 0" EndPoint="1, 1">
                                            <GradientStop Color="{Binding Source={StaticResource SystemAltMediumColor}, Converter={StaticResource ToTransparentColor}}" Offset="0.0" x:Name="GradientStop1"/>
                                            <GradientStop Color="{ThemeResource SystemAltMediumColor}" Offset="1.0" x:Name="GradientStop2" />
                                        </LinearGradientBrush>
                                    </Border.Background>

                                    <i:Interaction.Behaviors>
                                        <core:EventTriggerBehavior EventName="Tapped">
                                            <core:ChangePropertyAction TargetObject="{Binding IsDisplayControlUI, Mode=TwoWay}" PropertyName="Value" Value="False" />
                                        </core:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </Border>

                                <StackPanel x:Name="TitleLayout" >
                                    <StackPanel.Background>
                                        <SolidColorBrush Color="{ThemeResource SystemAltMediumColor}"/>
                                    </StackPanel.Background>

                                    
                                    <TextBlock Text="{Binding LiveTitle}" FontSize="24" Margin="8" HorizontalAlignment="Center" TextWrapping="Wrap" />

                                    <i:Interaction.Behaviors>
                                        <core:EventTriggerBehavior EventName="Tapped">
                                            <core:ChangePropertyAction TargetObject="{Binding IsDisplayControlUI, Mode=TwoWay}" PropertyName="Value" Value="False" />
                                        </core:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </StackPanel>



                                <!-- 生放送情報 -->
                                <Border toolkit:DockPanel.Dock="Top"
                                        x:Name="LiveInfoLayout"
                                >
                                    <Border.Background>
                                        <SolidColorBrush Color="{ThemeResource SystemAltMediumColor}"/>
                                    </Border.Background>
                                    
                                    <toolkit:DockPanel 
                                               >

                                        <StackPanel Orientation="Horizontal"
                                            toolkit:DockPanel.Dock="Left"
                                            >



                                            <!-- 放送時間 -->
                                            <toolkit:DockPanel
                                     Margin="16"
                                    
                                     >

                                                <SymbolIcon Symbol="Clock" 
                                                Margin="8 0"
                                                Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                                />

                                                <TextBlock  HorizontalAlignment="Right"
                                               VerticalAlignment="Bottom"
                                               IsHitTestVisible="False"
                                               Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                               Margin="0 0 24 0"
                                                FontSize="18"
                                            >
                                        <Run Text="{Binding LiveElapsedTime, Converter={StaticResource TimeToMovieLengthConverter}}" />
                                                </TextBlock>
                                            </toolkit:DockPanel>

                                            <!-- 来場者数・コメント数 -->
                                            <StackPanel Orientation="Horizontal"
                                            >
                                                <SymbolIcon Symbol="View" 
                                                Margin="8 0"
                                                Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                                />

                                                <TextBlock VerticalAlignment="Center"
                                               IsHitTestVisible="False"
                                               Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                               Margin="0 0 8 0"
                                                FontSize="18"
                                            >
                                        <Run Text="{Binding WatchCount.Value, Converter={StaticResource ToUserFriendlyNumber}}" />
                                                </TextBlock>

                                                <SymbolIcon Symbol="Comment" 
                                                Margin="8 0"
                                                Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                                />

                                                <TextBlock VerticalAlignment="Center"
                                               IsHitTestVisible="False"
                                               Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                               Margin="0 0 8 0"
                                                FontSize="18"
                                            >
                                        <Run Text="{Binding CommentCount.Value, Converter={StaticResource ToUserFriendlyNumber}}" />
                                                </TextBlock>

                                            </StackPanel>
                                        </StackPanel>


                                        <StackPanel Orientation="Vertical"
                                            toolkit:DockPanel.Dock="Right"
                                            Margin="0 0 16 0"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Right"
                                            >




                                            <!-- 画質 -->
                                            <StackPanel Orientation="Horizontal" Margin="0 0 0 8"
                                                        HorizontalAlignment="Right"
                                                        Visibility="{Binding CurrentQuality.Value, Converter={StaticResource NotNullToVisibility}}"
                                                >
                                                <TextBlock Text=""
                                               x:Name="PlayerTypeTextBlock"
                                               Margin="0 0"
                                               VerticalAlignment="Center"
                                               Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                               />

                                                <TextBlock VerticalAlignment="Center"
                                                   Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                                   x:Name="LeoLiveQualityTextBlock"
                                                   >
                                            (<Run Text="{Binding CurrentQuality.Value, Converter={StaticResource ToLocalText}}" />)
                                                </TextBlock>

                                                <TextBlock Visibility="{Binding IsLowLatency.Value, Converter={StaticResource BooleanToVisibility}}"
                                                           Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                                           Margin="8 0 0 0"
                                                           >
                                                    <Run Text="低遅延" />
                                                </TextBlock>
                                            </StackPanel>

                                            <TextBlock VerticalAlignment="Center"
                                                Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"                                                
                                               >
                                                <Run Text="{Binding RoomName}" />
                                                <Run Text="-" />
                                                <Run Text="{Binding SeetId}" />
                                                <Run Text="番" />
                                            </TextBlock>
                                        </StackPanel>

                                        <Border />


                                        <i:Interaction.Behaviors>
                                            <core:EventTriggerBehavior EventName="Tapped">
                                                <core:ChangePropertyAction TargetObject="{Binding IsDisplayControlUI, Mode=TwoWay}" PropertyName="Value" Value="False" />
                                            </core:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>

                                    </toolkit:DockPanel>

                                </Border>




                                <!-- 再生コントロール -->
                                <Grid Padding="8"
                                    x:Name="PlaybackControlLayout"
                                    >
                                    <Grid.Background>
                                        <SolidColorBrush Color="{ThemeResource SystemAltMediumColor}"/>
                                    </Grid.Background>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <StackPanel Orientation="Horizontal">

                                        <!-- 音量 -->
                                        <Button 
                                              Background="Transparent"
                                              UseSystemFocusVisuals="True"
                                              >

                                            <SymbolIcon Symbol="Mute"
                                                x:Name="VolumeButtonIcon"
                                                />

                                            <Button.Flyout>
                                                <Flyout>
                                                    <toolkit:DockPanel
                                                toolkit:DockPanel.Dock="Right"
                                                Margin="0 0 16 0"
                                                  Height="66"
                                                >

                                                        <StackPanel Background="#AA777777"
                                                toolkit:DockPanel.Dock="Left"
                                                >
                                                            <AppBarButton Icon="Volume" 
                                                      Label="ミュート"
                                                      VerticalAlignment="Stretch"
                                                      x:Name="MuteToggleButton"
                                                      Command="{Binding ToggleMuteCommand}"    
                                                  >

                                                            </AppBarButton>
                                                        </StackPanel>


                                                        <StackPanel Margin="8 0" 
                                                Orientation="Vertical">



                                                            <Slider x:Name="VolumeSlider"
                                                            Orientation="Horizontal"
                                                            VerticalAlignment="Top"
                                                            Margin="8 4"
                                                            Value="{Binding SoundVolume.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                            IsThumbToolTipEnabled="True"
                                                            ThumbToolTipValueConverter="{StaticResource ToUserFriendlySoubleVolume}"
                                                            Maximum="1.0"
                                                            Minimum="0.0"
                                                            StepFrequency="0.01"
                                                            SmallChange="0.01"
                                                            LargeChange="0.1"
                                                            Height="32"
                                                            Width="160"
                                                            Background="Transparent"
                                                    >
                                                            </Slider>
                                                            <TextBlock Text="音量" 
                                                   VerticalAlignment="Center"
                                                   Margin="8 0 0 0"
                                                   HorizontalAlignment="Center"
                                                   FontSize="12"
                                                   />

                                                        </StackPanel>



                                                    </toolkit:DockPanel>
                                                </Flyout>
                                            </Button.Flyout>
                                        </Button>

                                        <Button Command="{Binding ToggleDisplayCommentCommand}"
                                            Background="Transparent"
                                                  >
                                            <Grid>
                                                <iconPack:PackIconMaterial
                                                Kind="Comment"
                                                x:Name="CommentIcon"
                                                Width="18"
                                                Height="18"
                                                />
                                                <Canvas>
                                                    <Line X1="{Binding ElementName=CommentIcon, Path=ActualWidth}" 
                                                      Y1="0"
                                                      X2="0" 
                                                      Y2="{Binding ElementName=CommentIcon, Path=ActualHeight}"
                                                  Stroke="Red"
                                                      StrokeThickness="3"
                                                  Visibility="{Binding IsCommentDisplayEnable.Value, Converter={StaticResource BooleanToVisibilityInverted}}"
                                                  Opacity="0.7"
                                                  />
                                                </Canvas>
                                            </Grid>
                                        </Button>

                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" x:Name="MiddleUIControlLayout"
                                        Grid.Column="1"
                                        >

                                        <!-- 更新 -->
                                        <Button x:Name="RefreshButton"
                                              Command="{Binding UpdateCommand}"
                                              VerticalAlignment="Stretch"
                                              IsEnabled="{Binding NowUpdating.Value, Converter={StaticResource BooleanInverted}}"
                                              UseSystemFocusVisuals="True"
                                              Background="Transparent"
                                              >
                                            <SymbolIcon Symbol="Refresh" />
                                        </Button>



                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal"
                                        Grid.Column="2"
                                    HorizontalAlignment="Right"
                                        >

                                        <Button Background="Transparent"
                                                        x:Name="MobileAndDesktopDisplayOptionsButton"
                                                        >
                                            <Button.Flyout>
                                                <Flyout>
                                                    <StackPanel Orientation="Horizontal">

                                                        <Button Command="{Binding PlayerSmallWindowDisplayCommand}"
                                                                        Background="Transparent"
                                                                        x:Name="SmallWindowButton"  
                                                                        >
                                                            <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                                                <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE743;"
                                                                                   FontSize="24"
                                                                                   VerticalAlignment="Center"
                                                                                   Height="24"
                                                                                   Width="24"
                                                                                   HorizontalAlignment="Center"
                                                                                   Margin="0 0 0 8"
                                                                               />

                                                                <TextBlock Text="小窓" 
                                                                                   Style="{StaticResource CaptionTextBlockStyle}"
                                                                                   VerticalAlignment="Center" />

                                                            </StackPanel>
                                                        </Button>






                                                        <Button Command="{Binding ToggleCompactOverlayCommand}"
                                                                        Background="Transparent"
                                                                        x:Name="CompactOverlayButton"
                                                                        Visibility="Collapsed"
                                                                        >
                                                            <StackPanel Orientation="Vertical">

                                                                <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE8A7;"
                                                                                   FontSize="24"
                                                                                   VerticalAlignment="Center"
                                                                                   Height="24"
                                                                                   Width="24"
                                                                                   HorizontalAlignment="Center"
                                                                                   Margin="0 0 0 8"
                                                                               />
                                                                <TextBlock Text="ミニモード" 
                                                                                   Style="{StaticResource CaptionTextBlockStyle}"
                                                                                   VerticalAlignment="Center" />
                                                            </StackPanel>
                                                        </Button>



                                                        <Button Command="{Binding ToggleFullScreenCommand}"
                                                                        Background="Transparent"
                                                                        x:Name="FullscreenButton"  
                                                                        >
                                                            <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                                                <toolkit:LayoutTransformControl Margin="0 0 0 8">
                                                                    <iconPack:PackIconMaterial x:Name="FullscreenButtonIcon"  
                                                                                Kind="Fullscreen"                                                                                                        
                                                                                Width="24"
                                                                                Height="24"
                                                                                HorizontalAlignment="Center"
                                                                            >

                                                                    </iconPack:PackIconMaterial>
                                                                </toolkit:LayoutTransformControl>


                                                                <TextBlock Text="全画面" 
                                                                                   Style="{StaticResource CaptionTextBlockStyle}"
                                                                                   VerticalAlignment="Center" />

                                                            </StackPanel>
                                                        </Button>


                                                        <Button Command="{Binding PlayerDisplayWithMainViewCommand}"
                                                                        Background="Transparent"
                                                                        x:Name="DisplayWithMainViewButton"
                                                                        Visibility="Collapsed"
                                                                        >
                                                            <StackPanel Orientation="Vertical">
                                                                <iconPack:PackIconMaterial Kind="CheckboxBlankOutline"
                                                                                                   Margin="0 0 0 8"
                                                                                                   Height="24"
                                                                                                   Width="24"
                                                                                                   HorizontalAlignment="Center"
                                                                                                   />

                                                                <TextBlock Text="メインビューで表示" 
                                                                                   Style="{StaticResource CaptionTextBlockStyle}"
                                                                                   VerticalAlignment="Center" />
                                                            </StackPanel>
                                                        </Button>

                                                        <Button Command="{Binding PlayerDisplayWithSecondaryViewCommand}"
                                                                        Background="Transparent"
                                                                        x:Name="DisplayWithSecondaryViewButton"
                                                                        Visibility="Collapsed"
                                                                        >
                                                            <StackPanel Orientation="Vertical">
                                                                <iconPack:PackIconMaterial Kind="CheckboxMultipleBlankOutline"
                                                                                                   Margin="0 0 0 8"
                                                                                                   Height="24"
                                                                                                   Width="24"
                                                                                                   HorizontalAlignment="Center"
                                                                                                   />

                                                                <TextBlock Text="新しいビューで表示" 
                                                                                   Style="{StaticResource CaptionTextBlockStyle}"
                                                                                   VerticalAlignment="Center" />
                                                            </StackPanel>
                                                        </Button>



                                                        <Button Visibility="Collapsed"
                                                                              x:Name="SplitWindowButton"
                                                                              Background="Transparent"
                                                                              >
                                                            <StackPanel Orientation="Vertical">
                                                                <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE78B;"
                                                                                   FontSize="24"
                                                                                   VerticalAlignment="Center"
                                                                                   Height="24"
                                                                                   Width="24"
                                                                                   HorizontalAlignment="Center"
                                                                                   Margin="0 0 0 8"
                                                                               />
                                                                <TextBlock Text="別ウィンドウ" 
                                                                                   Style="{StaticResource CaptionTextBlockStyle}"
                                                                                   VerticalAlignment="Center" />
                                                            </StackPanel>
                                                        </Button>

                                                        <ToggleButton Background="Transparent"
                                                                        x:Name="ForceRotateToggleButton" 
                                                                        Visibility="Collapsed"
                                                                        IsChecked="{Binding IsForceLandscape.Value, Mode=TwoWay}"
                                                                        >
                                                            <StackPanel>
                                                                <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE8B4;"
                                                                                   FontSize="24"
                                                                                   VerticalAlignment="Center"
                                                                                   Height="24"
                                                                                   Width="24"
                                                                                   HorizontalAlignment="Center"
                                                                                   Margin="0 0 0 8"
                                                                               />

                                                                <TextBlock Text="横持ち固定"
                                                                                   Style="{StaticResource CaptionTextBlockStyle}"
                                                                                   VerticalAlignment="Center"
                                                                                   />
                                                            </StackPanel>
                                                        </ToggleButton>


                                                    </StackPanel>
                                                </Flyout>
                                            </Button.Flyout>


                                            <Grid>
                                                <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE97C;"
                                                                                   FontSize="24"
                                                                                   VerticalAlignment="Center"
                                                                                   Height="24"
                                                                                   Width="24"
                                                                                   HorizontalAlignment="Center"
                                                                               />
                                            </Grid>

                                        </Button>


                                        <Button Command="{Binding PlayerSmallWindowDisplayCommand}"
                                                        Background="Transparent"
                                                        x:Name="TVModeDisplayOptionsButtonButton"  
                                                        Visibility="Collapsed"
                                                        >
                                            <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                                <toolkit:LayoutTransformControl Margin="0 0 0 8">
                                                    <iconPack:PackIconMaterial Kind="WindowMinimize" 
                                                                                                   Width="24"
                                                                                                   Height="24"
                                                                                                       HorizontalAlignment="Center"
                                                                            >
                                                    </iconPack:PackIconMaterial>
                                                </toolkit:LayoutTransformControl>

                                                <TextBlock Text="小窓表示" 
                                                                                   Style="{StaticResource CaptionTextBlockStyle}"
                                                                                   VerticalAlignment="Center" />

                                            </StackPanel>
                                        </Button>



                                        <Button Command="{Binding SelectSidePaneContentCommand}"
                                                        CommandParameter="Setting" 
                                                        Background="Transparent"
                                                        >
                                            <SymbolIcon Symbol="Setting" />
                                        </Button>

                                        <Button UseSystemFocusVisuals="True"
                                        Background="Transparent"
                                        Flyout="{StaticResource LivePlayerFlyout}"
                                              >
                                            <SymbolIcon Symbol="More" />

                                        </Button>
                                    </StackPanel>

                                </Grid>





                                <!-- Comment関連 -->
                                <!-- コメントを書く -->
                                <Grid x:Name="CommentLayout" >
                                    <Grid.Background>
                                        <SolidColorBrush Color="{ThemeResource SystemAltMediumColor}"/>
                                    </Grid.Background>
                                    
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="1*" />
                                    </Grid.ColumnDefinitions>

                                    <TextBox x:Name="CommentTextBox" 
                                                Text="{Binding WritingComment.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     Style="{StaticResource BGTransparentTextBoxStyle}"
                                                FontSize="18"
                                                VerticalAlignment="Center"
                                                MaxLength="75"
                                                IsTabStop="True"
                                                toolkitext:TextBoxFocusExtensions.AutoSelectOnFocus="True"
                                                PlaceholderText="コメント"
                                                HorizontalAlignment="Stretch"
                                            Margin="8 0 8 8"
                                            HorizontalContentAlignment="Stretch"
                                            Height="40"
                                             
                                             Grid.RowSpan="2"
                                             Grid.Column="1"
                                             Grid.ColumnSpan="4"
                                                >
                                        <i:Interaction.Behaviors>

                                            <mybehavior:FocusGetter IsFocus="{Binding NowCommentWriting.Value, Mode=TwoWay}" />


                                            <mybehavior:KeyboardTrigger Key="Escape">
                                                <mybehavior:KeyboardTrigger.Actions>
                                                    <core:ChangePropertyAction TargetObject="{Binding ElementName=CommentTextBox}" PropertyName="IsEnabled" Value="False" />
                                                    <core:ChangePropertyAction TargetObject="{Binding ElementName=CommentTextBox}" PropertyName="IsEnabled" Value="True" />
                                                </mybehavior:KeyboardTrigger.Actions>
                                            </mybehavior:KeyboardTrigger>

                                            <mybehavior:KeyboardTrigger Key="Enter" IsEnabled="{Binding NowCommentWriting.Value, Mode=OneWay}">
                                                <mybehavior:KeyboardTrigger.Actions>
                                                    <core:InvokeCommandAction Command="{Binding CommentSubmitCommand}" />
                                                </mybehavior:KeyboardTrigger.Actions>
                                            </mybehavior:KeyboardTrigger>

                                        </i:Interaction.Behaviors>
                                    </TextBox>


                                    <Button Content="{Binding CommandString.Value}" 
                                            Margin="0 0 8 8"
                                            HorizontalAlignment="Stretch"
                                            HorizontalContentAlignment="Center"
                                            DataContext="{Binding}"
                                            x:Name="CommentCommandEditButton"
                                            Height="40"
                                            UseSystemFocusVisuals="True"
                                            Grid.RowSpan="2"
                                             Grid.Column="0"
                                             Grid.ColumnSpan="1"
                                        >
                                        <Button.Flyout>
                                            <Flyout>
                                                <local:CommentCommandEditer DataContext="{Binding CommandEditerVM}" />
                                            </Flyout>
                                        </Button.Flyout>
                                    </Button>

                                    <Button Content="投稿"  Margin="8 0 0 8"
                                                Height="40"
                                                Command="{Binding CommentSubmitCommand}"
                                                x:Name="CommentSubmitButton"
                                            HorizontalAlignment="Stretch"
                                            HorizontalContentAlignment="Center"
                                            UseSystemFocusVisuals="True"
                                            Grid.RowSpan="2"
                                             Grid.Column="5"
                                             Grid.ColumnSpan="1"
                                            
                                                />
                                </Grid>
                            </StackPanel>


                            <Border IsHitTestVisible="True" Background="Transparent">
                                <i:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="Tapped">
                                        <core:ChangePropertyAction TargetObject="{Binding IsDisplayControlUI, Mode=TwoWay}" PropertyName="Value" Value="False" />
                                    </core:EventTriggerBehavior>
                                </i:Interaction.Behaviors>

                            </Border>


                        </toolkit:DockPanel>


                        <!-- Compact Overlay UIControl -->
                        <Grid x:Name="CompactOverlayUIControl"
                                               Visibility="Collapsed"
                                  >
                            <Grid.Background>
                                <SolidColorBrush Color="{StaticResource SystemAltMediumColor}" />
                            </Grid.Background>

                            <Grid>
                                <Border IsHitTestVisible="True" Background="Transparent">
                                    <i:Interaction.Behaviors>
                                        <core:EventTriggerBehavior EventName="Tapped">
                                            <core:ChangePropertyAction TargetObject="{Binding IsDisplayControlUI}" PropertyName="Value" Value="{Binding IsDisplayControlUI.Value, Converter={StaticResource BooleanInverted}}" />
                                        </core:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </Border>
                            </Grid>

                            <toolkit:DockPanel>

                                <Border toolkit:DockPanel.Dock="Top" 
                                            Height="32"
                                            >
                                    <Border.Background>
                                        <SolidColorBrush Color="{StaticResource SystemAltMediumColor}" />
                                    </Border.Background>
                                </Border>

                                <toolkit:DockPanel toolkit:DockPanel.Dock="Top">
                                    <Button x:Name="CO_CloseButton"
                                        Command="{Binding ClosePlayerCommand}"
                                        Background="Transparent"
                                        toolkit:DockPanel.Dock="Left"
                                        UseSystemFocusVisuals="True"
                                        >
                                        <iconPack:PackIconMaterial Kind="Close" />
                                    </Button>

                                    <Border />
                                </toolkit:DockPanel>

                                <StackPanel VerticalAlignment="Bottom">


                                    <!-- 放送時間 -->
                                    <StackPanel Orientation="Horizontal"
                                     Margin="8 8"
                                     >

                                        <SymbolIcon Symbol="Clock" 
                                                Margin="8 0"
                                                Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                                />

                                        <TextBlock Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                               Margin="0 0 24 0"
                                                FontSize="18"
                                            >
                                        <Run Text="{Binding LiveElapsedTime, Converter={StaticResource TimeToMovieLengthConverter}}" />
                                        </TextBlock>
                                    </StackPanel>

                                    <!-- 再生コントロール -->
                                    <Grid Padding="8 0 8 0" >

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <StackPanel Orientation="Horizontal">

                                            <Button Command="{Binding ToggleDisplayCommentCommand}"
                                                     Background="Transparent"
                                                      >
                                                <Grid>
                                                    <iconPack:PackIconMaterial
                                                            Kind="Comment"
                                                            Width="18"
                                                            Height="18"
                                                            />
                                                    <Canvas>
                                                        <Line X1="{Binding ElementName=CommentIcon, Path=ActualWidth}" 
                                                              Y1="0"
                                                              X2="0" 
                                                              Y2="{Binding ElementName=CommentIcon, Path=ActualHeight}"
                                                              Stroke="Red"
                                                              StrokeThickness="3"
                                                              Visibility="{Binding IsCommentDisplayEnable.Value, Converter={StaticResource BooleanToVisibilityInverted}}"
                                                              Opacity="0.7"
                                                             />
                                                    </Canvas>
                                                </Grid>
                                            </Button>


                                        </StackPanel>

                                        <!-- 再生 -->
                                        <StackPanel Orientation="Horizontal"
                                                    Grid.Column="1"
                                                    >


                                            <!-- 更新 -->
                                            <Button x:Name="CO_RefreshButton"
                                              Command="{Binding UpdateCommand}"
                                              VerticalAlignment="Stretch"
                                              IsEnabled="{Binding NowUpdating.Value, Converter={StaticResource BooleanInverted}}"
                                              UseSystemFocusVisuals="True"
                                                Background="Transparent"
                                              >
                                                <SymbolIcon Symbol="Refresh" />
                                            </Button>

                                        </StackPanel>

                                        <!-- Fullscreen / More -->
                                        <toolkit:WrapPanel Orientation="Horizontal"
                                                            Grid.Column="2"
                                                            HorizontalAlignment="Right"
                                                            VerticalAlignment="Center"
                                                    >

                                            <Button Command="{Binding ToggleCompactOverlayCommand}"
                                                        Background="Transparent"
                                                        x:Name="CO_CompactOverlayButton"
                                                    
                                                        >
                                                <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE944;"
                                                       FontSize="24"
                                                       />
                                            </Button>

                                        </toolkit:WrapPanel>

                                    </Grid>

                                    <TextBox x:Name="CO_CommentTextBox" 
                                             Text="{Binding WritingComment.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             Style="{StaticResource BGTransparentTextBoxStyle}"
                                            FontSize="16"
                                            VerticalAlignment="Center"
                                            MaxLength="75"
                                            IsTabStop="True"
                                            toolkitext:TextBoxFocusExtensions.AutoSelectOnFocus="True"
                                            PlaceholderText="コメント"
                                            HorizontalAlignment="Stretch"
                                            Margin="8 0 8 0"
                                            HorizontalContentAlignment="Stretch"
                                                 MaxWidth="320"
                                            Height="24"
                                                >
                                        <i:Interaction.Behaviors>

                                            <mybehavior:FocusGetter IsFocus="{Binding NowCommentWriting.Value, Mode=TwoWay}" />

                                        </i:Interaction.Behaviors>
                                    </TextBox>

                                    <Border Height="8" />
                                </StackPanel>
                            </toolkit:DockPanel>




                        </Grid>


                    </Grid>

                    <Grid Visibility="{Binding IsDisplayControlUI.Value, Converter={StaticResource BooleanToVisibilityInverted}}">
                        <Border IsHitTestVisible="True" Background="Transparent">
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:ChangePropertyAction TargetObject="{Binding IsDisplayControlUI}" PropertyName="Value" Value="{Binding IsDisplayControlUI.Value, Converter={StaticResource BooleanInverted}}" />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </Border>


                    </Grid>

                    <!-- タップバリア
                         コメントテキストを書いたあとに画面のどこかをタップしたら
                         ロストフォーカスさせるためのやつ -->
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0 0 0 56" 
                          Background="Transparent"
                          IsHitTestVisible="True"
                          Visibility="{Binding NowCommentWriting.Value, Converter={StaticResource BooleanToVisibility}}"
                          >

                    </Grid>

                    <Border Margin="16 80 0 0"
                            Visibility="{Binding HasSuggestion.Value, Converter={StaticResource BooleanToVisibility}}"
                            Background="{ThemeResource AppBarItemBackgroundThemeBrush}"
                            >
                        <StackPanel Margin="16">
                            <TextBlock Text="{Binding Suggestion.Value.Title}"
                                       FontSize="18"
                                       
                                       />


                            <ItemsControl ItemsSource="{Binding Suggestion.Value.Actions}"
                                          Margin="16 8 0 0"
                                          >
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <HyperlinkButton Content="{Binding Label}"
                                                         Command="{Binding SuggestActionCommand}"
                                                         Margin="0 8"
                                                         />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>

                        </StackPanel>
                    </Border>
                </Grid>

            </SplitView>

        </toolkit:LayoutTransformControl>
    </Border>

</Page>
