<Page
    x:Name="PageRoot"
    x:Class="NicoPlayerHohoema.Views.CacheManagementPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NicoPlayerHohoema.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls"
    xmlns:mvvm="using:Prism.Windows.Mvvm"
    xmlns:mybehavior="using:NicoPlayerHohoema.Views.Behaviors"
    xmlns:ext="using:WinRTXamlToolkit.Controls.Extensions"
    xmlns:controls="using:NicoPlayerHohoema.Views.Controls"
    xmlns:iconPack="using:MahApps.Metro.IconPacks"
    mvvm:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">

    <i:Interaction.Behaviors>
        <core:EventTriggerBehavior EventName="Unloaded">
            <core:CallMethodAction TargetObject="{Binding}" MethodName="Dispose" />
        </core:EventTriggerBehavior>
    </i:Interaction.Behaviors>
    
    <Grid>

        <VisualStateManager.VisualStateGroups>

            <!-- ウィンドウサイズごとの表示 -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="520" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="TitleLayout.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            
            
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsCacheUserAccepted.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="CacheManagementContentLayout.Visibility" Value="Visible" />
                        <Setter Target="NotCacheAcceptedLayout.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsRequireUpdateCacheSaveFolder.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="UpdateButton.Visibility" Value="Collapsed" />
                        <Setter Target="UpdateCacheSaveFolderButton.Visibility" Value="Visible" />

                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>


        <controls:ListingWithHeader 
            x:Name="CacheManagementContentLayout"
            ItemsSource="{Binding IncrementalLoadingItems, Mode=OneWay}"
            SelectedItems="{Binding SelectedItems}"
            RefreshCommand="{Binding RefreshCommand}"
            ItemCommand="{StaticResource OpenContentCommand}"
            IsTVModeEnabled="{Binding IsForceTVModeEnable.Value}"
            IsSelectionEnabled="{Binding IsSelectionModeEnable.Value}"
            NowLoading="{Binding NowLoading.Value}"
            Visibility="Collapsed"
            >
            <controls:ListingWithHeader.HeaderContent>
                <toolkit:DockPanel >
                    <StackPanel toolkit:DockPanel.Dock="Right"
                                Orientation="Horizontal"
                                >

                        <StackPanel Visibility="{Binding IsSelectionModeEnable.Value, Converter={StaticResource BooleanToVisibilityInverted}}"
                                    Orientation="Horizontal"
                                    >
                            <AppBarButton Background="Transparent" 
                                        Command="{Binding RefreshCommand}"
                                        ToolTipService.ToolTip="更新"
                                              Icon="Refresh"
                                              x:Name="UpdateButton"
                                        />

                            <AppBarButton Background="Transparent" 
                                        Command="{Binding ChangeCacheFolderCommand}"
                                        ToolTipService.ToolTip="保存先フォルダを指定"
                                              Icon="SyncFolder"
                                              x:Name="UpdateCacheSaveFolderButton"
                                              Visibility="Collapsed"
                                        />

                            <AppBarButton Icon="More">
                                <AppBarButton.Flyout>
                                    <MenuFlyout>
                                        <MenuFlyoutItem Text="{Binding CacheSaveFolderPath.Value}"
                                                            IsEnabled="False"
                                                            />
                                        <MenuFlyoutItem Text="保存先を開く"
                                                            Command="{Binding OpenCurrentCacheFolderCommand}"
                                                            />

                                        <MenuFlyoutSeparator />

                                        <MenuFlyoutItem Text="保存先を変更"
                                                    Command="{Binding ChangeCacheFolderCommand}"
                                                    >
                                        </MenuFlyoutItem>
                                        <MenuFlyoutItem Text="動画キャッシュ機能利用の確認文を読む" 
                                                    Command="{Binding ReadCacheAcceptTextCommand}"
                                                    />

                                    </MenuFlyout>
                                </AppBarButton.Flyout>

                            </AppBarButton>

                        </StackPanel>


                        <StackPanel Visibility="{Binding IsSelectionModeEnable.Value, Converter={StaticResource BooleanToVisibility}}"
                                    Orientation="Horizontal"
                                    >
                            <AppBarButton Command="{Binding CancelCacheDownloadRequest}"
                                              Icon="Remove"
                                              Label="キャッシュ削除"
                                            />
                            <AppBarSeparator />
                            <AppBarButton Command="{Binding RegistratioMylistCommand}"
                                              Label="マイリストに追加"
                                              Icon="Add"
                                            >
                            </AppBarButton>
                        </StackPanel>



                        <AppBarToggleButton IsChecked="{Binding IsSelectionModeEnable.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch"
                                            Label="選択"
                                            >
                            <iconPack:PackIconMaterial Kind="CheckboxMarkedOutline" 
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       />
                        </AppBarToggleButton>

                    </StackPanel>

                    <Border Background="Transparent" IsHitTestVisible="True"
                                Margin="16 0 0 0"
                                >
                        <i:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="Tapped">
                                <core:ChangePropertyAction TargetObject="{x:Bind CacheManagementContentLayout}" PropertyName="ListPosition" Value="0.0" />
                            </core:EventTriggerBehavior>
                        </i:Interaction.Behaviors>

                        <TextBlock Text="{Binding Title}" 
                                    VerticalAlignment="Center"
                                    Style="{StaticResource TitleTextBlockStyle}"
                                   x:Name="TitleLayout"
                                    >
                        </TextBlock>
                    </Border>
                </toolkit:DockPanel>
            </controls:ListingWithHeader.HeaderContent>


            <controls:ListingWithHeader.ListItemTemplate>
                <DataTemplate>
                    <Grid>
                        <!-- 状態 -->
                        <Grid toolkit:DockPanel.Dock="Right" HorizontalAlignment="Right"
                                    >
                            <StackPanel>
                                <TextBlock Text="{Binding CacheRequestTime}" 
                                               Opacity="0.7"
                                               Margin="0 0 0 4"
                                               FontSize="12"
                                               />
                            </StackPanel>

                        </Grid>

                        <!-- 操作 -->

                        <local:VideoInfoControl />
                    </Grid>
                </DataTemplate>
            </controls:ListingWithHeader.ListItemTemplate>

            <controls:ListingWithHeader.GridItemTemplate>
                <DataTemplate>
                    <controls:VideoInfoControl_TV />
                </DataTemplate>
            </controls:ListingWithHeader.GridItemTemplate>
        </controls:ListingWithHeader>
        
        
        
        <Grid x:Name="NotCacheAcceptedLayout"
              >
            <StackPanel HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                <TextBlock Margin="4">キャッシュ機能を有効にするには</TextBlock>


                <TextBlock Margin="4">
                        <Run>「キャッシュ機能の利用に関する確認」への同意が必要です</Run>
                </TextBlock>

                <Button Content="「キャッシュ機能の利用に関する確認」を表示する" 
                        Command="{Binding RequireEnablingCacheCommand}" 
                        Margin="8 16 8 8"
                         />

            </StackPanel>


        </Grid>
    </Grid>
   
    
</Page>
